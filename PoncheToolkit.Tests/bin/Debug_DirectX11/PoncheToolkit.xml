<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PoncheToolkit</name>
    </assembly>
    <members>
        <member name="T:PoncheToolkit.Core.Components.GameComponent">
            <summary>
            Main abstract class that implements a component that will only be updated and not drawn.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponent.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponent.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponent.Name">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponent.Game">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Components.GameComponent.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Components.GameComponent.OnFinishLoadContent">
            <summary>
            Event raised when finished loading content.
            It is recommended to add any other functionality for loading content using this event,
            to ensure that the any previous loading has completed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.UnloadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponent.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Components.GameComponentsCollection">
            <summary>
            Sorted Dictionary that contain components to be updated.
            <para>The key is the name of the component. The name can be set to the component before calling <see cref="M:PoncheToolkit.Core.Components.GameComponentsCollection.AddComponent``1(PoncheToolkit.Core.Components.IGameComponent)"/>
            or it can be set calling the <see cref="M:PoncheToolkit.Core.Components.GameComponentsCollection.AddComponent``1(``0,System.String)"/></para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponentsCollection.Item(System.String)">
            <summary>
            Retrieve the IGameComponent object for the specified key.
            </summary>
            <param name="key">Name of the component to be retrieved. It is not case sensitive.</param>
            <returns>IGameComponent object.</returns>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponentsCollection.Item(System.Int32)">
            <summary>
            Retrieve the IGameComponent object for the specified key.
            </summary>
            <param name="index">Index of the component to be retrieved.</param>
            <returns>IGameComponent object.</returns>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponentsCollection.Count">
            <summary>
            Get the number of components added.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponentsCollection.Keys">
            <summary>
            Get a list of the keys.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameComponentsCollection.Values">
            <summary>
            Get a list of the values.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Components.GameComponentsCollection.OnComponentAddedHandler">
            <summary>
            Handler to create custom OnComponentAdded event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Components.GameComponentsCollection.OnComponentAdded">
            <summary>
            Event raised when a component has been added successfuly.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.AddComponent``1(PoncheToolkit.Core.Components.IGameComponent)">
            <summary>
            Add a component.
            </summary>
            <param name="component">The component implementation</param>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.AddComponent``1(``0,System.String)">
            <summary>
            Add a component with a specified name.
            </summary>
            <param name="component">The component implementation</param>
            <param name="name">The component name if it has not been specified.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.GetComponent(System.String)">
            <summary>
            Retreive a component by its key.
            It is the same as retrieving an item by its key in [ ].
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.RemoveComponent(System.String)">
            <summary>
            Remove a service by its name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.RemoveComponent(PoncheToolkit.Core.Components.GameComponent)">
            <summary>
            Remove a service by its instance.
            It checks the existance of the component by its name.
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.ContainsKey(System.String)">
            <summary>
            Check if the collection has a component by its name.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.GetEnumerator">
            <summary>
            Get the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.TryGetValue(System.String,PoncheToolkit.Core.Components.IGameComponent@)">
            <summary>
            Try parse a key to get the corresponding value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameComponentsCollection.Dispose">
            <summary>
            Dispose all the <see cref="T:PoncheToolkit.Core.Components.IGameComponent"/> components.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Components.GameRenderableComponent">
            <summary>
            Abstract class that implements a component that will only be updated and drawn.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.GameRenderableComponent.Effects">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameRenderableComponent.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameRenderableComponent.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Components.GameRenderableComponent.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Components.IGameComponent">
            <summary>
            Main component interface.
            In this first approach, all the components that will be included in the game will implement
            this interface.
            </summary>
            <typeparam name="T">The type of the Children for this component.</typeparam>
        </member>
        <member name="P:PoncheToolkit.Core.Components.IGameComponent.Name">
            <summary>
            The unique name of the component so it can be retrieved from the collection.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Components.IGameComponent.Game">
            <summary>
            The instance of the DirectX11 game running.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Components.IGameComponent.UnloadContent">
            <summary>
            Just unload the content preserving the object reference.
            The Dispose method must destroy all the resources references used.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Game">
            <summary>
            Main class that wraps the functionality of SharpDX in four methods, called in the next order:
            <para/>- Initialize - LoadContent - Update - Draw
            <para/>This class can be directly inherited but the specific implementation must be created.
            For specific implementations use the <see cref="T:PoncheToolkit.Core.Game11"/> or <see cref="T:PoncheToolkit.Core.Game12"/> for DirectX11 and DirectX12 respectively.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Game.OnInitialized">
            <summary>
            Event raised when the Initialize method has finished.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Game.OnCameraAddedHandler">
            <summary>
            Handler to create custom OnCameraAdded event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Game.OnCameraAdded">
            <summary>
            Event raised when a Camera has been added to the game.
            The cameras are added as components.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Instance">
            <summary>
            Get the game instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.BackBufferRenderTarget">
            <summary>
            Get or set the render target where the back buffer is set to render its contents. As Dirty.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Services">
            <summary>
            Get the list of all game services.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Renderer">
            <summary>
            Get the main renderer. This will be updated depending on DirectX11 or DirectX12 are used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.HasFormRendered">
            <summary>
            Get if the Form has been rendered so its properties are set.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Name">
            <summary>
            Name of the Game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Title">
            <summary>
            Title to be shown in the game's title bar.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.IsPaused">
            <summary>
            Used to stop updating the main loop. Set as Dirty.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.IsInitialized">
            <summary>
            Get or set if the game has finished initialization.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.IsFocused">
            <summary>
            Gets if the current window of the game has focus.
            If it has no focus, the game stops updating.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.VerticalSyncEnabled">
            <summary>
            Gets or Sets if the game enables the sync with the refresh rate of the monitor. (60 Hz = 60 fps)
            If true it sets a 1 in the first parameter from the Present method inside Draw.
            Else it sets a 0.
            This value is saved in the SyncIntervalParameter variable.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.SyncIntervalParameter">
            <summary>
            The value to be used in the Present method from the swapchain object to determine if 
            the vertical sync is enabled or not. (0 or 1).
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Form">
            <summary>
            Get the instance of the RenderForm where all the content is rendered.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.AppStateManager">
            <summary>
            The complete application state manager.
            Contain the status of the application in its different stages.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.ScreenManager">
            <summary>
            Keep the state of the screens of all the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.ContentManager">
            <summary>
            Get the content manager to load all kind of content into memory.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.SpriteAnimationsManager">
            <summary>
            Get the <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DManager"/> manager to load and render 2D sprites from sprite sheets.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.InputManager">
            <summary>
            Get the input manager that manage all the inputs of the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.SoundManager">
            <summary>
            Get the sound manager that manage all sounds in the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.GameTime">
            <summary>
            The GameTime to measure all the in-game and off-game times.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Settings">
            <summary>
            The game settings to initialize this instance of game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.SystemDescription">
            <summary>
            The description of the adapter used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.Cameras">
            <summary>
            A list of the cameras used in the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.CurrentCamera">
            <summary>
            The current camera used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.ContentDirectoryName">
            <summary>
            The Content Root directory name to put in all the content files of the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.ContentDirectoryFullPath">
            <summary>
            The Content Root directory to put in all the content files of the game.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.IsInterop">
            <summary>
            Property to indicate if the Game is gonna be held in an interop Window. (WPF)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game.DebuggerService">
            <summary>
            The service for debugging. Internal only.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.#ctor(PoncheToolkit.Core.GameSettings)">
            <summary>
            Initialize a game instance with the given settings.
            </summary>
            <param name="settings">The settings objects to initialize the game. If it is null, it is initialized with default values.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Initialize">
            <summary>
            Main method where the initialization is made.
            <para/>Create the swap chain, attach events and start measuring the gameTime.
            <para/>Call the <see cref="M:PoncheToolkit.Core.Game.CreateSwapDescriptionAndDevice"/> method and the <see cref="M:PoncheToolkit.Core.Game.PostDeviceInitialization"/> that must
            be implemented when inherit from this class.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.CreateSwapDescriptionAndDevice">
            <summary>
            Called inside the <see cref="M:PoncheToolkit.Core.Game.Initialize"/> method to create the swap description and the device.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.PostDeviceInitialization">
            <summary>
            Called inside the <see cref="M:PoncheToolkit.Core.Game.Initialize"/> method to initialize extra elements. It is called after <see cref="M:PoncheToolkit.Core.Game.CreateSwapDescriptionAndDevice"/>  method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.WindowResizedEvent(System.Object,System.EventArgs)">
            <summary>
            Event raised when the user has resized the Client Window.
            </summary>
            <param name="sender">The RenderForm object where all the application resides.</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.LoadContent">
            <summary>
            Must be overridden to load the assets and all content.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.UnloadContent">
            <summary>
            This method releases the content as Textures, Models, etc.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Update">
            <summary>
            Main method to update the game logic.
            This method is called just after updating the ScreenManager.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Render">
            <summary>
            Main method to put everything that will be rendered.
            This method is called inside the <see cref="M:PoncheToolkit.Core.Game.mainLoop"/> after the <see cref="M:PoncheToolkit.Core.Game.Update"/> method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Run">
            <summary>
            Main method that must be called to start the game's loop.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.ToggleZBuffer(System.Boolean)">
            <summary>
            Change the Z Buffer status.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.ToggleBlending(PoncheToolkit.BlendingState)">
            <summary>
            Change the Alpha blending status.
            </summary>
            <param name="blendState">The <see cref="T:PoncheToolkit.BlendingState"/> state to set into the GPU.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.AddCamera(PoncheToolkit.Graphics3D.Cameras.Camera,System.Boolean)">
            <summary>
            Method to add a camera and optionally set it as the active camera.
            </summary>
            <param name="camera">The camera to be added.</param>
            <param name="setActive">Set it to be the active camera.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.GetFirstCamera(PoncheToolkit.CameraType)">
            <summary>
            Get the first instance for the type of camera searched.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Dispose">
            <summary>
            Dispose all the managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.Shutdown">
            <summary>
            Dispose the resources and shutdown the game.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.update">
            <summary>
            Private method that update the game services and call the ScreenManager Update method. 
            It is called inside the MainLoop.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.render">
            <summary>
            Private method that just call the ScreenManager Render method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game.mainLoop">
            <summary>
            The main loop called every frame where Update and Render methods are executed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Game11">
            <inheritdoc />
            <summary>
            Class that wrap the functionality of a game using DirectX 11.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.DepthStencilView">
            <summary>
            Get or set the Depth Stencil View. As Dirty.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.DepthStencilState">
            <summary>
            The Depth Stencil State.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.BackBuffer">
            <summary>
            The back buffer.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.DepthBuffer">
            <summary>
            The depth buffer.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.RefreshRate">
            <summary>
            The refresh rate of the first monitor used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.Viewports">
            <summary>
            A list of viewports, if it a single player game, there is always going to be just 1.
            If a split-screen game wants to be implemented, here add more viewports.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game11.UpdatableStateObjects">
            <summary>
            List of objects that can have a 'dirty' status so when a property is changed
            they should be added to this list and their UpdateStatus method will be called.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.Finalize">
            <summary>
            De-constructor. Dispose all resources.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.#ctor">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.#ctor(PoncheToolkit.Core.GameSettings)">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.CreateSwapDescriptionAndDevice">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.PostDeviceInitialization">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.LoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.Update">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.Render">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.AddDirtyObject(PoncheToolkit.Core.IUpdatableState)">
            <summary>
            Add an object to the list of dirty objects.
            Set the <see cref="P:PoncheToolkit.Core.IUpdatableState.IsStateUpdated"/> property to false before adding it.
            </summary>
            <param name="obj">The object to be added.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.RemoveDirtyObject(PoncheToolkit.Core.IUpdatableState)">
            <summary>
            Remove a specific dirty object.
            This is called if an UpdatableObject UpdateState method is called separately.
            </summary>
            <param name="obj">The object to be removed.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.GameTimeService_OnPhysicsUpdateDeltaTime(System.Single@)">
            <summary>
            Event thrown to update the Delta time from the physics engine.
            </summary>
            <param name="physicsDeltaTime"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.GameTimeService_OnPhysicsUpdate(System.Single)">
            <summary>
            Method to set the update of the physics engine.
            </summary>
            <param name="physicsDeltaTime"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.WindowResizedEvent(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.RecreateBuffers">
            <summary>
            Recreate the buffers when resizing.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.RecreateBuffersWpf(SharpDX.Direct3D11.Texture2D,System.Drawing.Size)">
            <summary>
            Recreate the buffers when resizing for wpf, using the buffer from the wpf surface.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game11.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Game12">
            <summary>
            Class that wrap the functionality of a game using DirectX 12.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Game12.Device">
            <summary>
            Main Device to keep a reference for drawing stuff.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.Finalize">
            <summary>
            De-constructor. Dispose all resources.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.#ctor">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.#ctor(PoncheToolkit.Core.GameSettings)">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.CreateSwapDescriptionAndDevice">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.PostDeviceInitialization">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.Render">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.WindowResizedEvent(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Game12.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.GameSettings">
            <summary>
            Class that contain all the global settings a game can have.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.GameSettings.OSVersion">
            <summary>
            The windows versions supported.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.GameSettings.OSVersion.Windows7">
            <summary>
            Windows 7
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.GameSettings.OSVersion.Windows8">
            <summary>
            Windows 8
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.GameSettings.OSVersion.Windows10">
            <summary>
            Windows 10
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.DeviceDriverType">
            <summary>
            The type of driver to create the device.
            <para /> Default: Hardware.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.DeviceCreationFlags">
            <summary>
            Flags to create the device.
            <para /> Default: None.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.Resolution">
            <summary>
            The resolution of the game in pixels.
            <para /> Default: 1280 x 720 (720p).
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.AvailableResolutions">
            <summary>
            The resolution of the game in pixels.
            The list is sorted by the Width resolution first.
            This list is filled when creating the Graphics Device.
            <para /> Default: 1280 x 720 (720p).
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.FeatureLevels">
            <summary>
            Feature Level to create the device.
            <para /> Default: Level_11_1
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.Fullscreen">
            <summary>
            Value to set the game in full-screen mode.
            <para /> Default: false
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.DepthBufferEnabled">
            <summary>
            Get or set if the depth buffer is enabled.
            This value creates a new <see cref="T:SharpDX.Direct3D11.DepthStencilState"/> with the IsDepthEnabled property set.
            <para /> Default: true
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.BlendState">
            <summary>
            Get or set the blend state for the rendering.
            <para /> Default: <see cref="F:PoncheToolkit.BlendingState.Disabled"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.DebugMode">
            <summary>
            Get or set if the debug mode is enabled.
            If this mode is enabled, some debugging info will be rendered on screen.
            This information comes from the <see cref="T:PoncheToolkit.Core.Services.DebuggerRenderableService"/> service.
            There will not exist a <see cref="T:PoncheToolkit.Core.Services.DebuggerRenderableService"/> service in the Services list
            until this DebugMode is set to true the first time.
            Default: disabled.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.LockFramerate">
            <summary>
            Get or set the value if the Framerate should be locked.
            This will create a smooth stable experience but even if the framerate is high,
            it is simulated to keep at 60 FPS.
            If the framerate is low, the game will suffer and the renders will be less, but it wil still keep at 60 FPS.
            <para /> Default: false
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.Draw2DShadows">
            <summary>
            Get or set the value if the Engine will render 2D shadows.
            To render 2D shadows the engine uses the <see cref="T:PoncheToolkit.Core.Services.Dynamic2DLightManagerService"/> service.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.OperatingSystemVersion">
            <summary>
            Get the current operating system.
            If the Engine does not support this version of OS, it will throw an exception.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.Gamma">
            <summary>
            The global gamma value to be sent to the shaders, depending on the monitor.
            Default: 2.0.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.GameSettings.GlobalRenderTargetsFormat">
            <summary>
            The default format to be used for the textures used as RenderTargets like the main back buffer.
            The default value is <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm"/>. This consumes 32 bits per pixel.
            If there are some bandwith restrictions or low performance, try with <see cref="F:SharpDX.DXGI.Format.B5G6R5_UNorm"/>
            that uses only 16 bits per pixel. The color range will be lower but the performance can be somewhat better.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.GameSettings.#ctor">
            <summary>
            Constructor.
            Set the device creation flags to debug if the DEBUG preprocessor variable is defined.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.GameSettings.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.IGraphicsRenderer12">
            <summary>
            Main interface to implement for a Graphics renderer to work on DirectX 12.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IGraphicsRenderer11">
            <summary>
            Main interface to implement for a Graphics renderer to work on DirectX 11.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer11.ImmediateContext">
            <summary>
            The <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> immediate context used to render the 3D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer11.SwapChain">
            <summary>
            The Swap Chain to render.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer11.Device">
            <summary>
            Instance of the device used.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IGraphicsRenderer">
            <summary>
            Main interface to implement to have a graphics renderer.
            This interface has properties that DirectX11 and DirectX12 share.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.Context2D">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> context used to render the 2D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.Rasterizer">
            <summary>
            The rasterizer with properties to how the polygons are drawn.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.SpriteBatch">
            <summary>
            Get the <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.PostProcessEffects">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.Effect"/> effects to be applied to the back buffer before it is displayed.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.PostProcessRenderTarget">
            <summary>
            The main render target where the post processing is made.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.ProcessRenderMode">
            <summary>
            Get or set the rendering type.
            See <see cref="T:PoncheToolkit.ProcessRenderingMode"/> for more information. Set as dirty.
            Default: <see cref="F:PoncheToolkit.ProcessRenderingMode.Immediate"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.ShadingRenderMode">
            <summary>
            Get or set the rendering type.
            See <see cref="T:PoncheToolkit.ShadingRenderingMode"/> for more information. Set as dirty.
            Default: <see cref="F:PoncheToolkit.ShadingRenderingMode.ClusteredForwardShading"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.BitmapProperties2D">
            <summary>
            The BitmapProperties to initialize the 2D render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IGraphicsRenderer.Dpi">
            <summary>
            The dpi of the monitor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IGraphicsRenderer.AddBackBufferPostProcessEffect(System.Int32,PoncheToolkit.Graphics2D.Effects.PTCustomEffect)">
            <summary>
            Add a new <see cref="T:SharpDX.Direct2D1.Effect"/> to the post process effects.
            This effects will be rendered to the final image obtained from the back buffer.
            </summary>
            <param name="order">The order in which the post process effects will be applied.</param>
            <param name="custom2DEffect">The effect to be added. This typically will be an effect that inherits from
            <see cref="T:PoncheToolkit.Graphics2D.Effects.PTCustomEffect"/> like the already implemented <see cref="T:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect"/>.</param>
        </member>
        <member name="M:PoncheToolkit.Core.IGraphicsRenderer.SetRenderTarget2D(SharpDX.Direct2D1.Image)">
            <summary>
            Set the current 2D render target to be used by the <see cref="P:PoncheToolkit.Core.IGraphicsRenderer.SpriteBatch"/> 
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IGraphicsRenderer.SetRenderTarget3D(PoncheToolkit.Graphics3D.PTRenderTarget2D)">
            <summary>
            Set the current render target for 3D elements.
            If the target sent is null, the default RenderTarget is used.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IInputReceivable">
            <summary>
            Interface to implement the managing of input.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IInputReceivable.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <summary>
            Method to put all the input updates.
            </summary>
            <param name="inputManager">The input manager used for the input updates.</param>
        </member>
        <member name="T:PoncheToolkit.Core.IContentLoadable">
            <summary>
            Interface to set the LoadContent method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IContentLoadable.IsContentLoaded">
            <summary>
            Get or set if the content has finished loading.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IContentLoadable.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <summary>
            Method to load all the content of the component.
            The content is any file that must be compiled or set into memory like
            textures, models, etc.
            </summary>
            <param name="contentManager">The implementation of the <see cref="T:PoncheToolkit.Core.Management.Content.IContentManager"/> interface.</param>
        </member>
        <member name="E:PoncheToolkit.Core.IContentLoadable.OnFinishLoadContent">
            <summary>
            Event raised when finished loading content.
            It is recommended to add any other functionality for loading content using this event,
            to ensure that the any previous loading has completed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IInitializable">
            <summary>
            Interface to set the Initialize method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IInitializable.Initialize">
            <summary>
            Method to initialize all the necessary objects.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IInitializable.IsInitialized">
            <summary>
            Property set to true when the component has finished initialization
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.IInitializable.OnInitialized">
            <summary>
            Event raised when finished initialization.
            It is recommended to add any other functionality for initialization using this event,
            to ensure that the initialization has completed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IShaderLoadable">
            <summary>
            Interface to set the LoadShaders method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IShaderLoadable.LoadShadersAndMaterials(PoncheToolkit.Core.Management.Content.IContentManager)">
            <summary>
            Method to load the shaders of the component.
            Is called before the <see cref="M:PoncheToolkit.Graphics3D.PTModel.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/>, so the LoadContent method has the
            shaders objects already initialized.
            </summary>
            <param name="contentManager">The content manager instance to load the shaders.</param>
        </member>
        <member name="T:PoncheToolkit.Core.IUpdatableLogic">
            <summary>
            Interface that can update the logic of any component.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IUpdatableLogic.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <summary>
            Main method to update the logic of any element.
            </summary>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> object that manages all the time elapsed in the game.</param>
        </member>
        <member name="T:PoncheToolkit.Core.IUpdatableProperties">
            <summary>
            Represent an object that has properties that can be notified when changed.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.IUpdatableProperties.OnPropertyChangedEvent">
            <summary>
            Event raised when a property has been changed.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IUpdatableProperties.DirtyProperties">
            <summary>
            List with the properties that have changed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.ContentsPool">
            <summary>
            Class that holds the contents that are loaded into memory just as <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> or <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/>.
            The <see cref="T:PoncheToolkit.Core.Management.Content.ContentManager11"/> will check for this objects to just instantiate one of each.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Content.ContentsPool.Shaders">
            <summary>
            Dictionary that store all the shaders that are currently loaded into memory.
            The key is the absolute path for the physical .fx file.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.AddShader(PoncheToolkit.Graphics3D.Effects.PTShader,System.String)">
            <summary>
            Add a shader to the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Shaders"/> dictionary.
            If the key is already added, it is replaced with the new shader.
            </summary>
            <param name="shader">The shader object.</param>
            <param name="key">The string key to add. Typically the path in lower.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.AddShader(PoncheToolkit.Graphics3D.Effects.PTShader,System.String,System.Int32)">
            <summary>
            Add a shader to the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Shaders"/> dictionary.
            If the key is already added, it is replaced with the new shader.
            </summary>
            <param name="shader">The shader object.</param>
            <param name="key">The string key to add. Typically the path in lower.</param>
            <param name="customPixelShaderSlot">The custom pixel shader slot used to compile this shader.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.GetShader(System.String)">
            <summary>
            Get a shader from the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Shaders"/> dictionary.
            </summary>
            <param name="key">The string key. Typically the path in lower.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.GetShader(System.String,System.Int32)">
            <summary>
            Get a shader from the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Shaders"/> dictionary.
            </summary>
            <param name="key">The string key. Typically the path in lower.</param>
            <param name="customPixelShaderSlot">The custom pixel shader slot used to compile this shader.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.ClearShader(System.String)">
            <summary>
            Dispose all the shaders and clear the Shaders dictionary.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.ClearShader(PoncheToolkit.Graphics3D.Effects.PTShader)">
            <summary>
            Dispose all the shaders and clear the Shaders dictionary.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.DisposeShaders">
            <summary>
            Dispose all the shaders and clear the Shaders dictionary.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Content.ContentsPool.Textures">
            <summary>
            Dictionary that store all the textures that are currently loaded into memory.
            The key is the absolute path for the physical texture file.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.ClearTexture(System.String)">
            <summary>
            Dispose a given texture.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.DisposeTextures">
            <summary>
            Dispose all the textures and clear the Textures dictionary.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Content.ContentsPool.ImportedModels">
            <summary>
            Dictionary that store all the models that are currently loaded into memory.
            The key is the absolute path for the physical Model file.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.ClearModel(System.String)">
            <summary>
            Dispose a given model.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentsPool.DisposeModels">
            <summary>
            Dispose all the models and clear the Models dictionary.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.IContentItem">
            <summary>
            Represent a piece of content that can be loaded through the <see cref="T:PoncheToolkit.Core.Management.Content.ContentManager11"/>
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.ContentManager11">
            <summary>
            Class that help to manage the creation and disposal of content.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.VALID_EXTENSIONS">
            <summary>
            Array of valid extensions that can be loaded into memory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.SHADER_VERTEX_SHADER_VERSION_5">
            <summary>
            String to pass when compiling .fx files that contain only vertex shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.SHADER_PIXEL_SHADER_VERSION_5">
            <summary>
            String to pass when compiling .fx files that contain only pixel shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.VERTEX_SHADER_COMPILED_NAME_EXTENSION">
            <summary>
            The name of the compiled vertex shader file.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.PIXEL_SHADER_COMPILED_NAME_EXTENSION">
            <summary>
            The name of the compiled pixel shader file.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.TESSELATION_SHADER_COMPILED_NAME_EXTENSION">
            <summary>
            The name of the compiled tesselation shader file.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Content.ContentManager11.GEOMETRY_SHADER_COMPILED_NAME_EXTENSION">
            <summary>
            The name of the compiled geometry shader file.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Content.ContentManager11.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Content.ContentManager11.Shaders">
            <summary>
            A dictionary with the current loaded shaders in memory.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2D(System.String,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Load in memory a texture2D.
            This method is used when creating a custom Texture2D not taken from a physical file.
            </summary>
            <param name="textureKey">The string to save this texture in the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Textures"/> dictionary.</param>
            <param name="fromTexture">The texture.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2D(System.String,System.String,System.Boolean)">
            <summary>
            Load in memory a texture2D.
            This texture will be rendered using the back buffer. (<see cref="!:GraphicsRenderer.Context2D"/>)
            </summary>
            <param name="assetName">The local path and name of the texture.</param>
            <param name="generateMipMaps">If the texture will generate mip map chain.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2D(System.String,SharpDX.Direct2D1.DeviceContext,System.String,System.Boolean)">
            <summary>
            Load in memory a texture2D.
            </summary>
            <param name="assetName"></param>
            <param name="context">The render target where the texture will be drawn.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <param name="generateMipMaps">If the texture will generate mip maps.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2DArray(System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTTexturePath})">
            <summary>
            Load in memory a texture2D.
            </summary>
            <param name="texturePaths"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadModel(System.String)">
            <summary>
            Load in memory a 3D model.
            The supported types are defined in the <see cref="F:PoncheToolkit.Core.Management.Content.ContentManager11.VALID_EXTENSIONS"/> property.
            </summary>
            <param name="assetName"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Load in memory a shader (.fx) file.
            This method calls the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/> method, so if you want to inherit from <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/>
            to create your own shader, you must instance the new Effect and call the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/> method manually.
            </summary>
            <param name="effectPath">The path of the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <returns>The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> object.</returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadShaderFromSource(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Load into memory an object of any supported type from the source code.
            ** It works only for Shaders for now. **
            </summary>
            <param name="source">The complete source code to be compiled.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="saveCompiledFileName">Optional file name to save the compiled shader to.</param>
            <returns>The object loaded in memory.</returns>
            <exception cref = "T:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException" > When the resource is not found.</exception>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadShader(System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="vertexShaderEntry">The main entry method for the vertex shader.</param>
            <param name="pixelShaderEntry">The main entry method for the pixel shader.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadVertexShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="referenceShader">The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> object where the vertexShader will be loaded into.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="vertexShaderEntry">The main entry method for the vertex shader.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="referenceShader">The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> object where the pixelShader will be loaded into.</param>
            <param name="customPixelShaderSlot">If this is a custom shader (Not the 'Linking' shaders), tell which slot will be used. The Engine support up to 10 custom shaders.
            <para>The custom shader must be added inside the 'Content/Effects' folder and must be called: 'Custom_ShaderPS0.fx', the 0 means the slot used.
            If the default shaders want to be used, use -1 as value.</para>
            </param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="pixelShaderEntry">The main entry method for the pixel shader.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.loadModel(System.String,Assimp.Scene)">
            <summary>
            Private method to load a model.
            </summary>
            <param name="assetName"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.compileVertexShader(System.String,System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Collections.Generic.List{System.String},System.Boolean,System.String)">
            <summary>
            Compile a Vertex Shader.
            </summary>
            <param name="assetNameOrSource">The path of the effect.</param>
            <param name="entryPoint">String of the name of the shader method to work as the vertex shader entry point.</param>
            <param name="shader">The reference to the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> used.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="fromSource">Value to indicate what the assetNameOrSource represent to search a file or compile the sent code.</param>
            <param name="saveFileName">Optional file name to save the compiled shader to.</param>
            <returns>Return the VertexShader object of the compiled shader.</returns>
            <exception cref="T:PoncheToolkit.Util.Exceptions.ResourceCompilationException"/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.compilePixelShader(System.String,System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Collections.Generic.List{System.String},System.Boolean,System.String)">
            <summary>
            Compile a pixel shader.
            </summary>
            <param name="assetNameOrSource">The path of the effect.</param>
            <param name="entryPoint">String of the name of the shader method to work as the pixel shader entry point.</param>
            <param name="shader">The reference to the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> used.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="fromSource">Value to indicate what the assetNameOrSource represent to search a file or compile the sent code.</param>
            <param name="saveFileName">Optional file name to save the compiled shader to.</param>
            <returns>Return the PixelShader object of the compiled shader.</returns>
            <exception cref="T:PoncheToolkit.Util.Exceptions.ResourceCompilationException"/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.fromCompiledPixelShader(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@)">
            <summary>
            Compile a pixel shader.
            </summary>
            <param name="compiledPath">The path of the effect.</param>
            <param name="shader">The reference to the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> used.</param>
            <returns>Return the PixelShader object of the compiled shader.</returns>
            <exception cref="T:PoncheToolkit.Util.Exceptions.ResourceCompilationException"/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.createClassInstances(System.Byte[],PoncheToolkit.Graphics3D.Effects.PTShader@)">
            <summary>
            Assign the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> objects to the shader <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>.
            </summary>
            <param name="byteCode">The byteCode representing the compiled shader.</param>
            <param name="shader">The reference to the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> used.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.saveShader(System.String,PoncheToolkit.Graphics3D.Effects.PTShader,SharpDX.D3DCompiler.CompilationResult,System.String)">
            <summary>
            Save the shader in a physical path.
            </summary>
            <param name="fileRelativePath"></param>
            <param name="compiledShader"></param>
            <param name="typeWithExtension"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.isValidExtension(System.String)">
            <summary>
            Get if the extension of the resource is valid.
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.fileValidations(System.String,System.String)">
            <summary>
            Make validations of the file.
            </summary>
            <param name="assetName">Relative path of the file.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <returns>Return the correct path of the file with the ContentManager root directory. Returns the string in lower.</returns>
            <exception cref="T:System.IO.FileNotFoundException">When the resource is not found.</exception>
            <exception cref="T:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException">When the resource is not found.</exception>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.ContentManager11.fileValidations(System.String[],System.String@,System.String)">
            <summary>
            Make validations of the file.
            </summary>
            <param name="assetNames">Relative path of the files.</param>
            <param name="combined">The unique string containing the files added so the texture to be loaded can be identified.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <returns>Return the correct path of the file with the ContentManager root directory.</returns>
            <exception cref="T:System.IO.FileNotFoundException">When the resource is not found.</exception>
            <exception cref="T:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException">When the resource is not found.</exception>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.IContentManager11">
            <summary>
            Main interface to implement for a content manager in DirectX11.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager11.LoadTexture2D(System.String,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Load in memory a texture2D.
            This method is used when creating a custom Texture2D not taken from a physical file.
            </summary>
            <param name="textureKey">The string to save this texture in the <see cref="P:PoncheToolkit.Core.Management.Content.ContentsPool.Textures"/> dictionary.</param>
            <param name="fromTexture">The texture.</param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.IContentManager">
            <summary>
            Main interface to implement to have content loading and management.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadTexture2D(System.String,System.String,System.Boolean)">
            <summary>
            Load in memory a texture2D.
            This texture will be rendered using the back buffer. (<see cref="P:PoncheToolkit.Core.IGraphicsRenderer.Context2D"/>)
            </summary>
            <param name="assetName">The local path and name of the texture.</param>
            <param name="generateMipMaps">If the texture will generate mip map chain.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadTexture2D(System.String,SharpDX.Direct2D1.DeviceContext,System.String,System.Boolean)">
            <summary>
            Load in memory a texture2D.
            </summary>
            <param name="assetName"></param>
            <param name="context">The render target where the texture will be drawn.</param>
            <param name="referencePath">A path for reference to combine with the assetName.</param>
            <param name="generateMipMaps">If the texture will generate mip maps.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadTexture2DArray(System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTTexturePath})">
            <summary>
            Load in memory a texture2D.
            </summary>
            <param name="texturePaths"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadModel(System.String)">
            <summary>
            Load in memory a 3D model.
            The supported types are defined in the <see cref="!:VALID_EXTENSIONS"/> property.
            </summary>
            <param name="assetName"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Load in memory a shader (.fx) file.
            This method calls the <see cref="!:IPTEffect.LoadContent"/> method, so if you want to inherit from <see cref="T:PoncheToolkit.Core.IPTEffect"/>
            to create your own shader, you must instance the new Effect and call the <see cref="!:IPTEffect.LoadContent"/> method manually.
            </summary>
            <param name="effectPath">The path of the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <returns>The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> object.</returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadShaderFromSource(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Load into memory an object of any supported type from the source code.
            ** It works only for Shaders for now. **
            </summary>
            <param name="source">The complete source code to be compiled.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="saveCompiledFileName">Optional file name to save the compiled shader to.</param>
            <returns>The object loaded in memory.</returns>
            <exception cref = "T:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException" > When the resource is not found.</exception>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadShader(System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="vertexShaderEntry">The main entry method for the vertex shader.</param>
            <param name="pixelShaderEntry">The main entry method for the pixel shader.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadVertexShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="referenceShader">The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> object where the vertexShader will be loaded into.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="vertexShaderEntry">The main entry method for the vertex shader.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            <para>
            Load in memory a shader (.fx) file. This method return a <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> compiled file.
            It does not return an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> file, for that use the <see cref="M:PoncheToolkit.Core.Management.Content.IContentManager.LoadEffect``1(System.String,System.Collections.Generic.List{System.String})"/> method.
            Check in the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/> if the Shader has already been loaded previously.
            </para>
            It also saves the compiled shaders into a physical file.
            </summary>
            <param name="assetName">The name of the .fx file</param>
            <param name="referenceShader">The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> object where the pixelShader will be loaded into.</param>
            <param name="customPixelShaderSlot">If this is a custom shader (Not the 'Linking' shaders), tell which slot will be used. The Engine support up to 10 custom shaders.
            <para>The custom shader must be added inside the 'Content/Effects' folder and must be called: 'Custom_ShaderPS0.fx', the 0 means the slot used.
            If the default shaders want to be used, use -1 as value.</para>
            </param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="pixelShaderEntry">The main entry method for the pixel shader.</param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Content.PTInclude">
            <summary>
            Class used to include files from the #include directive in hlsl files.
            The path sent to the constructor is after the "Content" directory, meaning that if the file is in "Content/Effect"
            directory, there is only need to send "Effects" as parameter.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Content.PTInclude.Shadow">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.PTInclude.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="relativePathsFromContentDirectory">The list of paths to be included when reading the shader.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.PTInclude.Close(System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.PTInclude.Open(SharpDX.D3DCompiler.IncludeType,System.String,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Content.PTInclude.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Input.InputManager">
            <summary>
            Class that manage all the input from mouse, keyboard or peripherals.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Input.InputManager.MouseButton">
            <summary>
            List of buttons available for the Mouse.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Input.InputManager.MouseButton.Left">
            <summary>
            The left button
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Input.InputManager.MouseButton.Right">
            <summary>
            The right button.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Input.InputManager.MouseButton.Middle">
            <summary>
            The wheel button.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Input.InputManager.MouseButton.Side1">
            <summary>
            One of the side buttons (typically the down side button).
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Input.InputManager.MouseButton.Side2">
            <summary>
            One of the side buttons (typically the top side button).
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Input.InputManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Input.InputManager.MousePosition">
            <summary>
            Get or set the mouse position.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Input.InputManager.MouseDelta">
            <summary>
            Get the value for the last movement of the mouse.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Input.InputManager.IsControllerConnected">
            <summary>
            Get if any XBox controllers are connected.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Input.InputManager.ConnectedControllers">
            <summary>
            Get if any XBox controllers are connected.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.GamepadState(SharpDX.XInput.UserIndex)">
            <summary>
            Get the current gamepad state.
            Return null if the gamepad state has not changed.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsButtonHold(SharpDX.XInput.UserIndex,SharpDX.XInput.GamepadButtonFlags)">
            <summary>
            Return true when a button is being held.
            </summary>
            <param name="user">The user index for the controller.</param>
            <param name="buttons">The buttons flags to check for.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsButtonPressed(SharpDX.XInput.UserIndex,SharpDX.XInput.GamepadButtonFlags)">
            <summary>
            Return true when a button has been pressed. (even when it has not been released)
            </summary>
            <param name="user">The user index for the controller.</param>
            <param name="buttons">The buttons flags to check for.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsButtonReleased(SharpDX.XInput.UserIndex,SharpDX.XInput.GamepadButtonFlags)">
            <summary>
            Return true when a button has been pressed and then released.
            </summary>
            <param name="user">The user index for the controller.</param>
            <param name="buttons">The buttons flags to check for.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsKeyHold(SharpDX.DirectInput.Key)">
            <summary>
            Poll for a key hold.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsKeyPressed(SharpDX.DirectInput.Key)">
            <summary>
            Poll for a key press.
            Returns true if the key is pressed and then released.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsMouseHold(PoncheToolkit.Core.Management.Input.InputManager.MouseButton)">
            <summary>
            Poll for a <see cref="T:PoncheToolkit.Core.Management.Input.InputManager.MouseButton"/> hold.
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.IsMousePressed(PoncheToolkit.Core.Management.Input.InputManager.MouseButton)">
            <summary>
            Poll for a <see cref="T:PoncheToolkit.Core.Management.Input.InputManager.MouseButton"/> press.
            Returns true if the button is pressed and then released.
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Input.InputManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.LoadManager">
            <summary>
            Class that manages the loading of any component, screen, service, etc. in a different Thread.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreen">
            <summary>
            Class from which every different screens in the game must inherit from.
            Ex: LoadingScreen, SplashScreen, GameplayScreen, etc.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState">
            <summary>
            Represent the state of the screen.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.Created">
            <summary>
            Created and instance.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.Initialized">
            <summary>
            The Initialize method was called.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.TransitioningIn">
            <summary>
            When the screen is transitioning in.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.TransitioningOut">
            <summary>
            When the screen is transitioning in.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.Active">
            <summary>
            When the screen is active (updating and rendering).
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenState.Paused">
            <summary>
            When the screen is paused (NOT updating nor rendering).
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenUpdateMode">
            <summary>
            Represent the way the screen is updated.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenUpdateMode.Always">
            <summary>
            The screen is updated always, even if some other screen is in top of it.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenUpdateMode.OnlyWhenActive">
            <summary>
            The screen is updated only when it is active.
            The active state will be managed in the specific screen as you see fit.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenUpdateMode.Never">
            <summary>
            The screen is never updated.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderMode">
            <summary>
            Represent the way the screen is rendered.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderMode.Always">
            <summary>
            The screen is rendered always, even if some other screen is in top of it.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderMode.OnlyWhenActive">
            <summary>
            The screen is rendered only when it is active.
            The active state will be managed in the specific screen as you see fit.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderMode.Never">
            <summary>
            The screen is never rendered.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderTargetType">
            <summary>
            Represent the way the screen is rendered.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderTargetType.Backbuffer">
            <summary>
            Render the screen to the backbuffer.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderTargetType.Texture">
            <summary>
            Render the screen to a texture.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect">
            <summary>
            Dictionary containing the meshes per effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.InstancedMeshesPerEffect">
            <summary>
            Dictionary containing the meshes per effect by instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerMaterial">
            <summary>
            Dictionary containing the meshes per material in this screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect">
            <summary>
            Dictionary containing the components per effect in this screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableInstanceComponentsPerEffect">
            <summary>
            Dictionary containing the components per effect in this screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.CurrentScreenState">
            <summary>
            Get or set the current state for the game screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.TransitionIn">
            <summary>
            Get or set the time for the screen to transition in.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.TransitionOut">
            <summary>
            Get or set the time for the screen to transition in.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.IsActive">
            <summary>
            Get if the current state of the screen is active.
            This value is arbitrary for every implemented screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.Components">
            <summary>
            Get Collection (Dictionary) of the components in the screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.UpdateMode">
            <summary>
            Set when the screen will be updated.
            <para/>Default: ScreenUpdateMode.Always
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.RenderMode">
            <summary>
            Set when the screen will be rendered.
            <para/> Default: ScreenRenderMode.Always
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.RenderTargetType">
            <summary>
            Get or set the render target of the screen.
            <para/> Default: ScreenRenderTarget.Backbuffer
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreen.RenderTargetView">
            <summary>
            Get or set the render target of the screen.
            <para/> Default: ScreenRenderTarget.Backbuffer
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreen.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreen.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreen.OnNewEffectAdded">
            <summary>
            Event raised when a new effect is added when using the <see cref="M:PoncheToolkit.Core.Management.Screen.GameScreen.AddRenderableComponentWithEffect``2(``0@,``1,System.String)"/> method.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreen.OnFinishLoadRenderableComponents">
            <summary>
            Event that must be raised last when implementing the <see cref="M:PoncheToolkit.Core.Management.Screen.GameScreen.AddRenderableComponentWithEffect``2(``0@,``1,System.String)"/>
            method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            By default it set the screen name to its class name.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.Components_OnComponentAdded(PoncheToolkit.Core.Components.IGameComponent)">
            <summary>
            Event when a component has been added.
            If the component has not been initialized, it is initialized here.
            It check specific functionality if necessary.
            <para>If the component is a Camera it is added to the <see cref="P:PoncheToolkit.Core.Game.Cameras"/> list.
            The last added camera is set as the current camera. </para>
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.AddRenderableScreenComponents">
            <summary>
            Here add all the components, this is called after the <see cref="M:PoncheToolkit.Core.Management.Screen.GameScreen.LoadShadersAndMaterials(PoncheToolkit.Core.Management.Content.IContentManager)"/> methods.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.LoadShadersAndMaterials(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.UnloadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.AddRenderableComponentWithEffect``2(``0@,``1,System.String)">
            <summary>
            Add a component ordered by its effect. This is to create a more efficient rendering.
            If the Effect has not been loaded, it cannot be added.
            First load the Effect into memory.
            It also check if the component is a <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> so it is added to the meshes sorted dictionary.
            <para>If the component has not been initialized, here the <see cref="M:PoncheToolkit.Core.Components.GameComponent.Initialize"/> and 
            <see cref="!:GameComponent.LoadContent(ContentManager11)"/> methods are called.
            </para>
            </summary>
            <param name="component">The <see cref="T:PoncheToolkit.Core.Components.GameRenderableComponent"/> component to be rendered.</param>
            <param name="effects">The effect to be assigned to the component when rendering.</param>
            <param name="componentName">The name of the component to be added.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreen.Collection_OnDrawableComponentAdded(PoncheToolkit.Core.Components.IGameComponent)">
            <summary>
            Initialize the component when added if it has not been initialized.
            </summary>
            <param name="component"></param>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Screen.GameScreenManager">
            <summary>
            Class that manages all the screens in the game.
            Is in charge to create, pause, destroy and decide which screen gets updated and drawn and which not.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreenManager.Screens">
            <summary>
            Get the list of screens.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreenManager.LastScreen">
            <summary>
            Get the last screen added.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Screen.GameScreenManager.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreenManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Screen.GameScreenManager.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.AddScreen(PoncheToolkit.Core.Management.Screen.GameScreen)">
            <summary>
            Add a new screen to the list.
            If the screen has not been initialized, it is initialized here.
            </summary>
            <param name="screen"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <summary>
            Load the contents from the added screens.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.Render(PoncheToolkit.Graphics3D.GraphicsRenderer11,PoncheToolkit.Graphics3D.Cameras.Camera)">
            <summary>
            Render the screens by their <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen.ScreenRenderMode"/>
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Screen.GameScreenManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Menu.MenuManager">
            <summary>
            Class that help to create and manage custom menus
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Menu.MenuManager.#ctor(PoncheToolkit.Core.Game11)">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Menu.MenuManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Menu.MenuManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Menu.MenuManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.ApplicationStateManager">
            <summary>
            Manages the states of all the game.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Management.ApplicationStateManager.ApplicationState">
            <summary>
            Enumeration that represent the state of the application
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.ApplicationStateManager.CurrentState">
            <summary>
            Get the current state for the game.
            To set the set use the SetCurrentState() method.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.ApplicationStateManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.ApplicationStateManager.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.ApplicationStateManager.SetCurrentState(PoncheToolkit.Core.Management.ApplicationStateManager.ApplicationState)">
            <summary>
            Set the current state for the application.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.ApplicationStateManager.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.ApplicationStateManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.ApplicationStateManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Sound.SoundManager">
            <summary>
            Class that manages the sounds.
            Made as a service.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Management.Sound.SoundManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Sound.SoundManager.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Sound.SoundManager.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Sound.SoundManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Management.Sound.SoundManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Management.Threading.ThreadingManager">
            <summary>
            Class in charge of managing the multi-threading rendering of the game.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Threading.ThreadingManager.MAX_RENDERING_THREADS_COUNT">
            <summary>
            Max number of used threads for rendering.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Management.Threading.ThreadingManager.CURRENT_RENDERING_THREADS_COUNT">
            <summary>
            Get or set the current number of used threads for rendering.
            Default: 8.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Management.Threading.ThreadingManager.MAX_UPDATING_THREADS_COUNT">
            <summary>
            Get or set the current number of used threads for updating logic in a given screen.
            Default: 8.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameService">
            <summary>
            Main abstract class that implements a service that will be updated.
            The services are identified by their type.
            Only one service by type can be added.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameService.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameService.Name">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameService.Game">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameService.Log">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Services.GameService.OnInitialized">
            <summary>
            Event raised when finished initialization.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameService.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor. Set the game instance.
            By default set the name of the service to its class name.
            </summary>
            <param name="game">The game instance used.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameService.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameService.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameService.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameServicesCollection">
            <summary>
            Read-only dictionary that contains all the services.
            To add a service the AddService method must be called.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameServicesCollection.Item(System.Type)">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameServicesCollection.Count">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameServicesCollection.Keys">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameServicesCollection.Values">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.AddService(PoncheToolkit.Core.Services.IGameService)">
            <summary>
            Add a service.
            If the service hasn't been initialized, it is initialized here.
            </summary>
            <param name="service">The service implementation</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.GetService(System.Type)">
            <summary>
            Get a service by its type.
            </summary>
            <param name="type">The type of the service to be retrieved.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.RemoveService(System.Type)">
            <summary>
            Remove a service by its type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.ContainsKey(System.Type)">
            <summary>
            Check if the collection has a type of service.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.GetEnumerator">
            <summary>
            Get the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.TryGetValue(System.Type,PoncheToolkit.Core.Services.IGameService@)">
            <summary>
            Try parse a key to get the corresponding value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameServicesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Core.Services.IGameService">
            <summary>
            Main service interface.
            In this first approach, all the services that will be included in the game will implement this interface.
            The services are objects that will live throughout all the game, and can be retrieved anywhere.
            All the services will automatically be updated every frame as necessary.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.IGameService.Name">
            <summary>
            The name of the service. (Optional)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.IGameService.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.Dynamic2DLightManagerService">
            <summary>
            Class that manages all lights that can cast shadows in 2D.
            Has a Rendertarget to create the shadow map. (Occlusion).
            The default value for the shadow map is 512x512.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize">
            <summary>
            Enumeration to create the shadow map with this size.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize.Size128">
            <summary>
            Size of 128x128
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize.Size256">
            <summary>
            Size of 256x256
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize.Size512">
            <summary>
            Size of 512x512
            </summary>
        </member>
        <member name="F:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize.Size1024">
            <summary>
            Size of 1024x1024
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Lights">
            <summary>
            List with the lights used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapEffect">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect"/> effect used to create the shadow maps.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowRenderEffect">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect"/> effect used to render the final image of the shadows.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.SizeShadowMap">
            <summary>
            Get or set the shadow map size.
            Bigger the size, the more resolution the shadows will have but it could impact performance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSizeVector">
            <summary>
            Get the size of the shadow map in <see cref="T:SharpDX.Vector2"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.#ctor(PoncheToolkit.Core.Game11,PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSize)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game isntance.</param>
            <param name="shadowMapSize">The size of the texture to create shadows. Bigger the size, the more resolution the shadows will have but
            it could impact performance.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.CreateLight360(SharpDX.Vector2)">
            <summary>
            Create a new light in the specified position.
            The size of the light is the one defined by the <see cref="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.ShadowMapSizeVector"/> property.
            Add it to the <see cref="P:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Lights"/> List.
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Begin(PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics2D.Lighting.Light2D)">
            <summary>
            Begin the draw.
            Between this method and the <see cref="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.End(PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics2D.Lighting.Light2D)"/> method, all the objects that wants to be rendered with shadows
            for the given light must be drawn. There must be only one Begin foreach End call. Only one light rendering at a time.
            </summary>
            <param name="spriteBatch">The SpriteBatch.</param>
            <param name="light">The light used to render the 2D content.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Begin(PoncheToolkit.Graphics2D.SpriteBatch,System.Int32)">
            <summary>
            Begin the draw.
            Between this method and the <see cref="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.End(PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics2D.Lighting.Light2D)"/> method, all the objects that wants to be rendered with shadows
            must be drawn.
            </summary>
            <param name="spriteBatch">The SpriteBatch.</param>
            <param name="lightIndex">The light used to render the 2D content.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.End(PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics2D.Lighting.Light2D)">
            <summary>
            End the shadow rendering. Here are applied the effects to blend the result.
            </summary>
            <param name="spriteBatch">The SpriteBatch.</param>
            <param name="light">The light used to render the 2D content.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.Dynamic2DLightManagerService.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Services.DebuggerRenderableService">
            <summary>
            Class that has debug stats or functionality.
            Implements <see cref="T:PoncheToolkit.Core.IRenderable"/> interface so it can render debugger info onScreen.
            This service will be added when the <see cref="P:PoncheToolkit.Core.GameSettings.DebugMode"/> is set to true.
            If it remains false, the service is not added.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.DebuggerRenderableService.OnFPSCapturedEventHandler">
            <summary>
            Handler to create custom OnFPSCaptured event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Services.DebuggerRenderableService.OnFPSCaptured">
            <summary>
            Event raised when a second has elapsed.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.FPS">
            <summary>
            The Frames per second count.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.PhysicalMemoryUsage">
            <summary>
            Get the memory used by the process.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.UserProcessorTime">
            <summary>
            Get the user processing time for this process.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.TotalProcessorTime">
            <summary>
            Get the total processing time for this process.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.ProcessorUsage">
            <summary>
            Get the processing usage in percentage. 0-1
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.ModelsDrawn">
            <summary>
            Get the current drawn models inside the camera frustrum.
            This is updated inside the <see cref="T:PoncheToolkit.Core.IGraphicsRenderer"/> taking the
            <see cref="P:PoncheToolkit.Core.Game.CurrentCamera"/>. See <see cref="T:SharpDX.BoundingFrustum"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.SimulateBurnCPU">
            <summary>
            Get or set to simulate cpu intense usage when rendering.
            It calculates and applies 50x times the Camera matrices and Map/Unmmap materials for each mesh.
            Default: false.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.DebuggerRenderableService.Effects">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Core.Services.DebuggerRenderableService.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.DebuggerRenderableService.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The running game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.DebuggerRenderableService.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.DebuggerRenderableService.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.DebuggerRenderableService.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.DebuggerRenderableService.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameTime">
            <summary>
            Class that help measure the elapsed time of the game.
            This must be used to calculate physics, collisions, etc.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameTime.RealTimeElapsed">
            <summary>
            The real time elapsed. Measure the time from the beginning of the game.
            This time is never stopped or paused.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameTime.GameTimeElapsed">
            <summary>
            Measure the time between frames.
            This times is paused when the IsPaused variable is active in the Game class.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameTime.DeltaTime">
            <summary>
            The time difference from the last frame.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.Services.GameTime.IsRunning">
            <summary>
            Get if the gameTime status is running or paused.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Services.GameTime.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameTime.OnSecondElapsedEventHandler">
            <summary>
            Handler to create custom OnSecondElapsed event.
            </summary>
            <param name="fps">The frames ran for this second.</param>
        </member>
        <member name="E:PoncheToolkit.Core.Services.GameTime.OnSecondElapsed">
            <summary>
            Event raised when a single second has elapsed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameTime.OnPhysicsUpdateDeltaTimeHandler">
            <summary>
            Handler to create custom OnUpdatePhysicsDeltaTime event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Services.GameTime.OnPhysicsUpdateDeltaTime">
            <summary>
            Event raised when before the calculation of Delta Time, so the physics delta time is set correctly
            so the game rendering updates and the physics updates are decoupled.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.Services.GameTime.OnPhysicsUpdateHandler">
            <summary>
            Handler to create custom OnPhysicsUpdate event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.Services.GameTime.OnPhysicsUpdate">
            <summary>
            Event raised when inside the loop to update physics.
            This must be implemented when incorporating physics, and here the update must me made.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.Pause">
            <summary>
            Pause the timer with the current time.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.Stop">
            <summary>
            Stop the timer and resets its value to zero.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.Start">
            <summary>
            Start to measure time.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.Services.GameTime.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Core.IUpdatableState">
            <summary>
            Represent an object that has updatable components.
            That can be out of date for some reason.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IUpdatableState.IsStateUpdated">
            <summary>
            The value that represent if the object has the last possible value.
            This value must be updated inside the <see cref="M:PoncheToolkit.Core.IUpdatableState.UpdateState"/> method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IUpdatableState.UpdateState">
            <summary>
            Method to update the values to their last possible value.
            </summary>
            <returns>The boolean value if the state is updated or not.</returns>
        </member>
        <member name="E:PoncheToolkit.Core.IUpdatableState.OnStateUpdatedEvent">
            <summary>
            Event raised when it has been updated successfully.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.WPF.GameWpf">
            <inheritdoc />
            <summary>
            Class that use Interop to show the rendered contents inside WPF.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.WPF.GameWpf.OnInitializedHandler">
            <summary>
            Handler to create custom Initialized event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Core.WPF.GameWpf.OnInitialized">
            <summary>
            Event raised when the Initialize method has finished.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.WPF.GameWpf.Log">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Core.WPF.GameWpf.Instance">
            <summary>
            The game instance that is running.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.WPF.GameWpf.CurrentScreen">
            <summary>
            Get the last screen added.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.WPF.GameWpf.Device">
            <summary>
            The current device used to render content.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.#ctor">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.#ctor(PoncheToolkit.Core.GameSettings)">
            <summary>
            Instantiates the objects needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.Initialize">
            <summary>
            Initialize the components for the rendering.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.Update">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.Render(System.IntPtr,System.Boolean,System.Drawing.Size)">
            <summary>
            Render the <see cref="T:Microsoft.Wpf.Interop.DirectX.D3D11Image"/> surface with the given size.
            This call comes from a WPF application.
            Internally it creates a <see cref="T:SharpDX.Direct3D11.Texture2D"/> texture from the surface pointer
            and make the adjustments in the buffers so it can be rendered correctly.
            </summary>
            <param name="surface">The pointer to the <see cref="T:Microsoft.Wpf.Interop.DirectX.D3D11Image"/> object. This is obtained from
            the <see cref="P:Microsoft.Wpf.Interop.DirectX.D3D11Image.OnRender"/> method. </param>
            <param name="isNewSurface">The value indicating if the surface must be recreated, or it is the same.</param>
            <param name="size">The size of the surface to recreate the buffers correctly.</param>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.AddGameScreen(PoncheToolkit.Core.Management.Screen.GameScreen)">
            <summary>
            Add a screen to the game.
            </summary>
            <param name="screen"></param>
        </member>
        <member name="M:PoncheToolkit.Core.WPF.GameWpf.Dispose">
            <summary>
            Dispose the <see cref="T:PoncheToolkit.Core.Game11"/> instance. 
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IPTEffect12">
            <summary>
            Main interface to implement to create an effect.
            This interface has properties that DirectX11 and DirectX12 share.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IPTEffect11">
            <summary>
            Main interface to implement to create an effect.
            This interface has properties that DirectX11 and DirectX12 share.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IPTEffect11.LoadBuffers">
            <summary>
            Initialize the buffers with default behavior.
            Create the Matrcies, Clip, Reflection, Material, Lights buffers among others.
            This method is called withing the <see cref="!:PTEffect.LoadContent(ContentManager11)"/> method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.MatricesConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.ClipConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.ReflectionConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.MaterialConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.GlobalDataConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.LightsConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect11.InstanceBuffer">
            <summary>
            The buffer used to draw instanced meshes.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IPTEffect">
            <summary>
            Main interface to implement to create an effect.
            This interface has properties that DirectX11 and DirectX12 share.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IPTEffect.Materials">
            <summary>
            The materials dictionary that this effect have.
            The key is the name of the material, there cannot be two materials with the same name.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Core.IRenderable">
            <summary>
            Interface that represent an object that can be rendered on screen.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Core.IRenderable.Effects">
            <summary>
            The list of effectsused and applied to render this component.
            Each effect represents a physical .fx shader.
            This is the way to render "Multi-pass" effects. Just add as many effects as multi-passes needed.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Core.IRenderable.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Render the content, it can be 2D using the <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> or 3D using the <see cref="T:SharpDX.Direct3D11.DeviceContext1"/>.
            </summary>
            <param name="spriteBatch"></param>
            <param name="context">The optional context to render, used for deferred rendering.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.Animation2DSingleFrame">
            <summary>
            Represent a single drawing taken from an Animation.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2DSingleFrame.Duration">
            <summary>
            How much time this animation frame last.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2DSingleFrame.SourceRectangle">
            <summary>
            Get or set the current source rectangle to draw the current frame animation.
            This property represent the current Frame being rendered.
            This current animation is updated in the <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DManager"/>.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DSingleFrame.#ctor(System.Single)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite">
            <summary>
            Class that represent a sprite sheet animations.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.CurrentAnimation">
            <summary>
            Get or set the current single frame animation.
            This property represent the current Frame being rendered.
            This current animation is updated in the <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DManager"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.CurrentAnimationTime">
            <summary>
            Get the current Animation total time. For a complete loop.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.FramesPerRow">
            <summary>
            Get the frames per row to read from the sprite sheet.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.Animations">
            <summary>
            Get the dictionary with the animations for this spriteSheet.
            Each animation is distinguished by its name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.Width">
            <summary>
            Get the width of the spritesheet. Obtained from the texture loaded.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.Height">
            <summary>
            Get the height of the spritesheet. Obtained from the texture loaded.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.#ctor(PoncheToolkit.Core.Game,System.String,System.String,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Constructor
            </summary>
            <param name="game">The game instance.</param>
            <param name="spriteSheetName">Name of the spriteSheet.</param>
            <param name="texturePath">Path of the texture.</param>
            <param name="deviceContext">The device context to render the sprite.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.AnimatedSprite.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.Animation2DManager">
            <summary>
            Class that manages a set of animations.
            Contains a dictionary of FrameAnimation objects.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Animation.Animation2DManager.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2DManager.SpriteSheets">
            <summary>
            The current sprite sheets loaded.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.LoadSpriteSheet(System.String,System.String,PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount,System.Int32,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Creates a new FrameAnimation and adds it to the Animations dictionary.
            This method uses the <see cref="!:ContentManager11.LoadTexture2D(string, string)"/> method so it is recommended to be used in the LoadContent method.
            </summary>
            <param name="spriteSheetName">The key to distinguish the animation, if it exists it reinitializes the animation with the given parameters.</param>
            <param name="textureAsset">Name of the texture to be loaded.</param>
            <param name="frameCount">The <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount"/> to load the animations of the spriteSheet.</param>
            <param name="animationFramesPerSecond">Frames per second for the animation.</param>
            <param name="deviceContext">The Device context that will be used to create the content and where the rendering will take place. 
            If it is not assigned the default <see cref="!:PoncheToolkit.Graphics3D.GraphicsRenderer.Context2D"/> is used, this context renders to the back buffer.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.LoadSpriteSheet(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new FrameAnimation and adds it to the Animations dictionary.
            This method uses the <see cref="!:ContentManager11.LoadTexture2D(string, string)"/> method so it is recommended to be used in the LoadContent method.
            </summary>
            <param name="spriteSheetName">The key to distinguish the animation, if it exists it reinitializes the animation with the given parameters.</param>
            <param name="textureAsset">Name of the texture to be loaded.</param>
            <param name="frameWidth">Width of each frame.</param>
            <param name="frameHeight">Height of each frame.</param>
            <param name="numberOfFrames">Number of frames that conforms the animation.</param>
            <param name="animationFramesPerSecond">Frames per second for the animation.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.GenerateAnimation(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,System.String,PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount,System.Int32)">
            <summary>
            Creates a new <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2D"/> from a <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/>.
            </summary>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> object to own this animation.</param>
            <param name="animationName">The name of the animation. This is unique per <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/></param>
            <param name="frameCount">The <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount"/> count to extract the animation.</param>
            <param name="animationFramesPerSecond">The number of animations per second.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.GenerateAnimation(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,System.String,PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange,System.Int32)">
            <summary>
            Creates a new <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2D"/> from a <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/>.
            </summary>
            <param name="animationName">The name of the animation. This is unique per <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/></param>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> object to own this animation.</param>
            <param name="frameRange">Range of frames that conforms the animation.</param>
            <param name="animationFramesPerSecond">The number of animations per second.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.UpdateSingleFrameAnimationTime(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,System.String,System.Int32,System.Single)">
            <summary>
            Updates the time animation of a single frame within the FrameAnimation.
            </summary>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> owner.</param>
            <param name="animationKey">The key to distinguish the animation.</param>
            <param name="numberOfFrame">The specific number of frame</param>
            <param name="animationTime">The frames per second for that specific frame.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.UpdateSingleFrameAnimationTime(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.Animation.Animation2D,System.Int32,System.Single)">
            <summary>
            Updates the time animation of a single frame within the FrameAnimation.
            </summary>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> owner.</param>
            <param name="animation">The <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2D"/> object.</param>
            <param name="numberOfFrame">The specific number of frame</param>
            <param name="animationTime">The frames per second for that specific frame.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.UpdateSingleFrameAnimationTime(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            Updates the time animation of a single frame within the FrameAnimation.
            </summary>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> owner.</param>
            <param name="animationKey">The key to distinguish the animation.</param>
            <param name="column">Number of column for the wanted frame.</param>
            <param name="row">Number of row for the wanted frame.</param>
            <param name="animationTime">The frames per second for that specific frame.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Render the Current Animation for the  given <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/>.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,PoncheToolkit.Graphics2D.Animation.Animation2D)">
            <summary>
            Render the given animation.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animation">The animation to render.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,PoncheToolkit.Graphics2D.Animation.Animation2D,System.Single)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animation">The animation to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,PoncheToolkit.Graphics2D.Animation.Animation2D,System.Single,SharpDX.Vector2)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animation">The animation to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The scale of the original texture size.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,PoncheToolkit.Graphics2D.Animation.Animation2D,System.Single,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animation">The animation to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The origin of the sprite where the rotation is made.</param>
            <param name="origin">The origin of the sprite where the rotation is made.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,System.String)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animationKey">The animation key to render.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,System.String,System.Single)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animationKey">The animation key to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,System.String,System.Single,SharpDX.Vector2)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animationKey">The animation key to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The scale of the original texture size.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,System.String,System.Single,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animationKey">The animation key to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The origin of the sprite where the rotation is made.</param>
            <param name="origin">The origin of the sprite where the rotation is made.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,System.String,System.Single,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Color,System.Single)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animationKey">The animation key to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The origin of the sprite where the rotation is made.</param>
            <param name="origin">The origin of the sprite where the rotation is made.</param>
            <param name="color">The color to tint the texture.</param>
            <param name="opacity">The opacity of the texture.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Draw(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Core.Services.GameTime,PoncheToolkit.Graphics2D.Animation.Animation2D,System.Single,SharpDX.Vector2,SharpDX.Vector2,SharpDX.Color,System.Single)">
            <summary>
            Render the given animation key.
            </summary>
            <param name="sprite">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> instance.</param>
            <param name="spriteBatch">The <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> instance.</param>
            <param name="gameTime">The <see cref="T:PoncheToolkit.Core.Services.GameTime"/> instance that holds the current elapsed delta time.</param>
            <param name="animation">The animation to render.</param>
            <param name="rotation">The rotation of the sprite.</param>
            <param name="scale">The origin of the sprite where the rotation is made.</param>
            <param name="origin">The origin of the sprite where the rotation is made.</param>
            <param name="color">The color to tint the texture.</param>
            <param name="opacity">The opacity of the texture.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount">
            <summary>
            Contains the number of columns and number of rows.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount.NumberOfColumns">
            <summary>
            Number of columns from the file
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount.NumberOfRows">
            <summary>
            Number of rows from the file
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DFrameCount.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="numberOfColumns"></param>
            <param name="numberOfRows"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange">
            <summary>
            Represents the frame range to be selected in a Texture.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.FirstFrameX">
            <summary>
            The 'X' position of the first frame.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.FirstFrameY">
            <summary>
            The 'Y' position of the last frame.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.LastFrameX">
            <summary>
            The 'X' position of the first frame.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.LastFrameY">
            <summary>
            The 'Y' position of the last frame.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.FrameWidth">
            <summary>
            Width of the frames.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.FrameHeight">
            <summary>
            Height of the frames.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="firstFrameX">The 'X' position of the first frame.</param>
            <param name="firstFrameY">The 'Y' position of the last frame.</param>
            <param name="lastFrameX">The 'X' position of the first frame.</param>
            <param name="lastFrameY">The 'Y' position of the last frame.</param>
            <param name="frameWidth">The frame width.</param>
            <param name="frameHeight">The frame height.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Animation.Animation2D">
            <summary>
            Class that represents a single frame image from the texture. 
            Has its own properties as animationTime to be able to set individual times per frame or color.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Animation.Animation2D.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.TotalLoopDuration">
            <summary>
            How much time this animation last.
            Sum the duration of all the frames.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Name">
            <summary>
            The name to distinguish the animation in the spritesheet.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Fps">
            <summary>
            The number of animationFrames to show per second.
            This represent how fast the animation will be.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Color">
            <summary>
            The color (tint) for this single animation.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.FrameWidth">
            <summary>
            The frame width to get the animation from the <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.FrameHeight">
            <summary>
            The frame height to get the animation from the <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.CurrentFrameIndex">
            <summary>
            Get or set the index of the current frame being rendered.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.TotalElapsedTime">
            <summary>
            The total elapsed time for the animation
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.FrameRange">
            <summary>
            The <see cref="P:PoncheToolkit.Graphics2D.Animation.Animation2D.FrameRange"/> from which the animation is taken.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Frames">
            <summary>
            Get the set of single drawings that represent this Animation.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Paused">
            <summary>
            Get the value that indicates if the animation is paused.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.Loop">
            <summary>
            Get the value that indicates if the animation is looped.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.CurrentFrame">
            <summary>
            Get or set the current single frame animation.
            This property represent the current Frame being rendered.
            This current frame is updated in the <see cref="T:PoncheToolkit.Graphics2D.Animation.Animation2DManager"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Animation.Animation2D.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.#ctor(PoncheToolkit.Graphics2D.Animation.AnimatedSprite,System.String,PoncheToolkit.Graphics2D.Animation.Animation2DFrameRange,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name of the animation.</param>
            <param name="spriteSheet">The <see cref="T:PoncheToolkit.Graphics2D.Animation.AnimatedSprite"/> owner.</param>
            <param name="frameRange">Range of images to be drawn from the texture.</param>
            <param name="animationsPerSecond">Default number of animations per second. (How fluid the animation will be).
            With a bigger number, the animations will be faster.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.SetSingleFrameTime(System.Int32,System.Single)">
            <summary>
            Set the frame time value for a single frame.
            </summary>
            <param name="columnRowNumber">The number of the frame.</param>
            <param name="frameTime">The new frame time.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.SetSingleFrameTime(System.Int32,System.Int32,System.Single)">
            <summary>
            Set the frame time value for a single frame.
            </summary>
            <param name="column">The number of the frame.</param>
            <param name="row">The number of the frame.</param>
            <param name="frameTime">The new frame time.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.Pause">
            <summary>
            Pause the animation.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.Resume">
            <summary>
            Resume the animation.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.ConvertToColumnRow(System.Int32)">
            <summary>
            Converts a number of frame to its representation in ColumnRow format.
            </summary>
            <example>
            Example: Texture with 4 columns and 3 rows.
            0 1 2  3
            4 5 6  7
            8 9 10 11
            If it is passed a 5, is returned a 11. (First number for column, second number for row)
            </example>
            <param name="numberOfFrame">The number of frame from the texture, starting from the left up corner in 0 index format.</param>
            <returns>Representation of the number of frame in ColumnRow format.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Animation.Animation2D.ConvertToColumnRow(System.Int32,System.Int32)">
            <summary>
            Converts a number of frame to its representation in ColumnRow format.
            Example: texture with 4 columns and 3 rows.
            0 1  2  3
            4 5  6  7
            8 9 10 11
            It receives the number of column and the number of row, just returns the representing string.
            </summary>
            <param name="column">The column of the frame.</param>
            <param name="row">The row of the frame.</param>
            <returns>Representation of the number of frame in ColumnRow format.</returns>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffectProperties">
            <summary>
            Properties for the 2D shadow map creation effect.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffectProperties.Upscale">
            <summary>
            Property to upscale the shadow map.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffectProperties.Resolution">
            <summary>
            Property to set the resolution of the shadow map.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffectProperties">
            <summary>
            Properties for the 2D shadow render effect.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffectProperties.Color">
            <summary>
            Color of the shadow
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffectProperties.Resolution">
            <summary>
            The resolution of the texture to create the shadows.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffectProperties.SoftShadows">
            <summary>
            If the 2D shadow renderer cast soft shadows
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties">
            <summary>
            Properties for the 2D ripple effect
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties.Frequency">
            <summary>
            Frequency of the ripple.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties.Phase">
            <summary>
            Phase of the ripple.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties.Amplitude">
            <summary>
            Amplitude of the ripple.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties.Spread">
            <summary>
            Spread of the ripple.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTRippleEffectProperties.Center">
            <summary>
            Center of the ripple.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffectProperties">
            <summary>
            Properties for the 2D edge detection effect
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffectProperties.ScreenSize">
            <summary>
            Screen size to make calculations.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffectProperties.Thickness">
            <summary>
            Thickness of the outline.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffectProperties.Threshold">
            <summary>
            Threshold of the outline, if it is too low, the lines will look more 'edgy'.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTCustomEffect">
            <summary>
            Class that wraps the functionality of a Custom <see cref="T:SharpDX.Direct2D1.CustomEffect"/>.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.GUID_ShadowMapEffect">
            <summary>
            The GUID to initialize this effect.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.GUID_RippleEffect">
            <summary>
            The GUID to initialize this effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Name">
            <summary>
            Get or set the name of the effect.
            By default set the name to its class name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.IsRegistered">
            <summary>
            Get if the Effect has been registered calling the <see cref="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)"/> method.
            The specific implementantion of that method must set this value.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.PixelShaderPath">
            <summary>
            Get or set the path for the pixel shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Guid">
            <summary>
            Get or set the assigned guid for this effect
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Effect">
            <summary>
            Get or set the effect used to be passed when rendering textures.
            This must be initialized in the <see cref="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)"/> method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.DrawInfo">
            <summary>
            Get the drawing information.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.InputCount">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.SetDrawProperties(SharpDX.Direct2D1.DrawInformation)">
            <summary>
            Set the properties for rendering. By default this method use the <see cref="M:SharpDX.Direct2D1.DrawInformation.SetPixelShader(System.Guid,SharpDX.Direct2D1.PixelOptions)"/> for the given guid.
            Drawing info can be set like the properties of <see cref="T:SharpDX.Direct2D1.InputDescription"/>.
            </summary>
            <param name="drawInfo"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.UpdateBuffer(SharpDX.Direct2D1.ChangeType)">
            <summary>
            Method used to update the constants sent to the effect.
            Here the specific created Struct must be updated to the <see cref="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.DrawInfo"/> SetPixelConstantBuffer, SetVertexConstantBuffer, etc.
            This method is called inside the <see cref="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.PrepareForRender(SharpDX.Direct2D1.ChangeType)"/>
            </summary>
            <param name="changeType">The type that suffered a change.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Register the effect using the given factory.
            This method must be manually called before using the effect.
            </summary>
            <param name="factory">The <see cref="T:SharpDX.Direct2D1.Factory1"/> used to register the effect.</param>
            <param name="context">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> used to render the effect.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.PrepareForRender(SharpDX.Direct2D1.ChangeType)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.SetDrawInformation(SharpDX.Direct2D1.DrawInformation)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.MapOutputRectangleToInputRectangles(SharpDX.Mathematics.Interop.RawRectangle,SharpDX.Mathematics.Interop.RawRectangle[])">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.MapInputRectanglesToOutputRectangle(SharpDX.Mathematics.Interop.RawRectangle[],SharpDX.Mathematics.Interop.RawRectangle[],SharpDX.Mathematics.Interop.RawRectangle@)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.MapInvalidRect(System.Int32,SharpDX.Mathematics.Interop.RawRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.op_Implicit(PoncheToolkit.Graphics2D.Effects.PTCustomEffect)~SharpDX.Direct2D1.Effect">
            <summary>
            Operator to implicitly retrieve the <see cref="T:SharpDX.Direct2D1.Effect`1"/> object from the <see cref="T:PoncheToolkit.Graphics2D.Effects.PTCustomEffect"/>.
            </summary>
            <param name="effect"></param>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.DirtyProperties">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.IsStateUpdated">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Log">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.OnPropertyChangedEvent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.OnStateUpdatedEvent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.ToDispose``1(``0)">
            <summary>
            Add an element to the list of objects that will be destroyed when the Dispose method is called.
            </summary>
            <param name="disposable"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.SetPropertyAsDirty``1(``0@,``0,System.String,System.Boolean)">
            <summary>
            Checks if a property already matches a desired value.  Sets the property and
            notifies listeners only when necessary.
            If the property is new, it will be set as dirty, and added using the <see cref="M:PoncheToolkit.Core.Game11.AddDirtyObject(PoncheToolkit.Core.IUpdatableState)"/> method.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="field">Reference to a property with both getter and setter.</param>
            <param name="value">Desired value for the property.</param>
            <param name="propertyName">
                Name of the property used to notify listeners.  This
                value is optional and can be provided automatically when invoked from compilers that
                support CallerMemberName.
            </param>
            <param name="addDirtyObject">Set if when changing a property, it adds this UpdatableObject to the list of DirtyObjects
            from the <see cref="T:PoncheToolkit.Core.Game11"/> instance. There the dirty objects will automatically update their dirty properties.
            This can be set to false when changing properties in the <see cref="T:PoncheToolkit.Core.Game11"/> class, so it is not looped inside the UpdateState method.</param>
            <returns>
                True if the value was changed, false if the existing value matched the
                desired value.
            </returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Just set the property without any other validation or notification.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="field">Reference to a property with both getter and setter.</param>
            <param name="value">Desired value for the property.</param>
            <param name="propertyName">
                Name of the property used to notify listeners.  This
                value is optional and can be provided automatically when invoked from compilers that
                support CallerMemberName.
            </param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.OnPropertyChanged(System.Object,System.String)">
            <summary>
            Method to call the property changed event.
            </summary>
            <param name="sender"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.OnStateUpdated(System.EventArgs)">
            <summary>
            Method to call the State Updated event.
            This event add the object to the DirtyObjects of the <see cref="T:PoncheToolkit.Core.Game"/> class.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.Clone``1">
            <summary>
            Clone the object calling the native <see cref="M:System.Object.MemberwiseClone"/> method.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.addDirtyProperty``1(System.String,``0@,System.Boolean)">
            <summary>
            Add a new dirty property to the properties that will be updated the next time the UpdateState is called.
            </summary>
            <param name="propertyName"></param>
            <param name="addDirtyObject">See the description from the <see cref="M:PoncheToolkit.Graphics2D.Effects.PTCustomEffect.SetPropertyAsDirty``1(``0@,``0,System.String,System.Boolean)"/> </param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect">
            <summary>
            Class that implements a simple 2D ripple effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.ScreenSize">
            <summary>
            Gets or sets the Frequency.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.Thickness">
            <summary>
            Gets or sets the phase.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.Threshold">
            <summary>
            Gets or sets the amplitude.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.UpdateBuffer(SharpDX.Direct2D1.ChangeType)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTEdgeDetectionEffect.EdgeDetectionEffectConstantBuffer">
            <summary>
            Internal structure used for the constant buffer.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect">
            <summary>
            Class that creates a 2D Custom Effect for shadow maps.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.ShadowMapSize">
            <summary>
            The size of the shadow map.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Target">
            <summary>
            Get or set the render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Guid">
            <summary>
            Get or set the assigned guid for this effect
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.LightManager">
            <summary>
            The service that manages the dynamic 2D lighting.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Color">
            <summary>
            Gets or sets the light color.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.SoftShadows">
            <summary>
            Gets or sets the spread.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Resolution">
            <summary>
            Gets or sets the resolution of the shadow map.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.UpdateBuffer(SharpDX.Direct2D1.ChangeType)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.MapOutputRectangleToInputRectangles(SharpDX.Mathematics.Interop.RawRectangle,SharpDX.Mathematics.Interop.RawRectangle[])">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect.ShadowRenderEffectConstantBuffer">
            <summary>
            Internal structure used for the constant buffer.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect">
            <summary>
            Class that creates a 2D Custom Effect for shadow maps.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.ShadowMapSize">
            <summary>
            The size of the shadow map.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Target">
            <summary>
            Get or set the render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Guid">
            <summary>
            Get or set the assigned guid for this effect
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Upscale">
            <summary>
            Gets or sets the spread.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Resolution">
            <summary>
            Gets or sets the center of the ripple effect.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.UpdateBuffer(SharpDX.Direct2D1.ChangeType)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect.ShadowMapEffectConstantBuffer">
            <summary>
            Internal structure used for the constant buffer.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTRippleEffect">
            <summary>
            Class that implements a simple 2D ripple effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Frequency">
            <summary>
            Gets or sets the Frequency.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Phase">
            <summary>
            Gets or sets the phase.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Amplitude">
            <summary>
            Gets or sets the amplitude.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Spread">
            <summary>
            Gets or sets the spread.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Center">
            <summary>
            Gets or sets the center of the ripple effect.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.UpdateBuffer(SharpDX.Direct2D1.ChangeType)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.Register(SharpDX.Direct2D1.Factory1,SharpDX.Direct2D1.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTRippleEffect.RippleEffectConstantBuffer">
            <summary>
            Internal structure used for the constant buffer.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect">
            <summary>
            Class that implements a simple 2D ripple effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.Guid">
            <summary>
            Get or set the assigned guid for this effect
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.IsUsed">
            <summary>
            Get or set if the effect is being used as a post processing effect during 3D rendering.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.Order">
            <summary>
            The order that this post process effect will be rendered within the <see cref="P:PoncheToolkit.Core.IGraphicsRenderer.PostProcessEffects"/> sorted list.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.#ctor(System.String)">
            <summary>
            Constructor.
            Creates a new <see cref="T:System.Guid"/>. This Guid will be used when the Register method is called, so it can be generated again if wanted before calling this method.
            </summary>
            <param name="pixelShaderPath">The path to the pixel shader relative to the <see cref="P:PoncheToolkit.Core.Game.ContentDirectoryName"/> directory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.SetProcessingOrder(System.Int32)">
            <summary>
            Set the order that this post process effect will be rendered within the <see cref="P:PoncheToolkit.Core.IGraphicsRenderer.PostProcessEffects"/> sorted list.
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Effects.PTPostProcessEffect.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Lighting.Light2D">
            <summary>
            Class that represent a light emitter in 2D.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Lighting.Light2D.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Lighting.Light2D.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Lighting.Light2D.DeviceContext">
            <summary>
            Get the device context used to render the light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Lighting.Light2D.Position">
            <summary>
            Get or set the position of the light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Lighting.Light2D.Size">
            <summary>
            Get the size of the light.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.#ctor(PoncheToolkit.Core.Game11,PoncheToolkit.Core.Services.Dynamic2DLightManagerService,SharpDX.Vector2,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="manager">The manager service that created this light.</param>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.Begin(SharpDX.Direct3D11.DepthStencilView)">
            <summary>
            Begin the draw.
            Between this method and the <see cref="M:PoncheToolkit.Graphics2D.Lighting.Light2D.End(SharpDX.Direct3D11.DepthStencilView)"/> method, all the objects that wants to be rendered with shadows
            must be drawn.
            </summary>
            <param name="depthView"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.End(SharpDX.Direct3D11.DepthStencilView)">
            <summary>
            End the shadow rendering. Here are applied the effects to blend the result.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.ToRelativePosition(SharpDX.Vector2)">
            <summary>
            Converts a position in the x,y coordinate to center of a light.
            </summary>
            <param name="worldPosition"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.ApplyShadowMap(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct2D1.DeviceContext,PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect,PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect,SharpDX.Direct2D1.Bitmap1,SharpDX.Direct2D1.Effects.BitmapSource)">
            <summary>
            Apply its state to the GPU.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.RenderShadow(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct2D1.DeviceContext,PoncheToolkit.Graphics2D.Effects.PTShadowMapEffect,PoncheToolkit.Graphics2D.Effects.PTShadowRenderEffect,SharpDX.Direct2D1.Bitmap1)">
            <summary>
            Apply its state to the GPU.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Lighting.Light2D.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.Sprite">
            <summary>
            Represent a single sprite to be drawn.
            Has properties like size, scale, origin or position.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Sprite.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.Sprite.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Texture">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/> that holds the image to be drawn.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Position">
            <summary>
            Position of the sprite.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Origin">
            <summary>
            Origin of the sprite, to create rotations and other calculations.
            This value is a x,y coordinate taken from the original size of the texture.
            The value set must be in reference of the original size of the texture.
            When obtained, it is multiplied by the scale.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Scale">
            <summary>
            The scale of the sprite.
            This is the property used to change the size of the Sprite.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Size">
            <summary>
            Get the original size of the texture representing the sprite.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.Rotation">
            <summary>
            Rotation of the sprite.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.DeviceContext">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> used to render this sprite into.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.Sprite.TexturePath">
            <summary>
            Path where the texture is held for this <see cref="T:PoncheToolkit.Graphics2D.Sprite"/>.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Sprite.#ctor(PoncheToolkit.Core.Game,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Sprite.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Sprite.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.Sprite.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.MatricesStruct2D">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.MatricesStruct2D.World">
            <summary>
            The world matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.MatricesStruct2D.View">
            <summary>
            The view matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.MatricesStruct2D.Ortho">
            <summary>
            The ortho matrix
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.MatricesStruct2D.#ctor(SharpDX.Matrix,SharpDX.Matrix,SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="world"></param>
            <param name="view"></param>
            <param name="ortho"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.PTFont">
            <summary>
            Class that has Fonts properties.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTFont.Name">
            <summary>
            Name of the font.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTFont.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="familyFontName">The name of the font family.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.TextBrushes">
            <summary>
            Enumeration for different default Text Brushes colors.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.TextBrushes.Black">
            <summary>
            Black text
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.TextBrushes.White">
            <summary>
            White text.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.TextBrushes.Yellow">
            <summary>
            Yellow text.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.TextBrushes.Red">
            <summary>
            Red text.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.SpriteBatch">
            <summary>
            Class that manages the rendering for 2D objects and texts.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.textBrushesList">
            <summary>
            List with the default color brushes.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.SpriteBatch.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.SpriteBatch.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.DEFAULT_TEXT_FORMAT">
            <summary>
            The default text format.
            <para/> Size: 18dpi, Font-Family: Segoe-UI
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.DEFAULT_TEXT_FORMAT_BOLD">
            <summary>
            The default text format.
            <para/> Size: 18dpi, Font-Family: Segoe-UI, Weight: Bold
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.INFO_TEXT_FORMAT">
            <summary>
            The default text format.
            <para/> Size: 10dpi, Font-Family: Segoe-UI
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.WARNING_TEXT_FORMAT">
            <summary>
            The default text format.
            <para/> Size: 10dpi, Font-Family: Segoe-UI
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.ERROR_TEXT_FORMAT">
            <summary>
            The default text format.
            <para/> Size: 10dpi, Font-Family: Segoe-UI
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.SpriteBatch.POZO_BOLD">
            <summary>
            The default text format.
            <para/> Size: 20dpi, Font-Family: Pozotwo
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.SpriteBatch.Target">
            <summary>
            Get the current used target by the <see cref="T:SharpDX.Direct2D1.DeviceContext"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.SpriteBatch.WriteFactory">
            <summary>
            Get the current used target by the <see cref="T:SharpDX.Direct2D1.DeviceContext"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.SpriteBatch.D2dFactory">
            <summary>
            The factory associated to the SpriteBatch.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.CreateOfflineDeviceContext">
            <summary>
            Create a <see cref="T:SharpDX.Direct2D1.DeviceContext"/> that will be used to render offline content
            for Post processing. It also creates a default <see cref="T:SharpDX.Direct2D1.Bitmap1"/> as the <see cref="P:SharpDX.Direct2D1.DeviceContext.Target"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.ReleaseTarget">
            <summary>
            Realease the Render Target so the Back buffer can be resized.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.Begin">
            <summary>
            Begin the drawing of 2D content.
            It is recommended to call this the fewest as possible
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.Begin(SharpDX.Direct2D1.Bitmap1)">
            <summary>
            Begin the drawing of 2D content.
            It is recommended to call this the fewest as possible
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.Begin(SharpDX.Matrix3x2)">
            <summary>
            Begin the drawing of 2D content.
            It is recommended to call this the fewest as possible
            </summary>
            <param name="transform">Set the transform for the rendering. It can define translation, scale.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.End">
            <summary>
            End the drawing of 2D content.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.ConvertPointSizeToDIP(System.Single)">
            <summary>
            Convert points to DIP's for Fonts.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,SharpDX.Vector2,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="scale">Scale of the texture from the original.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(SharpDX.Direct2D1.Bitmap1,SharpDX.Vector2,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="bitmap">The <see cref="T:SharpDX.Direct2D1.Bitmap1"/> to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="scale">Scale of the texture from the original.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,SharpDX.Vector2,SharpDX.RectangleF,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="sourceRectangle">Rectangle to retrieve from the original texture.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,SharpDX.Vector2,SharpDX.Mathematics.Interop.RawRectangleF,SharpDX.Color,System.Single,SharpDX.Vector2,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="sourceRectangle">Rectangle to retrieve from the original texture.</param>
            <param name="color">The color to tint the texture.</param>
            <param name="rotation">The rotation of the texture.</param>
            <param name="origin">The origin where the rotation is made.</param>
            <param name="scale">The scaling of the texture.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,System.Collections.Generic.List{SharpDX.Direct2D1.Effect},SharpDX.Vector2,SharpDX.Mathematics.Interop.RawRectangleF,SharpDX.Color,System.Single,SharpDX.Vector2,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="effects">List of effects to be applied to the shader, the order is important. The input of each Effect will be the previous Effect.
            The first input is the texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="sourceRectangle">Rectangle to retrieve from the original texture.</param>
            <param name="color">The color to tint the texture.</param>
            <param name="rotation">The rotation of the texture.</param>
            <param name="origin">The origin where the rotation is made.</param>
            <param name="scale">The scaling of the texture.</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTexture(PoncheToolkit.Graphics2D.PTTexture2D,SharpDX.Vector2,SharpDX.Mathematics.Interop.RawRectangleF,SharpDX.Vector2,System.Single)">
            <summary>
            Draw a texture with the specified parameters.
            </summary>
            <param name="texture">Texture to be drawn.</param>
            <param name="position">Position of the texture.</param>
            <param name="sourceRectangle">Rectangle to retrieve from the original texture.</param>
            <param name="scale">Scale of the texture (0-1).</param>
            <param name="opacity">Opacity of the texture in the range 0-1.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.Vector2,PoncheToolkit.Graphics2D.TextBrushes)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="brushColor">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.Vector2,PoncheToolkit.Graphics2D.TextBrushes,SharpDX.Direct2D1.DrawTextOptions)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="brushColor">Color of the text.</param>
            <param name="options">The drawing options.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.Vector2,SharpDX.DirectWrite.TextFormat,PoncheToolkit.Graphics2D.TextBrushes)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="format">The format of the text.</param>
            <param name="brushColor">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.Vector2,SharpDX.DirectWrite.TextFormat,PoncheToolkit.Graphics2D.TextBrushes,SharpDX.Direct2D1.DrawTextOptions)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="format">The format of the text.</param>
            <param name="brushColor">Color of the text.</param>
            <param name="options">The drawing options.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.RectangleF,PoncheToolkit.Graphics2D.TextBrushes)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="destination">Destination rectangle of the text.</param>
            <param name="brushColor">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawText(System.String,SharpDX.RectangleF,PoncheToolkit.Graphics2D.TextBrushes,SharpDX.Direct2D1.DrawTextOptions)">
            <summary>
            Draw text with the specified parameters.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="destination">Destination rectangle of the text.</param>
            <param name="brushColor">Color of the text.</param>
            <param name="options">The drawing options.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTextLayout(System.String,SharpDX.Vector2,System.Single,SharpDX.DirectWrite.TextLayout,PoncheToolkit.Graphics2D.TextBrushes)">
            <summary>
            Draw text with the specified layout.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="fontSize">The size of the font.</param>
            <param name="textLayout">The layout of the text.</param>
            <param name="brushColor">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTextLayout(System.String,SharpDX.Vector2,SharpDX.DirectWrite.TextFormat,System.Single,PoncheToolkit.Graphics2D.TextBrushes)">
            <summary>
            Draw text with the specified layout.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="textFormat">The Text Format of the text. There are some static default formats.</param>
            <param name="fontSize">The size of the font.</param>
            <param name="brushColor">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.DrawTextLayout(System.String,SharpDX.Vector2,SharpDX.DirectWrite.TextFormat,System.Collections.Generic.List{SharpDX.DirectWrite.TextRange},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{PoncheToolkit.Graphics2D.TextBrushes})">
            <summary>
            Draw text creating a TextLayout with the specified parameters and ranges.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="position">Position of the text.</param>
            <param name="textFormat">The Text Format of the text. There are some static default formats.</param>
            <param name="ranges">Ranges to change the format of text.</param>
            <param name="fontSizes">Sizes for the text ranges.</param>
            <param name="brushColors">Color of the text.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.SpriteBatch.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.PTTexture2D">
            <summary>
            Class that replace the Direct3D texture and add IConvertible implementation.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.PTTexture2D.TextureType">
            <summary>
            Type of texture.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.Render">
            <summary>
            Represent a texture that will be sent to the gpu to be rendered.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.BumpMap">
            <summary>
            Represent a texture that will be used as a Bump map. (Normal map).
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.SpecularMap">
            <summary>
            Represent a texture that will be used as a Specular map.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.Reflective">
            <summary>
            Represent a texture that will be used as a Reflection.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.Sampler">
            <summary>
            SamplerState to send to the Shader to sample the texture.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.GenerateMipMaps">
            <summary>
            If the texture will generate mip maps.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Width">
            <summary>
            Get Width of the texture.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Height">
            <summary>
            Get Height of the texture.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Size">
            <summary>
            Get the original size of the texture.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Translation">
            <summary>
            Get or set the translation of the UV coordinates inside the gpu.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Path">
            <summary>
            Get the path where the texture was loaded.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Bitmap">
            <summary>
            Get or set the bitmap property.
            This is used mainly when rendering this texture with Direct2D.
            When using the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2D(System.String,System.String,System.Boolean)"/> this bitmap is automatically assigned.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.BitmapSourceEffect">
            <summary>
            Get or set the bitmap property.
            This is used mainly when rendering this texture with Direct2D.
            When using the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadTexture2D(System.String,System.String,System.Boolean)"/> this bitmap is automatically assigned.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.ShaderResourceView">
            <summary>
            Get or set the shader resource view.
            If it is get before it is set, it is created with default properties. (NO ShaderResourceViewDescription).
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.Type">
            <summary>
            Type of texture to identify how to process it before it is sent to the gpu.
            Default: <see cref="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.Render"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics2D.PTTexture2D.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.PTTexture2D.Texture">
            <summary>
            The DirectX Texture.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics2D.PTTexture2D.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2D)">
            <summary>
            Constructor.
            </summary>
            <param name="device">The device used to draw.</param>
            <param name="texture"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.SetTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,System.Boolean)">
            <summary>
            Add a texture path.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="asDirty">The value to indicate if the property must be set dirty, so when the <see cref="M:PoncheToolkit.Graphics2D.PTTexture2D.UpdateState"/>
            method is called, the textures are created. If it set to false, the textures must be manually loaded into memory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.SetTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,PoncheToolkit.Graphics2D.PTTexture2D.TextureType,System.Boolean)">
            <summary>
            Add a texture path.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="type">The type of texture.</param>
            <param name="asDirty">The value to indicate if the property must be set dirty, so when the <see cref="M:PoncheToolkit.Graphics2D.PTTexture2D.UpdateState"/>
            method is called, the textures are created. If it set to false, the textures must be manually loaded into memory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.PTTexture2D.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics2D.VertexMainStruct2D">
            <summary>
            Structure that holds values for position(Vector3), Color(Vector4) and TexCoord(Vector2).
            Note: Changing the order of how the properties are declared, change the final result.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.VertexMainStruct2D.Position">
            <summary>
            The Position of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics2D.VertexMainStruct2D.TexCoord">
            <summary>
            The Texture of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics2D.VertexMainStruct2D.#ctor(SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex in Vector3 format, the z component is discarded.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.MatricesStruct2D">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct2D.Projection">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MatricesStruct2D.#ctor(SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="projection">The projectionmatrix.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct">
            <summary>
            Struct that holds the basic lighting information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct.BufferSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct.InverseBufferSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct.Near">
            <summary>
            The near plane from the camera.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct.NearLog">
            <summary>
            The near plane using the logarithmic function to compute cluster index.  -- 1 / log(sD + 1).
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.ClusteredGlobalStruct.#ctor(SharpDX.Vector2,SharpDX.Vector2,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.GlobalDataStruct">
            <summary>
            Struct that holds the basic lighting information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.GlobalDataStruct.GlobalAmbient">
            <summary>
            The global ambient color.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.GlobalDataStruct.CurrentLights">
            <summary>
            The number of lights that will be sent in the current frame.
            This value will be changing dynamically.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.GlobalDataStruct.Padding">
            <summary>
            Padding.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.GlobalDataStruct.#ctor(SharpDX.Vector4,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="globalAmbient">The global ambient color.</param>
            <param name="lights">The lights to be sento to the shader. There is a maximum of <see cref="F:PoncheToolkit.Graphics3D.Effects.PTLight.FORWARD_SHADING_MAX_LIGHTS"/> number of lights.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.LightBufferStruct">
            <summary>
            Struct that holds the basic lighting information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightBufferStruct.Lights">
            <summary>
            The lights to be sent to the shader.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.LightBufferStruct.#ctor(System.Collections.Generic.List{PoncheToolkit.Graphics3D.Effects.PTLight})">
            <summary>
            Constructor.
            </summary>
            <param name="lights">The lights to be sento to the shader. There is a maximum of <see cref="F:PoncheToolkit.Graphics3D.Effects.PTLight.FORWARD_SHADING_MAX_LIGHTS"/> number of lights.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.MaterialStruct">
            <summary>
            Struct that holds the material information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.EmissiveColor">
            <summary>
            The color that emits from the material even when there is no external lights.
            Default: <see cref="F:SharpDX.Vector4.Zero"/>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.AmbientColor">
            <summary>
            The color of the ambient component
            Default: <see cref="F:SharpDX.Vector4.Zero"/>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.DiffuseColor">
            <summary>
            The color of the diffuse component.
            Default: <see cref="F:SharpDX.Vector4.Zero"/>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.SpecularColor">
            <summary>
            The color of the specular component.
            Default: <see cref="F:SharpDX.Vector4.Zero"/>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.ReflectiveColor">
            <summary>
            The color that of the reflection.
            Default: <see cref="F:SharpDX.Vector4.Zero"/>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.SpecularPower">
            <summary>
            The power of the specular component.
            Default: 15.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.Reflectivity">
            <summary>
            The power of the specular component.
            Default: 15.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.Opacity">
            <summary>
            The power of the specular component.
            Default: 1.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.Gamma">
            <summary>
            The property used to blend multiple textures.
            Default: 15.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.BlendTexturesCount">
            <summary>
            Number of textures sent to the shader for blending.
            By default it is set to 1.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.IsSpecular">
            <summary>
            Set to render specular lighting or not. 16 bit
            0 = false, 1 = true
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.IsBump">
            <summary>
            Set to render bump mapping. A Bump map texture must be set.
            0 = false, 1 = true. Default: false
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.IsReflective">
            <summary>
            Set to render reflections or not. 16 bit
            0 = false, 1 = true
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.HasSpecularMap">
            <summary>
            Set to render bump mapping. A Bump map texture must be set.
            0 = false, 1 = true. Default: false
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.TextureTranslation">
            <summary>
            The translation of the texture (this translation applies to the result of the blended textures).
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MaterialStruct.Padding">
            <summary>
            Padding.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MaterialStruct.#ctor(SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="emissiveColor">The color that the material emmits even without external lights.</param>
            <param name="ambientColor">The color of the ambient component.</param>
            <param name="diffuseColor">The color of the diffuse component.</param>
            <param name="specularColor">The color of the specular component.</param>
            <param name="reflectiveColor">The color of the reflection component.</param>
            <param name="specularPower">The specular power of the material.</param>
            <param name="reflectivity">The value of the power of reflectivity.</param>
            <param name="opacity">The alpha value for opacity.</param>
            <param name="gamma">The float value to multiply the textures (depends on the monitor).</param>
            <param name="isSpecular">Boolean value to set if the material draw specular lighting.</param>
            <param name="isBump">Boolean value to set if the material draw bump mapping.</param>
            <param name="isReflective">Boolean value to set if the material draw reflection.</param>
            <param name="hasSpecularMap">Boolean value to set if the material has a specular map.</param>
            <param name="blendTexturesCount">Number of textures sent to be blended.</param>
            <param name="textureTranslation">The translation of the UV coordinates of the textures.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MaterialStruct.#ctor(SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Int32,SharpDX.Vector2)">
            <summary>
            Constructor. Without reflection.
            </summary>
            <param name="emissiveColor">The color that the material emmits even without external lights.</param>
            <param name="ambientColor">The color of the ambient component.</param>
            <param name="diffuseColor">The color of the diffuse component.</param>
            <param name="specularColor">The color of the specular component.</param>
            <param name="specularPower">The specular power of the material.</param>
            <param name="opacity">The alpha value for opacity.</param>
            <param name="gamma">The float value to multiply the textures (depends on the monitor).</param>
            <param name="isSpecular">Boolean value to set if the material draw specular lighting.</param>
            <param name="isBump">Boolean value to set if the material draw bump mapping.</param>
            <param name="hasSpecularMap">Boolean value to set if the material has a specular map.</param>
            <param name="blendTexturesCount">Number of textures sent to be blended.</param>
            <param name="textureTranslation">The translation of the UV coordinates of the textures.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MaterialStruct.#ctor(SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,System.Single,System.Single,System.Boolean,System.Int32,SharpDX.Vector2)">
            <summary>
            Constructor. Without reflection and Specular.
            </summary>
            <param name="emissiveColor">The color that the material emmits even without external lights.</param>
            <param name="ambientColor">The color of the ambient component.</param>
            <param name="diffuseColor">The color of the diffuse component.</param>
            <param name="opacity">The alpha value for opacity.</param>
            <param name="gamma">The float value to multiply the textures (depends on the monitor).</param>
            <param name="isBump">Boolean value to set if the material draw bump mapping.</param>
            <param name="blendTexturesCount">Number of textures sent to be blended.</param>
            <param name="textureTranslation">The translation of the UV coordinates of the textures.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.MatricesStructPerFrame">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStructPerFrame.WorldMatrix">
            <summary>
            The wolrd matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStructPerFrame.WorldInverseTransposeMatrix">
            <summary>
            The world inverse transposed matrix of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MatricesStructPerFrame.#ctor(SharpDX.Matrix,SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="world">The world for the instance.</param>
            <param name="worldInverseTranspose">The worldInverseTranspose matrix for the instance.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.MatricesStructPerObject">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStructPerObject.WorldMatrix">
            <summary>
            The wolrd matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStructPerObject.WorldViewProjection">
            <summary>
            The wolrd matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStructPerObject.InverseTransposeWorld">
            <summary>
            The world inverse transposed matrix of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MatricesStructPerObject.#ctor(SharpDX.Matrix,SharpDX.Matrix,SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="world">The world for the instance.</param>
            <param name="worldViewProjection">The worldViewProjection for the instance.</param>
            <param name="inverseTransposeWorld">The worldInverseTranspose matrix for the instance.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect">
            <summary>
            Class that represent the effect that at least all the models will have.
            Has basic lights just for a minimum "good looking" rendering.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.MaxLightsCount">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.CameraPosition">
            <summary>
            The camera position to apply the effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.CurrentCamera">
            <summary>
            The current camera used for transformations.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.ClipPlain">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct"/> resource to be updated to the gpu.
            By default it is initialized to clip a distance of 100 in the three axis. (100, 100, 100)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.MaterialBuffer">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTMaterial"/> material to be sent to the gpu.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.MaterialCount">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.AddLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Add a new light to the <see cref="!:Lights"/> list.
            </summary>
            <param name="light">The Light.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.RemoveLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Remove a light from the <see cref="!:Lights"/> list.
            </summary>
            <param name="light">The Light to be removed.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.AddMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="!:Materials"/> dictionary.
            The material must have a name assigned.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect">
            <summary>
            Class that represent the very basic implementation for rendering.
            This effect supports at most 16 dynamic lights.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.MaxLightsCount">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.CameraPosition">
            <summary>
            The camera position to apply the effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.ClipPlain">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct"/> resource to be updated to the gpu.
            By default it is initialized to clip a distance of 100 in the three axis. (100, 100, 100)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.MaterialBuffer">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTMaterial"/> material to be sent to the gpu.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTDualParaboloidReflectionEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTEffect">
            <summary>
            The basic class that represent a shader effect.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.FORWARD_RENDER_EFFECT_PATH">
            <summary>
            The default path for the forward rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.TOON_RENDER_EFFECT_PATH">
            <summary>
            The default path for the toon rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.DUAL_PARABOLOID_REFLECTION_EFFECT_PATH">
            <summary>
            The path for the reflection rendering effect using dual paraboloids.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.CLUSTERED_FORWARD_RENDER_EFFECT_PATH">
            <summary>
            The default path for the clustered forward rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.SPRITE_EFFECT_PATH">
            <summary>
            The path for the effect to render 2D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.IsUsed">
            <summary>
            Set to true if this effects creates some post process effects and add them using the <see cref="M:PoncheToolkit.Core.IGraphicsRenderer.AddBackBufferPostProcessEffect(System.Int32,PoncheToolkit.Graphics2D.Effects.PTCustomEffect)"/> 
            method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Name">
            <summary>
            A simple name to identify the Effect.
            If it is not assigned the name will be the type of the effect + the physical name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.VertexShaderEntry">
            <summary>
            The main entry point for the vertex shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.PixelShaderEntry">
            <summary>
            The main entry point for the pixel shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Shader">
            <summary>
            The Shader object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.CustomPixelShaderSlot">
            <summary>
            The slot if the a custom pixel shader want to be used.
            For more information see the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)"/> description.
            Default: -1 (use the default implementation)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.GlobalAmbientColor">
            <summary>
            The global ambient color of the scene.
            <para>
            Default: Vector4(0.5f, 0.5f, 0.5f, 1)
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.CurrentLights">
            <summary>
            The number of lights that will be sent to the GPU in the current frame.
            <para>
            Default: 0
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials">
            <summary>
            The materials dictionary that this effect have.
            The key is the name of the material, there cannot be two materials with the same name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.ShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.VertexShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.PixelShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Lights">
            <summary>
            All the lights used by this effect.
            The lights can be added or removed using the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddLight(PoncheToolkit.Graphics3D.Effects.PTLight)"/> or <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect.RemoveLight(PoncheToolkit.Graphics3D.Effects.PTLight)"/> methods.
            <para>
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.InstanceBuffer">
            <summary>
            The buffer used to draw instanced meshes.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect.MaxLightsCount">
            <summary>
            The maximun number of lights this effect can render.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.MatricesConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.ClipConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.ReflectionConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.MaterialConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.GlobalDataConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect.LightsConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTEffect.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTEffect.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="shaderPath">The physical path to load the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="customPixelShaderSlot">The slot to be used if a custom shader want to be used. If no custom shader is going to be used, set it o -1.
            For more information see <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)"/> </param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,PoncheToolkit.Graphics3D.Effects.PTShader)">
            <summary>
            Constructor.
            Initialize Effect from an already compiled <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/>.
            </summary>
            <param name="game"></param>
            <param name="shader">The compiled <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> shader.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="vertexShaderEntry">The vertex shader main entry for the .fx file</param>
            <param name="pixelShaderEntry">The pixel shader main entry for the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="shaderPath">The physical path to load the .fx file</param>
            <param name="vertexShaderEntry">The vertex shader main entry for the .fx file</param>
            <param name="pixelShaderEntry">The pixel shader main entry for the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
            <remarks>If this class is inherited it is recommended to call the base.LoadContent() method first inside the
            overriden LoadContent, this base class Loads the shader into memory using the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadShader(System.String,System.Collections.Generic.List{System.String},System.String,System.String)"/>
            method.</remarks>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.LoadBuffers">
            <summary>
            Initialize the buffers with default behavior.
            Create the Matrcies, Clip, Reflection, Material, Lights buffers among others.
            This method is called withing the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/> method.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <summary>
            Apply its state to the GPU.
            Set the vertex and pixel shaders.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials"/> dictionary.
            The material must have a name assigned.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddMaterial(System.Int32,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials"/> dictionary.
            The material must have a name assigned.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddMaterial(System.String,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials"/> dictionary.
            </summary>
            <param name="name">Name of the material</param>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddMaterial(System.Int32,System.String,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials"/> dictionary.
            </summary>
            <param name="name">Name of the material</param>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.GetMaterial(System.String)">
            <summary>
            Retrieve a material by its name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.GetMaterial(System.Int32)">
            <summary>
            Retrieve a material by its index.
            If the index is out of range, return the default textureless material.
            </summary>
            <param name="index">The index of the material to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.AddLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Add a new light to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Lights"/> list.
            </summary>
            <param name="light">The Light.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.RemoveLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Remove a light from the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Lights"/> list.
            </summary>
            <param name="light">The Light to be removed.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTEffect11">
            <summary>
            The basic class that represent a shader effect.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.FORWARD_RENDER_EFFECT_PATH">
            <summary>
            The default path for the forward rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.TOON_RENDER_EFFECT_PATH">
            <summary>
            The default path for the toon rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.DUAL_PARABOLOID_REFLECTION_EFFECT_PATH">
            <summary>
            The path for the reflection rendering effect using dual paraboloids.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.CLUSTERED_FORWARD_RENDER_EFFECT_PATH">
            <summary>
            The default path for the clustered forward rendering effect. Does not include the 'Content' directory.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.SPRITE_EFFECT_PATH">
            <summary>
            The path for the effect to render 2D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.IsUsed">
            <summary>
            Set to true if this effects creates some post process effects and add them using the <see cref="M:PoncheToolkit.Core.IGraphicsRenderer.AddBackBufferPostProcessEffect(System.Int32,PoncheToolkit.Graphics2D.Effects.PTCustomEffect)"/> 
            method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Name">
            <summary>
            A simple name to identify the Effect.
            If it is not assigned the name will be the type of the effect + the physical name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.VertexShaderEntry">
            <summary>
            The main entry point for the vertex shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.PixelShaderEntry">
            <summary>
            The main entry point for the pixel shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Shader">
            <summary>
            The Shader object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.CustomPixelShaderSlot">
            <summary>
            The slot if the a custom pixel shader want to be used.
            For more information see the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)"/> description.
            Default: -1 (use the default implementation)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.GlobalAmbientColor">
            <summary>
            The global ambient color of the scene.
            <para>
            Default: Vector4(0.5f, 0.5f, 0.5f, 1)
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.CurrentLights">
            <summary>
            The number of lights that will be sent to the GPU in the current frame.
            <para>
            Default: 0
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Materials">
            <summary>
            The materials dictionary that this effect have.
            The key is the name of the material, there cannot be two materials with the same name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.ShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.VertexShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.PixelShaderPath">
            <summary>
            The physical path of the loaded shader.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Lights">
            <summary>
            All the lights used by this effect.
            The lights can be added or removed using the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddLight(PoncheToolkit.Graphics3D.Effects.PTLight)"/> or <see cref="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.RemoveLight(PoncheToolkit.Graphics3D.Effects.PTLight)"/> methods.
            <para>
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.MaxLightsCount">
            <summary>
            The maximun number of lights this effect can render.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.instanceBuffer">
            <summary>
            The buffer used to draw instanced meshes.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.matricesConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.clipConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.reflectionConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.materialConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.globalDataConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTEffect11.lightsConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.MatricesConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.ClipConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.ReflectionConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. VertexShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.MaterialConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.GlobalDataConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.LightsConstantBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.InstanceBuffer">
            <summary>
            Get or Set the buffer to be sent to the shader. PixelShader
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTEffect11.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTEffect11.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="shaderPath">The physical path to load the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="customPixelShaderSlot">The slot to be used if a custom shader want to be used. If no custom shader is going to be used, set it o -1.
            For more information see <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)"/> </param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,PoncheToolkit.Graphics3D.Effects.PTShader)">
            <summary>
            Constructor.
            Initialize Effect from an already compiled <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/>.
            </summary>
            <param name="game"></param>
            <param name="shader">The compiled <see cref="T:PoncheToolkit.Graphics3D.Effects.PTShader"/> shader.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="vertexShaderPath">The physical path to load the vertex shader file</param>
            <param name="pixelShaderPath">The physical path to load the pixel shader file</param>
            <param name="vertexShaderEntry">The vertex shader main entry for the .fx file</param>
            <param name="pixelShaderEntry">The pixel shader main entry for the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
            <param name="shaderPath">The physical path to load the .fx file</param>
            <param name="vertexShaderEntry">The vertex shader main entry for the .fx file</param>
            <param name="pixelShaderEntry">The pixel shader main entry for the .fx file</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
            <remarks>If this class is inherited it is recommended to call the base.LoadContent() method first inside the
            overriden LoadContent, this base class Loads the shader into memory using the <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadShader(System.String,System.Collections.Generic.List{System.String},System.String,System.String)"/>
            method.</remarks>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.LoadBuffers">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <summary>
            Apply its state to the GPU.
            Set the vertex and pixel shaders.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Materials"/> dictionary.
            The material must have a name assigned.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddMaterial(System.Int32,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Materials"/> dictionary.
            The material must have a name assigned.
            </summary>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddMaterial(System.String,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Materials"/> dictionary.
            </summary>
            <param name="name">Name of the material</param>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddMaterial(System.Int32,System.String,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Add a new material to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Materials"/> dictionary.
            </summary>
            <param name="name">Name of the material</param>
            <param name="material">The material.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.GetMaterial(System.String)">
            <summary>
            Retrieve a material by its name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.GetMaterial(System.Int32)">
            <summary>
            Retrieve a material by its index.
            If the index is out of range, return the default textureless material.
            </summary>
            <param name="index">The index of the material to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.AddLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Add a new light to the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Lights"/> list.
            </summary>
            <param name="light">The Light.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.RemoveLight(PoncheToolkit.Graphics3D.Effects.PTLight)">
            <summary>
            Remove a light from the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect11.Lights"/> list.
            </summary>
            <param name="light">The Light to be removed.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTEffect11.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect">
            <summary>
            Class that represent the very basic implementation for rendering.
            This effect supports at most 16 dynamic lights.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.MaxLightsCount">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.CameraPosition">
            <summary>
            The camera position to apply the effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.MaterialBuffer">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTMaterial"/> material to be sent to the gpu.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.ClipPlainVector">
            <summary>
            Get or set the <see cref="T:SharpDX.Vector4"/> vector for clipping.
            By default it is initialized to clip a distance of 1000 in the three axis. (1000, 1000, 1000, 1)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.ClipPlain">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct"/> resource to be updated to the gpu.
            By default it is initialized to clip a distance of 100 in the three axis. (100, 100, 100)
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.#ctor(PoncheToolkit.Core.Game11,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="customPixelShaderSlot">The slot to be used if a custom shader want to be used. If no custom shader is going to be used, set it to -1.
            For more information see <see cref="M:PoncheToolkit.Core.Management.Content.ContentManager11.LoadPixelShaderInto(System.String,PoncheToolkit.Graphics3D.Effects.PTShader@,System.Int32,System.Collections.Generic.List{System.String},System.String)"/> </param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.LoadBuffers">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLinkingForwardRenderEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTLightTorch">
            <summary>
            Class that maps the <see cref="T:PoncheToolkit.Graphics3D.Effects.LightStruct"/> functionality so it can be used as reference.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLightTorch.#ctor">
            <summary>
            Constructor. Create default values.
            </summary>
            <param name="index">The index of the light to be retrieved from the lights array.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLightTorch.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLightTorch.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <summary>
            Updates the logic and rendering properties of the light.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTToonEffect">
            <summary>
            Class that represent the effect that at least all the models will have.
            Has basic lights just for a minimum "good looking" rendering.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTToonEffect.ToonLimits">
            <summary>
            The restriction of the 4 toon shadow intensity.
            Uses x, y, z, w, going from bright to shadow.
            The values must be between 0 - 1.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="vertexShaderPath">The path to use for the .fx file.</param>
            <param name="pixelShaderPath">The path to use for the .fx file.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32)" -->
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.LoadBuffers">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTToonEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTLight">
            <summary>
            Class that maps the <see cref="T:PoncheToolkit.Graphics3D.Effects.LightStruct"/> functionality so it can be used as reference.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTLight.FORWARD_SHADING_MAX_LIGHTS">
            <summary>
            The maximun lights used by the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect"/>.
            TODO: Right now the Device is sending and error when there are more than 16 <see cref="T:SharpDX.Direct3D11.ClassInstance"/> objects set into the Shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTLight.CLUSTERED_FORWARD_SHADING_MAX_LIGHTS">
            <summary>
            The maximun lights used by the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTClusteredForwardRenderEffect"/>.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTLight.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.DebugModel">
            <summary>
            The model to be rendered where the light is.
            This will be null until the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTLight.LoadDebugContent(PoncheToolkit.Core.Game11)"/> method is called.
            For release, the lights should not call the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTLight.LoadDebugContent(PoncheToolkit.Core.Game11)"/> method.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Index">
            <summary>
            The index of the light in the lights array.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Position">
            <summary>
            The position of the light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Direction">
            <summary>
            The direction of the light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Color">
            <summary>
            Color of the Light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.SpotAngle">
            <summary>
            Get or set the angle for the spot lights.
            Bigger the value, the cone gets narrower.
            <para>
            Default: 45. (This is the radius, make a 90 degree spot light).
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.ConstantAttenuation">
            <summary>
            Get or set the attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.
            <para>
            Default: 1
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.LinearAttenuation">
            <summary>
            Get or set the attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.
            <para>
            Default: 0.08
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.QuadraticAttenuation">
            <summary>
            Get or set the attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.
            <para>
            Default: 0
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.MinIntensity">
            <summary>
            Get or set the minimum bound of intensity of the light.
            Default: 0
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.MaxIntensity">
            <summary>
            Get or set the maximum bound of intensity of the light.
            Default: 2
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Intensity">
            <summary>
            Get or set the intensity of the light.
            Default: 1
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Range">
            <summary>
            Get or set range of the light before it is unseeable.
            Default: 10
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.Type">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.LightType"/> of the light.
            Default: <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Directional"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.IsEnabled">
            <summary>
            Get or set if the light is enabled to be rendered in GPU.
            Default: true.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTLight.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLight.#ctor">
            <summary>
            Constructor. Create default values.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLight.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLight.LoadDebugContent(PoncheToolkit.Core.Game11)">
            <summary>
            This method should be used if the model for the light wants to be loaded.
            Will load a primitive to be rendered where the light is positioned.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTLight.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <summary>
            Updates the logic and rendering properties of the light.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.LightType">
            <summary>
            The types of lights the engine can render.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightType.Directional">
            <summary>
            A directional light. This is a light that has no position, it only
            has direction, infinite.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightType.Point">
            <summary>
            A light that points everywhere from its position.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot">
            <summary>
            A light in form of a cone within a certain angle.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.LightStruct">
            <summary>
            Struct that holds the basic lighting information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Color">
            <summary>
            The light color.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Position">
            <summary>
            The position of the emition of light.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Direction">
            <summary>
            The light direction.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.SpotAngle">
            <summary>
            The angle of the light if it is a SpotLight.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.ConstantAttenuation">
            <summary>
            The attenuation (light intensity) when going far from the emitting position.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.LinearAttenuation">
            <summary>
            The attenuation (light intensity) when going far from the emitting position.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.QuadraticAttenuation">
            <summary>
            The attenuation (light intensity) when going far from the emitting position.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Intensity">
            <summary>
            The intensity of the light. Default: 1
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Range">
            <summary>
            The range in units before the light become unseeable.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.Type">
            <summary>
            The type of light obtained from <see cref="T:PoncheToolkit.Graphics3D.Effects.LightType"/>.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.LightStruct.IsEnabled">
            <summary>
            If the light is enabled.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.LightStruct.#ctor(SharpDX.Vector4,SharpDX.Vector4,SharpDX.Vector4,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,PoncheToolkit.Graphics3D.Effects.LightType,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The diffuse color.</param>
            <param name="direction">The ambient color.</param>
            <param name="color">The specular color.</param>
            <param name="spotAngle">The angle for the spot lights.</param>
            <param name="constantAtt">The constant light attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.</param>
            <param name="linearAtt">The linear light attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.</param>
            <param name="quadraticAtt">The quadratic light attenuation for the <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Point"/> and <see cref="F:PoncheToolkit.Graphics3D.Effects.LightType.Spot"/> types.</param>
            <param name="intensity">The intensity of the light. Default: 1</param>
            <param name="range">The range in units before the light become unseeable.</param>
            <param name="type">The type of light to be rendered, taken from <see cref="T:PoncheToolkit.Graphics3D.Effects.LightType"/>.</param>
            <param name="isEnabled">If the light is enabled.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PerObjectStruct">
            <summary>
            Struct that holds the View-Projection matrix information to be sent to the shader.
            This struct will be used when rendering only one instance of a model in one draw-call.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PerObjectStruct.World">
            <summary>
            The World matrix per object.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PerObjectStruct.InverseTransposeWorld">
            <summary>
            The InverseTransposeWorld matrix per object.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PerObjectStruct.WorldViewProjection">
            <summary>
            The WorldViewProjection matrix per object.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PerObjectStruct.#ctor(SharpDX.Matrix,SharpDX.Matrix,SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="world">The world matrix.</param>
            <param name="inverseTransposeWorld">The inverseTransposeWorld matrix.</param>
            <param name="worldViewProjection">The worldViewProjection matrix.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PerInstanceStruct">
            <summary>
            Struct that holds the View-Projection matrix information to be sent to the shader.
            This struct will be used when rendering multiple instances of a model in one draw-call.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PerInstanceStruct.ViewProjectionMatrix">
            <summary>
            The ViewProjectionMatrix matrix per instance.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PerInstanceStruct.#ctor(SharpDX.Matrix)">
            <summary>
            Constructor.
            </summary>
            <param name="viewProjection">The viewProjection matrix.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTMaterial">
            <summary>
            Represent a single material that an <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> object has.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTMaterial.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTMaterial.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTMaterial.DEFAULT_COLOR_MATERIAL_KEY">
            <summary>
            The key to retrieve the common material for wood rendering from the <see cref="P:PoncheToolkit.Graphics3D.Effects.PTEffect.Materials"/> dictionary.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Name">
            <summary>
            The name of the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.SpecularPower">
            <summary>
            The specular power of the material.
            Default: 10.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Reflectivity">
            <summary>
            The reflectivity of the material.
            Default: 1.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Opacity">
            <summary>
            The opacity of the material.
            Default: 1
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.EmissiveColor">
            <summary>
            The emmisive color of the material even if there is no light.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.AmbientColor">
            <summary>
            The ambient color of the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.DiffuseColor">
            <summary>
            The diffuse color of the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.SpecularColor">
            <summary>
            The specular color of the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.ReflectiveColor">
            <summary>
            The emmisive color of the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.IsSpecularEnabled">
            <summary>
            Set or get if the material render the specular lighting.
            Default: false
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.IsReflectivityEnabled">
            <summary>
            Set or get if the material render the specular lighting.
            Default: false
            <para>Set as dirty.</para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.IsBumpEnabled">
            <summary>
            Set or get if the material render the specular lighting.
            Default: false
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.HasSpecularMap">
            <summary>
            Set or get if the material has a specular map specified to be sento to the gpu.
            If not, the specular lighting is set overall the model/mesh.
            Default: false
            <para>Set as dirty.</para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.HasBumpMap">
            <summary>
            Set or get if the material has a bump map specified to be sento to the gpu.
            Default: false
            <para>Set as dirty.</para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.TexturesCount">
            <summary>
            The number of textures sent to the gpu.
            Default: 0
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Gamma">
            <summary>
            The number of textures sent to the gpu.
            Default: 1
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.TextureTranslation">
            <summary>
            The translation of the UV coordinates for the blended textures.
            Default: Vector3(0, 0).
            <para>Set as dirty.</para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.ReflectionBuffer">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.ReflectionStruct"/> resource to be updated to the gpu.
            This value is automatically recreated inside the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/> method when any of the properties has changed.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Textures">
            <summary>
            The textures used in this model.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.TexturePaths">
            <summary>
            The paths of the textures for this model.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.HasTexture">
            <summary>
            Value to indicate if the model has a texture, so it can be sent to the shader correctly.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.Game">
            <summary>
            The game instance.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTMaterial.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.#ctor(PoncheToolkit.Core.Game11,PoncheToolkit.Graphics3D.PTTexturePath[])">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance</param>
            <param name="defaultTexturePaths">The path to load a default texture when the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/> method is called.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <summary>
            If there is no TexturePath or Texture added, here it adds a default texture.
            Create a default Sampler.
            </summary>
            <param name="contentManager"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState">
            <summary>
            Update the state of the Material.
            If any property of lighting is dirty, the values are recreated.
            Also check for newly added texture paths to create and load the textures.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.TextureByType(PoncheToolkit.Graphics2D.PTTexture2D.TextureType)">
            <summary>
            Get the first texture that finds by its type.
            </summary>
            <param name="type">The <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D.TextureType"/> type to search for.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.AddTexture(PoncheToolkit.Graphics2D.PTTexture2D,PoncheToolkit.Graphics2D.PTTexture2D.TextureType)">
            <summary>
            Add a texture path.
            This method fire the OnPropertyChanged event.
            If the texture paths are added before calling the <see cref="!:LoadContent(ContentManager11)"/> method,
            those textures are loaded there.
            If they are set as dirty and added after calling <see cref="!:LoadContent(ContentManager11)"/>, they will be
            loaded in the next <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/> iteration. (Immediatly when they are added).
            </summary>
            <param name="texture">The texture to be added.</param>
            <param name="type">The type of texture to be added.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.RemoveTexture(PoncheToolkit.Graphics3D.PTTexturePath,System.Boolean)">
            <summary>
            Removes a texture from the material and optionally dispose it from memory.
            </summary>
            <param name="path">The <see cref="T:PoncheToolkit.Graphics3D.PTTexturePath"/> of the texture to be removed.</param>
            <param name="disposeFromMemory">If the texture will also be dispose from the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/>. </param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.RemoveTexture(PoncheToolkit.Graphics2D.PTTexture2D,System.Boolean)">
            <summary>
            Removes a texture from the material and optionally dispose it from memory.
            </summary>
            <param name="texture">The <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/> to be removed.</param>
            <param name="disposeFromMemory">If the texture will also be dispose from the <see cref="T:PoncheToolkit.Core.Management.Content.ContentsPool"/>. </param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.AddTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,System.Boolean)">
            <summary>
            Add a texture path. This path will be loaded the next time the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/> method is called.
            The type of texture matters when loading and on how this texture will be used.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="asDirty">The value to indicate if the property must be set dirty, so when the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/>
            method is called, the textures are created. If it set to false, the textures must be manually loaded into memory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.AddTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,PoncheToolkit.Graphics2D.PTTexture2D.TextureType,System.Boolean)">
            <summary>
            Add a texture path. This path will be loaded the next time the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/> method is called.
            The type of texture matters when loading and on how this texture will be used.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="type">The type of texture.</param>
            <param name="asDirty">The value to indicate if the property must be set dirty, so when the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/>
            method is called, the textures are created. If it set to false, the textures must be manually loaded into memory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.AddTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,System.Boolean,System.Int32)">
            <summary>
            Add a texture path. This path will be loaded the next time the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/> method is called.
            The type of texture matters when loading and on how this texture will be used.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="index">The index of the textures list where the texture must be set.</param>
            <param name="asDirty">The value to indicate if the property must be set dirty, so when the <see cref="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.UpdateState"/>
            method is called, the textures are created. If it set to false, the textures must be manually loaded into memory.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.SetTexturePath(PoncheToolkit.Graphics3D.PTTexturePath,System.Int32)">
            <summary>
            Add a texture path.
            This method fire the OnPropertyChanged event.
            </summary>
            <param name="texturePath">The texture path to be added.</param>
            <param name="index">The index where the texture path will be updated.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.Apply(PoncheToolkit.Graphics3D.Effects.PTEffect,PoncheToolkit.Graphics3D.PTMesh,SharpDX.Direct3D11.DeviceContext1)">
            <summary>
            Apply its state to the GPU for the given mesh with a certain effect.
            </summary>
            <param name="effect">The effect used for this material.</param>
            <param name="mesh">The mesh to which the material will be applied.</param>
            <param name="context">Context to apply the rendering.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.op_Equality(PoncheToolkit.Graphics3D.Effects.PTMaterial,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Operator to compare equality of materials.
            </summary>
            <param name="a">First material.</param>
            <param name="b">Second material.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTMaterial.op_Inequality(PoncheToolkit.Graphics3D.Effects.PTMaterial,PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Operator to compare unequality of materials.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct">
            <summary>
            Struct to send the clip properties to the gpu.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct.Clip">
            <summary>
            The clip distance.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct.#ctor(SharpDX.Vector4)">
            <summary>
            Constructor.
            </summary>
            <param name="clip"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.ReflectionStruct">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ReflectionStruct.ReflectionMatrixProjectionWorld">
            <summary>
            The ReflectionMatrixProjectionWorld matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ReflectionStruct.ParaboloidView">
            <summary>
            The view matrix of the parabaoloid camera position.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.ReflectionStruct.Direction">
            <summary>
            The Z direction to set the camera when building the dual paraboloids.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.ReflectionStruct.#ctor(SharpDX.Matrix,SharpDX.Matrix,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="reflectionMatrixProjectionWorld">The reflectionMatrixProjectionWorld matrix.</param>
            <param name="paraboloidView">The view matrix to build the paraboloids.</param>
            <param name="direction">The Z direction to build the paraboloids.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect">
            <summary>
            Class that represent the very basic implementation for rendering.
            This effect supports at most 16 dynamic lights.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.MaxLightsCount">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.CameraPosition">
            <summary>
            The camera position to apply the effect.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.MaterialBuffer">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics3D.Effects.PTMaterial"/> material to be sent to the gpu.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.ClipPlainVector">
            <summary>
            Get or set the <see cref="T:SharpDX.Vector4"/> vector for clipping.
            By default it is initialized to clip a distance of 1000 in the three axis. (1000, 1000, 1000, 1)
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.ClipPlain">
            <summary>
            Get or set the <see cref="T:PoncheToolkit.Graphics3D.Effects.ClipPlainStruct"/> resource to be updated to the gpu.
            By default it is initialized to clip a distance of 100 in the three axis. (100, 100, 100)
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.#ctor(PoncheToolkit.Core.Game11,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
            <param name="physicalShader">The path to use for the .fx file.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="vertexShaderPath">The path to use for the .fx file.</param>
            <param name="pixelShaderPath">The path to use for the .fx file.</param>
            <param name="includePaths">The list of paths after the "Content" directory, to take in consideration for including when compiling.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.#ctor(PoncheToolkit.Core.Game11,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32)" -->
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.LoadBuffers">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.Apply(SharpDX.Direct3D11.DeviceContext1)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.MatricesStruct">
            <summary>
            Struct that holds the World-View-Projection matrices information to be sent to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct.World">
            <summary>
            The world matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct.ViewProjection">
            <summary>
            The view-projection matrix
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct.WorldViewProjection">
            <summary>
            The world-view-projection matrix
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct.CameraPosition">
            <summary>
            The position of the camera. (The eye).
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.MatricesStruct.Padding">
            <summary>
            Padding.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.MatricesStruct.#ctor(SharpDX.Matrix,SharpDX.Matrix,SharpDX.Matrix,SharpDX.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="world">The world matrix.</param>
            <param name="viewProjection">The cpu pre-multiplied view projection matrix.</param>
            <param name="worldViewProjection">The cpu pre-multiplied world view projection matrix.</param>
            <param name="cameraPosition">The current camera position</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Effects.PTShader">
            <summary>
            Class that wraps shader functionality like type (Vertex, Pixel, Hull, etc)
            And contain other properties like ShaderSignature.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.VertexShaderSignature">
            <summary>
            The shader signature.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.PixelShader">
            <summary>
            The pixel shader compiled object.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.VertexShader">
            <summary>
            The vertex shader compiled object.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.InputLayout">
            <summary>
            The content to send to the gpu in its first stage: Input Layout.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.Linkage">
            <summary>
            The linkage to create abstract effects.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.CustomPixelShaderSlot">
            <summary>
            The slot of the custom pixel shader to be used.
            If no custom pixel shader will be used, this value is -1.
            0 index based.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.Paths">
            <summary>
            The physical paths where the .fx files are.
            These dictionary can have all the paths for the different shaders like vertex, pixel, tessel, etc.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Effects.PTShader.ClassInstances">
            <summary>
            Abstract declarations of HLSL instances that will permute their values dynamically.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Effects.PTShader.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Effects.PTShader.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTShader.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTShader.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTShader.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Effects.PTShader.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.AssimpMaterial">
            <summary>
            A material contains all the information that describes how to render a mesh. E.g. textures, colors, and render states. Internally
            all this information is stored as key-value pair properties. The class contains many convienence methods and properties for
            accessing non-texture/texture properties without having to know the Assimp material key names. Not all properties may be present,
            and if they aren't a default value will be returned.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.PropertyCount">
            <summary>
            Gets the number of properties contained in the material.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasName">
            <summary>
            Checks if the material has a name property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.Name">
            <summary>
            Gets the material name value, if any. Default value is an empty string.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTwoSided">
            <summary>
            Checks if the material has a two-sided property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.IsTwoSided">
            <summary>
            Gets if the material should be rendered as two-sided. Default value is false.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasShadingMode">
            <summary>
            Checks if the material has a shading-mode property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ShadingMode">
            <summary>
            Gets the shading mode. Default value is <see cref="F:PoncheToolkit.AssimpShadingMode.None"/>, meaning it is not defined.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasWireFrame">
            <summary>
            Checks if the material has a wireframe property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.IsWireFrameEnabled">
            <summary>
            Gets if wireframe should be enabled. Default value is false.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasBlendMode">
            <summary>
            Checks if the material has a blend mode property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.BlendMode">
            <summary>
            Gets the blending mode. Default value is <see cref="F:PoncheToolkit.AssimpBlendMode.Default"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasOpacity">
            <summary>
            Checks if the material has an opacity property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.Opacity">
            <summary>
            Gets the opacity. Default value is 1.0f.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasBumpScaling">
            <summary>
            Checks if the material has a bump scaling property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.BumpScaling">
            <summary>
            Gets the bump scaling. Default value is 0.0f;
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasShininess">
            <summary>
            Checks if the material has a shininess property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.Shininess">
            <summary>
            Gets the shininess. Default value is 0.0f;
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasShininessStrength">
            <summary>
            Checks if the material has a shininess strength property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ShininessStrength">
            <summary>
            Gets the shininess strength. Default vaulue is 1.0f.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasReflectivity">
            <summary>
            Checks if the material has a reflectivty property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.Reflectivity">
            <summary>
            Gets the reflectivity. Default value is 0.0f;
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorDiffuse">
            <summary>
            Checks if the material has a color diffuse property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorDiffuse">
            <summary>
            Gets the color diffuse. Default value is white.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorAmbient">
            <summary>
            Checks if the material has a color ambient property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorAmbient">
            <summary>
            Gets the color ambient. Default value is (.2f, .2f, .2f, 1.0f).
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorSpecular">
            <summary>
            Checks if the material has a color specular property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorSpecular">
            <summary>
            Gets the color specular. Default value is black.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorEmissive">
            <summary>
            Checks if the material has a color emissive property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorEmissive">
            <summary>
            Gets the color emissive. Default value is black.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorTransparent">
            <summary>
            Checks if the material has a color transparent property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorTransparent">
            <summary>
            Gets the color transparent. Default value is black.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasColorReflective">
            <summary>
            Checks if the material has a color reflective property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.ColorReflective">
            <summary>
            Gets the color reflective. Default value is black.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureDiffuse">
            <summary>
            Gets if the material has a diffuse texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureDiffuse">
            <summary>
            Gets or sets diffuse texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureSpecular">
            <summary>
            Gets if the material has a specular texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureSpecular">
            <summary>
            Gets or sets specular texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureAmbient">
            <summary>
            Gets if the material has a ambient texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureAmbient">
            <summary>
            Gets or sets ambient texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureEmissive">
            <summary>
            Gets if the material has a emissive texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureEmissive">
            <summary>
            Gets or sets emissive texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureHeight">
            <summary>
            Gets if the material has a height texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureHeight">
            <summary>
            Gets or sets height texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureNormal">
            <summary>
            Gets if the material has a normal texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureNormal">
            <summary>
            Gets or sets normal texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureOpacity">
            <summary>
            Gets if the material has an opacity texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureOpacity">
            <summary>
            Gets or sets opacity texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureDisplacement">
            <summary>
            Gets if the material has a displacement texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureDisplacement">
            <summary>
            Gets or sets displacement texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureLightMap">
            <summary>
            Gets if the material has a light map texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureLightMap">
            <summary>
            Gets or sets light map texture properties in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.HasTextureReflection">
            <summary>
            Gets if the material has a reflection texture in the first texture index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.AssimpMaterial.TextureReflection">
            <summary>
            Gets or sets reflection texture properties in the first texture index.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.AssimpMaterial"/> class.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.CreateFullyQualifiedName(System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Helper method to construct a fully qualified name from the input parameters. All the input parameters are combined into the fully qualified name: {baseName},{texType},{texIndex}. E.g.
            "$clr.diffuse,0,0" or "$tex.file,1,0". This is the name that is used as the material dictionary key.
            </summary>
            <param name="baseName">Key basename, this must not be null or empty</param>
            <param name="texType">Texture type; non-texture properties should leave this <see cref="F:PoncheToolkit.AssimpTextureType.None"/></param>
            <param name="texIndex">Texture index; non-texture properties should leave this zero.</param>
            <returns>The fully qualified name</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetNonTextureProperty(System.String)">
            <summary>
            Gets the non-texture properties contained in this Material. The name should be
            the "base name", as in it should not contain texture type/texture index information. E.g. "$clr.diffuse" rather than "$clr.diffuse,0,0". The extra
            data will be filled in automatically.
            </summary>
            <param name="baseName">Key basename</param>
            <returns>The material property, if it exists</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetProperty(System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Gets the material property. All the input parameters are combined into the fully qualified name: {baseName},{texType},{texIndex}. E.g.
            "$clr.diffuse,0,0" or "$tex.file,1,0".
            </summary>
            <param name="baseName">Key basename</param>
            <param name="texType">Texture type; non-texture properties should leave this <see cref="F:PoncheToolkit.AssimpTextureType.None"/></param>
            <param name="texIndex">Texture index; non-texture properties should leave this zero.</param>
            <returns>The material property, if it exists</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetProperty(System.String)">
            <summary>
            Gets the material property by its fully qualified name. The format is: {baseName},{texType},{texIndex}. E.g.
            "$clr.diffuse,0,0" or "$tex.file,1,0".
            </summary>
            <param name="fullyQualifiedName">Fully qualified name of the property</param>
            <returns>The material property, if it exists</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.HasNonTextureProperty(System.String)">
            <summary>
            Checks if the material has the specified non-texture property. The name should be
            the "base name", as in it should not contain texture type/texture index information. E.g. "$clr.diffuse" rather than "$clr.diffuse,0,0". The extra
            data will be filled in automatically.
            </summary>
            <param name="baseName">Key basename</param>
            <returns>True if the property exists, false otherwise.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.HasProperty(System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Checks if the material has the specified property. All the input parameters are combined into the fully qualified name: {baseName},{texType},{texIndex}. E.g.
            "$clr.diffuse,0,0" or "$tex.file,1,0".
            </summary>
            <param name="baseName">Key basename</param>
            <param name="texType">Texture type; non-texture properties should leave this <see cref="F:PoncheToolkit.AssimpTextureType.None"/></param>
            <param name="texIndex">Texture index; non-texture properties should leave this zero.</param>
            <returns>True if the property exists, false otherwise.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.HasProperty(System.String)">
            <summary>
            Checks if the material has the specified property by looking up its fully qualified name. The format is: {baseName},{texType},{texIndex}. E.g.
            "$clr.diffuse,0,0" or "$tex.file,1,0".
            </summary>
            <param name="fullyQualifiedName">Fully qualified name of the property</param>
            <returns>True if the property exists, false otherwise.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.AddProperty(PoncheToolkit.Graphics3D.MaterialProperty)">
            <summary>
            Adds a property to this material.
            </summary>
            <param name="matProp">Material property</param>
            <returns>True if the property was successfully added, false otherwise (e.g. null or key already present).</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.RemoveNonTextureProperty(System.String)">
            <summary>
            Removes a non-texture property from the material.
            </summary>
            <param name="baseName">Property name</param>
            <returns>True if the property was removed, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.RemoveProperty(System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Removes a property from the material.
            </summary>
            <param name="baseName">Name of the property</param>
            <param name="texType">Property texture type</param>
            <param name="texIndex">Property texture index</param>
            <returns>True if the property was removed, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.RemoveProperty(System.String)">
            <summary>
            Removes a property from the material.
            </summary>
            <param name="fullyQualifiedName">Fully qualified name of the property ({basename},{texType},{texIndex})</param>
            <returns>True if the property was removed, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.Clear">
            <summary>
            Removes all properties from the material;
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetAllProperties">
            <summary>
            Gets -all- properties contained in the Material.
            </summary>
            <returns>All properties in the material property map.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetMaterialTextureCount(PoncheToolkit.AssimpTextureType)">
            <summary>
            Gets all the number of textures that are of the specified texture type.
            </summary>
            <param name="texType">Texture type</param>
            <returns>Texture count</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.AddMaterialTexture(PoncheToolkit.Graphics3D.MaterialTexture@)">
            <summary>
            Adds a texture to the material - this bulk creates a property for each field. This will
            either create properties or overwrite existing properties. If the texture has no
            file path, nothing is added.
            </summary>
            <param name="texture">Texture to add</param>
            <returns>True if the texture properties were added or modified</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.AddMaterialTexture(PoncheToolkit.Graphics3D.MaterialTexture@,System.Boolean)">
            <summary>
            Adds a texture to the material - this bulk creates a property for each field. This will
            either create properties or overwrite existing properties. If the texture has no
            file path, nothing is added.
            </summary>
            <param name="texture">Texture to add</param>
            <param name="onlySetFilePath">True to only set the texture's file path, false otherwise</param>
            <returns>True if the texture properties were added or modified</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.RemoveMaterialTexture(PoncheToolkit.Graphics3D.MaterialTexture@)">
            <summary>
            Removes a texture from the material - this bulk removes a property for each field.
            If the texture has no file path, nothing is removed
            </summary>
            <param name="texture">Texture to remove</param>
            <returns>True if the texture was removed, false otherwise.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetMaterialTexture(PoncheToolkit.AssimpTextureType,System.Int32,PoncheToolkit.Graphics3D.MaterialTexture@)">
            <summary>
            Gets a texture that corresponds to the type/index.
            </summary>
            <param name="texType">Texture type</param>
            <param name="texIndex">Texture index</param>
            <param name="texture">Texture description</param>
            <returns>True if the texture was found in the material</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetMaterialTextures(PoncheToolkit.AssimpTextureType)">
            <summary>
            Gets all textures that correspond to the type.
            </summary>
            <param name="type">Texture type</param>
            <returns>The array of textures</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.GetAllMaterialTextures">
            <summary>
            Gets all textures in the material.
            </summary>
            <returns>The array of textures</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.AssimpMaterial.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.ICamera">
            <summary>
            Main class that represent a world-view-projection camera.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.View">
            <summary>
            The view matrix.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Projection">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.ViewProjection">
            <summary>
            The multiplied viewProjection matrix.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.FOV">
            <summary>
            The field of view of the camera. Generally its PI / 4.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.AspectRatio">
            <summary>
            The aspect ratio.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.NearPlane">
            <summary>
            The near plane to clip the projection.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.FarPlane">
            <summary>
            The far plane to clip the projection.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Position">
            <summary>
            Position of the camera.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.LookAt">
            <summary>
            The point where the camera is looking at.
            <para>
            Default: Vector3.Zero
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Rotation">
            <summary>
            Rotation of the camera.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Right">
            <summary>
            The calculated right vector.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Up">
            <summary>
            The calculated up vector.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Direction">
            <summary>
            The direction vector where the camera is pointing.
            Default: Vector3.ForwardLH
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Frustrum">
            <summary>
            The frustrum object to calculate the view frustrum.
            This frustrum must be updated typically at the end of the <see cref="!:UpdateLogic"/> method
            when the View Projection matrices has already been calculated.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ICamera.Type">
            <summary>
            The type of camera.
            <para>
            Default: <see cref="F:PoncheToolkit.CameraType.Main"/>.
            </para>
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera">
            <summary>
            Camera that represent a first person view.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.RenderTarget">
            <summary>
            The render target used to render the reflections.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ReflectionCamera.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.Camera">
            <summary>
            Main class that represent a world-view-projection camera.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Cameras.Camera.View">
            <summary>
            The view matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Cameras.Camera.Projection">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.Cameras.Camera.ViewProjection">
            <summary>
            The multiplied viewProjection matrix.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.FOV">
            <summary>
            The field of view of the camera. Generally its PI / 4.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.AspectRatio">
            <summary>
            The aspect ratio.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.NearPlane">
            <summary>
            The near plane to clip the projection.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.FarPlane">
            <summary>
            The far plane to clip the projection.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Position">
            <summary>
            Position of the camera.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.LookAt">
            <summary>
            The point where the camera is looking at.
            <para>
            Default: Vector3.Zero
            </para>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Rotation">
            <summary>
            Rotation of the camera.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Right">
            <summary>
            The calculated right vector.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Up">
            <summary>
            The calculated up vector.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Direction">
            <summary>
            The direction vector where the camera is pointing.
            Default: Vector3.ForwardLH
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Frustrum">
            <summary>
            The frustrum object to calculate the view frustrum.
            This frustrum must be updated typically at the end of the <see cref="M:PoncheToolkit.Graphics3D.Cameras.Camera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)"/> method
            when the View Projection matrices has already been calculated.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.Camera.Type">
            <summary>
            The type of camera.
            <para>
            Default: <see cref="F:PoncheToolkit.CameraType.Main"/>.
            </para>
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor. Set default values.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.CreateLookAt(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Create the LookAt vector.
            </summary>
            <param name="pos"></param>
            <param name="target"></param>
            <param name="up"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.CreateLookAt(SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Create the LookAt vector.
            </summary>
            <param name="pos"></param>
            <param name="target"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.GetMatrices(SharpDX.Matrix)">
            <summary>
            Update the wvp matrices and return a <see cref="T:PoncheToolkit.Graphics3D.Effects.MatricesStruct"/> to be sent to the GPU.
            This method transposes the matrices.
            </summary>
            <param name="world">The world matrix of the model.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.GetReflectionMatrix(System.Single)">
            <summary>
            Retrieve a reflection matrix from the current view.
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.Camera.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera">
            <summary>
            Camera that represent a first person view.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.FastMovement">
            <summary>
            To set the movment of the camera to a faster pace.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FirstPersonCamera.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.FreeCamera">
            <summary>
            Camera that represent a first person view.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.FreeCamera.FastMovement">
            <summary>
            To set the movment of the camera to a faster pace.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.FreeCamera.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.FreeCamera.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FreeCamera.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FreeCamera.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FreeCamera.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FreeCamera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.FreeCamera.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera">
            <summary>
            Camera that represent a first person view.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.Target">
            <summary>
            The target the camera will follow.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.UpdateInput(PoncheToolkit.Core.Management.Input.InputManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Cameras.ThirdPersonCamera.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.DeviceManager">
            <summary>
            Class that manages the devices to render correctly in DirectX11 and DirectX12.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.DeviceManager.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.GraphicsRenderer11">
            <summary>
            Class that wrap the functionality to render content.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer11.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer11.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.GraphicsRenderer11.OnEndRenderHandler">
            <summary>
            Handler used to call the OnEndRender event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer11.OnEndRender">
            <summary>
            Event fired inside the <see cref="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.EndRender(System.Int32)"/> method.
            This event can be used to retrieve the final image from the back buffer of from the
            post process render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SwapChain">
            <summary>
            The Swap Chain to render.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.Device">
            <summary>
            Instance of the device used.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.ImmediateContext">
            <summary>
            The <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> immediate context used to render the 3D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.Context2D">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> context used to render the 2D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.Rasterizer">
            <summary>
            The rasterizer with properties to how the polygons are drawn.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch">
            <summary>
            Get the <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.PostProcessEffects">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.Effect"/> effects to be applied to the back buffer before it is displayed.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.PostProcessRenderTarget">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.ProcessRenderMode">
            <summary>
            Get or set the rendering type.
            See <see cref="T:PoncheToolkit.ProcessRenderingMode"/> for more information. Set as dirty.
            Default: <see cref="F:PoncheToolkit.ProcessRenderingMode.Immediate"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.ShadingRenderMode">
            <summary>
            Get or set the rendering type.
            See <see cref="T:PoncheToolkit.ShadingRenderingMode"/> for more information. Set as dirty.
            Default: <see cref="F:PoncheToolkit.ShadingRenderingMode.ClusteredForwardShading"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.BitmapProperties2D">
            <summary>
            The BitmapProperties to initialize the 2D render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.Dpi">
            <summary>
            The dpi of the monitor.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.Game">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.BeginRender(PoncheToolkit.Graphics3D.PTRenderTarget2D,SharpDX.Direct3D11.DepthStencilView,System.Nullable{SharpDX.Color})">
            <summary>
            Begin the render. 
            Clear the target view and the depth stencil.
            </summary>
            <param name="renderTarget"></param>
            <param name="depthStencilView"></param>
            <param name="clearColor">The color to clear the context. Default: (130, 150, 175)</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.EndRender(System.Int32)">
            <summary>
            End render. Present the swap chain buffer.
            </summary>
            <param name="syncIntervalParameter"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.AddBackBufferPostProcessEffect(System.Int32,PoncheToolkit.Graphics2D.Effects.PTCustomEffect)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.SetRenderTarget2D(SharpDX.Direct2D1.Image)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.SetRenderTarget3D(PoncheToolkit.Graphics3D.PTRenderTarget2D)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderScreen(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,PoncheToolkit.Graphics2D.SpriteBatch,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh})">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderScreenToTexture(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics3D.PTRenderTarget2D@)">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
            <param name="screen">The <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen"/> to be rendered to a texture.</param>
            <param name="camera">The camera from which the render will take place.</param>
            <param name="spriteBatch">The <see cref="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch"/> instance.</param>
            <param name="renderTarget">The RenderTarget that contains the texture reference to which the rendering will take place.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderScreenToTexture(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics3D.PTRenderTarget2D@,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh})">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
            <param name="screen">The <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen"/> to be rendered to a texture.</param>
            <param name="camera">The camera from which the render will take place.</param>
            <param name="spriteBatch">The <see cref="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch"/> instance.</param>
            <param name="renderTarget">The RenderTarget that contains the texture reference to which the rendering will take place.</param>
            <param name="excludedMeshes">A list with the meshes that want to be excluded from the rendering.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderScreenToTexture(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics3D.PTRenderTarget2D@,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},System.Nullable{SharpDX.Color})">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
            <param name="screen">The <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen"/> to be rendered to a texture.</param>
            <param name="camera">The camera from which the render will take place.</param>
            <param name="spriteBatch">The <see cref="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch"/> instance.</param>
            <param name="renderTarget">The RenderTarget that contains the texture reference to which the rendering will take place.</param>
            <param name="excludedMeshes">A list with the meshes that want to be excluded from the rendering.</param>
            <param name="clearColor">The color to clear the context. Default: White</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderScreenParaboloidReflection(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,SharpDX.Vector3,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh})">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
            <param name="screen">The <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen"/> to be rendered to a texture.</param>
            <param name="paraboloidCamera">The camera from which the render will take place. This is typically the object of the material</param>
            <param name="spriteBatch">The <see cref="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch"/> instance.</param>
            <param name="renderTarget">The RenderTarget that contains the texture reference to which the rendering will take place.</param>
            <param name="excludedMeshes">A list with the meshes that want to be excluded from the rendering.</param>
            <param name="depthView">The depth stencil</param>
            <param name="clearColor">The color to clear the context. Default: White</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.RenderZPrePass(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics3D.Cameras.Camera,PoncheToolkit.Graphics2D.SpriteBatch,PoncheToolkit.Graphics3D.PTRenderTarget2D@,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},System.Nullable{SharpDX.Color})">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
            <param name="screen">The <see cref="T:PoncheToolkit.Core.Management.Screen.GameScreen"/> to be rendered to a texture.</param>
            <param name="camera">The camera from which the render will take place.</param>
            <param name="spriteBatch">The <see cref="P:PoncheToolkit.Graphics3D.GraphicsRenderer11.SpriteBatch"/> instance.</param>
            <param name="renderTarget">The RenderTarget that contains the texture reference to which the rendering will take place.</param>
            <param name="clearColor">The color to clear the context. Default: White</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.renderMultiThreadByEffect(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},PoncheToolkit.Graphics3D.Effects.PTEffect,PoncheToolkit.Graphics2D.SpriteBatch)">
            <summary>
            Method to render the specified meshes in different tasks.
            It calls the <see cref="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.renderMeshesByEffect(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},PoncheToolkit.Graphics3D.Effects.PTEffect,SharpDX.Direct3D11.DeviceContext1,PoncheToolkit.Graphics2D.SpriteBatch)"/> method
            to apply their materials and create the necessary <see cref="T:SharpDX.Direct3D11.CommandList"/>.
            </summary>
            <param name="threadIndex">The current used thread, this is used to pick the correct deferred context.</param>
            <param name="fromMesh">The index of the starting mesh to render.</param>
            <param name="toMesh">The index of the final mesh to render.</param>
            <param name="meshesToRender">The list containing all the meshes to render.</param>
            <param name="effect">The effect used to render the current meshes.</param>
            <param name="spriteBatch">The spriteBatch object.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.renderMeshesByEffect(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},PoncheToolkit.Graphics3D.Effects.PTEffect,SharpDX.Direct3D11.DeviceContext1,PoncheToolkit.Graphics2D.SpriteBatch)">
            <summary>
            Render the given meshes.
            When rendering using <see cref="F:PoncheToolkit.ProcessRenderingMode.Immediate"/> mode, the
            thread index does not matter.
            </summary>
            <param name="threadIndex"></param>
            <param name="fromMesh"></param>
            <param name="toMesh"></param>
            <param name="meshes"></param>
            <param name="effect"></param>
            <param name="context"></param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.renderMeshesInstancedByEffect(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PoncheToolkit.Graphics3D.PTMesh},PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect,SharpDX.Direct3D11.DeviceContext1,PoncheToolkit.Graphics2D.SpriteBatch)">
            <summary>
            Render the given meshes.
            When rendering using <see cref="F:PoncheToolkit.ProcessRenderingMode.Immediate"/> mode, the
            thread index does not matter.
            </summary>
            <param name="threadIndex"></param>
            <param name="fromMesh"></param>
            <param name="toMesh"></param>
            <param name="meshes"></param>
            <param name="effect"></param>
            <param name="context"></param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.PickContext(System.Int32)">
            <summary>
            Get the next context to render the content.
            This method will get the correct context no matter if the <see cref="!:GraphicsRenderer.ProcessRenderingMode"/> is set to Immediate or Deferred.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer11.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.GraphicsRenderer12">
            <summary>
            Class that wrap the functionality to render content.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.GraphicsRenderer12.Device">
            <summary>
            Instance of the device used.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer12.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer12.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.Context2D">
            <summary>
            The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> context used to render the 2D content.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.SpriteBatch">
            <summary>
            Get the <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.BitmapProperties">
            <summary>
            The BitmapProperties to initialize the 2D render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.Dpi">
            <summary>
            The dpi of the monitor.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.IsContentLoaded">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.Game">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.Rasterizer">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.PostProcessEffects">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.GraphicsRenderer12.PostProcessRenderTarget">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.GraphicsRenderer12.OnEndRenderHandler">
            <summary>
            Handler used to call the OnEndRender event.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.GraphicsRenderer12.OnEndRender">
            <summary>
            Event fired inside the <see cref="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.EndRender(System.Int32)"/> method.
            This event can be used to retrieve the final image from the back buffer of from the
            post process render target.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.#ctor(PoncheToolkit.Core.Game)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.BeginRender(System.Nullable{SharpDX.Color})">
            <summary>
            Begin the render. 
            Clear the target view and the depth stencil.
            </summary>
            <param name="clearColor"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.EndRender(System.Int32)">
            <summary>
            End render. Present the swap chain buffer.
            </summary>
            <param name="syncIntervalParameter"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.AddRenderable(PoncheToolkit.Graphics3D.PTModel)">
            <summary>
            Add a model to the list of renderable models.
            The models here will be added to a single vertex buffer with just one
            Draw call.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.RenderScreen(PoncheToolkit.Core.Management.Screen.GameScreen,PoncheToolkit.Graphics2D.SpriteBatch)">
            <summary>
            Render all the meshes from the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.MeshesPerEffect"/> dictionary.
            It groups the rendering by effect so the graphics pipeline does not have to switch
            between shaders so often and save some bandwidth power using the <see cref="P:PoncheToolkit.Core.Management.Screen.GameScreen.DrawableComponentsPerEffect"/> dictionary.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.SetRenderTarget2D(SharpDX.Direct2D1.Image)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.SetRenderTarget3D(PoncheToolkit.Graphics3D.PTRenderTarget2D)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.AddBackBufferPostProcessEffect(System.Int32,PoncheToolkit.Graphics2D.Effects.PTCustomEffect)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.GraphicsRenderer12.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTBone">
            <summary>
            Represents a single bone of a mesh. A bone has a name which allows it to be found in the frame
            hierarchy and by which it can be addressed by animations. In addition it has a number of
            influences on vertices.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTBone.Name">
            <summary>
            Gets or sets the name of the bone.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTBone.VertexWeights">
            <summary>
            Get the vertex weights owned by the bone.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTBone.OffsetMatrix">
            <summary>
            Get or set the matrix that transforms from mesh space to bone space in bind pose.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTBone.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTBone"/> class.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTBone.#ctor(System.String,SharpDX.Matrix,PoncheToolkit.Graphics3D.VertexWeight[])">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTBone"/> class.
            </summary>
            <param name="name">Name of the bone</param>
            <param name="offsetMatrix">Bone's offset matrix</param>
            <param name="weights">Vertex weights</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTBone.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTFace">
            <summary>
            A single face in a mesh.
            It can represent a triangle or polygon depending of how many vertex the face has.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTFace.IndexCount">
            <summary>
            Gets the number of indices defined in the face.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTFace.Indices">
            <summary>
            Gets or sets the indices that refer to positions of vertex data in the mesh's vertex 
            arrays.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTFace.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTFace.#ctor(System.Int32[])">
            <summary>
            Constructor.
            </summary>
            <param name="indices">Face indices</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTFace.#ctor(System.Collections.Generic.List{System.Int32})">
            <summary>
            Constructor.
            </summary>
            <param name="indices">Face indices</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTFace.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.MaterialProperty">
            <summary>
            A key-value pairing that represents some material property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.Name">
            <summary>
            Gets or sets the property key name. E.g. $tex.file. This corresponds to the
            "AiMatKeys" base name constants.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.PropertyType">
            <summary>
            Gets or sets the type of property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.ByteCount">
            <summary>
            Gets the raw byte data count.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.HasRawData">
            <summary>
            Checks if the property has data.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.RawData">
            <summary>
            Gets the raw byte data. To modify/read this data, see the Get/SetXXXValue methods.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.TextureType">
            <summary>
            Gets or sets the texture type semantic, for non-texture properties this is always <see cref="F:Assimp.TextureType.None"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.TextureIndex">
            <summary>
            Gets or sets the texture index, for non-texture properties this is always zero.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MaterialProperty.FullyQualifiedName">
            <summary>
            Gets the property's fully qualified name. Format: "{base name},{texture type semantic},{texture index}". E.g. "$clr.diffuse,0,0". This
            is the key that is used to index the property in the material property map.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Byte[])">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Constructs a buffer property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="buffer">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Single)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Constructs a float property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Int32)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Constructs an integer property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Constructs a boolean property.
            </summary>
            <param name="baseName">Name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a string property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a texture property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
            <param name="texType">Texture type</param>
            <param name="textureIndex">Texture index</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Single[])">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a float array property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="values">Property values</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,System.Int32[])">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a int array property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="values">Property values</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,SharpDX.Color3)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a Color3 property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.#ctor(System.String,SharpDX.Color)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MaterialProperty"/> class. Creates a Color property.
            </summary>
            <param name="baseName">Base name of the property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetFloatValue">
            <summary>
            Gets the property raw data as a float.
            </summary>
            <returns>Float</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetFloatValue(System.Single)">
            <summary>
            Sets the property raw data with a float.
            </summary>
            <param name="value">Float.</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetIntegerValue">
            <summary>
            Gets the property raw data as an integer.
            </summary>
            <returns>Integer</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetIntegerValue(System.Int32)">
            <summary>
            Sets the property raw data as an integer.
            </summary>
            <param name="value">Integer</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetStringValue">
            <summary>
            Gets the property raw data as a string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetStringValue(System.String)">
            <summary>
            Sets the property raw data as string.
            </summary>
            <param name="value">string</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetFloatArrayValue(System.Int32)">
            <summary>
            Gets the property raw data as a float array.
            </summary>
            <param name="count">Number of elements to get</param>
            <returns>Float array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetFloatArrayValue">
            <summary>
            Gets the property raw data as a float array.
            </summary>
            <returns>Float array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetFloatArrayValue(System.Single[])">
            <summary>
            Sets the property raw data as a float array.
            </summary>
            <param name="values">Values to set</param>
            <returns>True if successful, otherwise false</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetIntegerArrayValue(System.Int32)">
            <summary>
            Gets the property raw data as an integer array.
            </summary>
            <param name="count">Number of elements to get</param>
            <returns>Integer array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetIntegerArrayValue">
            <summary>
            Gets the property raw data as an integer array.
            </summary>
            <returns>Integer array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetIntegerArrayValue(System.Int32[])">
            <summary>
            Sets the property raw data as an integer array.
            </summary>
            <param name="values">Values to set</param>
            <returns>True if successful, otherwise false</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetBooleanValue">
            <summary>
            Gets the property raw data as a boolean.
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetBooleanValue(System.Boolean)">
            <summary>
            Sets the property raw data as a boolean.
            </summary>
            <param name="value">Boolean value</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetColor3DValue">
            <summary>
            Gets the property raw data as a Color3.
            </summary>
            <returns>Color3</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetColor3DValue(SharpDX.Color3)">
            <summary>
            Sets the property raw data as a Color3.
            </summary>
            <param name="value">Color3</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.GetColor4DValue">
            <summary>
            Gets the property raw data as a Color.
            </summary>
            <returns>Color</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.SetColor4DValue(SharpDX.Color)">
            <summary>
            Sets the property raw data as a Color.
            </summary>
            <param name="value">Color</param>
            <returns>True if successful, false otherwise</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialProperty.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.MaterialTexture">
            <summary>
            Describes all the values pertaining to a particular texture slot in a material.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.FilePath">
            <summary>
            Gets the texture file path.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.TextureType">
            <summary>
            Gets the texture type semantic.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.TextureIndex">
            <summary>
            Gets the texture index in the material.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.Mapping">
            <summary>
            Gets the texture mapping.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.UVIndex">
            <summary>
            Gets the UV channel index that corresponds to this texture from the mesh.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.BlendFactor">
            <summary>
            Gets the blend factor.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.Operation">
            <summary>
            Gets the texture operation.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.WrapModeU">
            <summary>
            Gets the texture wrap mode for the U coordinate.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.WrapModeV">
            <summary>
            Gets the texture wrap mode for the V coordinate.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.MaterialTexture.Flags">
            <summary>
            Gets misc flags.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MaterialTexture.#ctor(System.String,PoncheToolkit.AssimpTextureType,System.Int32,PoncheToolkit.AssimpTextureMapping,System.Int32,System.Single,PoncheToolkit.assimpTextureOperation,PoncheToolkit.AssimpTextureWrapMode,PoncheToolkit.AssimpTextureWrapMode,System.Int32)">
            <summary>
            Constructs a new TextureSlot.
            </summary>
            <param name="filePath">Texture filepath</param>
            <param name="typeSemantic">Texture type semantic</param>
            <param name="texIndex">Texture index in the material</param>
            <param name="mapping">Texture mapping</param>
            <param name="uvIndex">UV channel in mesh that corresponds to this texture</param>
            <param name="blendFactor">Blend factor</param>
            <param name="texOp">Texture operation</param>
            <param name="wrapModeU">Texture wrap mode for U coordinate</param>
            <param name="wrapModeV">Texture wrap mode for V coordinate</param>
            <param name="flags">Misc flags</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTGBuffer">
            <summary>
            Represent a G-Buffer generated by the engine for every frame. This for the purposes of creating
            custom shaders so they have the necessary information to make some post-processing.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTGBuffer.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTMesh">
            <summary>
            Class that represent a Mesh of a model.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.PTMesh.Vertices">
            <summary>
            Vertices that represent this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.VertexBuffer">
            <summary>
            The Vertex Buffer.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Model">
            <summary>
            Get or set the Model to which this mesh belongs.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.IndexBuffer">
            <summary>
            The Index Buffer.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.IndicesCount">
            <summary>
            Get the number of indices.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Name">
            <summary>
            Gets or sets the mesh name. This tends to be used
            when formats name nodes and meshes independently,
            vertex animations refer to meshes by their names,
            or importers split meshes up, each mesh will reference
            the same (dummy) name.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.PrimitiveType">
            <summary>
            Gets or sets the primitive type. This may contain more than one
            type unless if <see cref="F:Assimp.PostProcessSteps.SortByPrimitiveType"/>
            option is not set.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.MaterialIndex">
            <summary>
            Gets or sets the index of the material associated with this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.HasNormals">
            <summary>
            Gets if the mesh as normals. If it does exist, the count should be the same as the vertex count.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Normals">
            <summary>
            Gets the vertex normal list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.HasTangentBasis">
            <summary>
            Gets if the mesh has tangents and bitangents. It is not
            possible for one to be without the other. If it does exist, the count should be the same as the vertex count.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Tangents">
            <summary>
            Gets the vertex tangent list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.BiTangents">
            <summary>
            Gets the vertex bitangent list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.FaceCount">
            <summary>
            Gets the number of faces contained in the mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.HasFaces">
            <summary>
            Gets if the mesh contains faces. If no special
            scene flags are set, this should always return true.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Faces">
            <summary>
            Gets the mesh's faces. Each face will contain indices
            to the vertices.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.VertexColorChannelCount">
            <summary>
            Gets the number of valid vertex color channels contained in the
            mesh (list is not empty/not null). This can be a value between zero and the maximum vertex color count. Each individual channel
            should be the size of <see cref="F:PoncheToolkit.Graphics3D.PTMesh.Vertices"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.TextureCoordinateChannelCount">
            <summary>
            Gets the number of valid texture coordinate channels contained
            in the mesh (list is not empty/not null). This can be a value between zero and the maximum texture coordinate count.
            Each individual channel should be the size of <see cref="F:PoncheToolkit.Graphics3D.PTMesh.Vertices"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.VertexColorChannels">
            <summary>
            Gets the array that contains each vertex color channels, by default all are lists of zero (but can be set to null). Each index
            in the array corresponds to the texture coordinate channel. The length of the array corresponds to Assimp's maximum vertex color channel limit.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.TextureCoordinateChannels">
            <summary>
            Gets the array that contains each texture coordinate channel, by default all are lists of zero (but can be set to null). Each index
            in the array corresponds to the texture coordinate channel. The length of the array corresponds to Assimp's maximum UV channel limit.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.UVComponentCount">
            <summary>
            Gets the array that contains the count of UV(W) components for each texture coordinate channel, usually 2 (UV) or 3 (UVW). A component
            value of zero means the texture coordinate channel does not exist. The channel index (index in the array) corresponds
            to the texture coordinate channel index.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.BoneCount">
            <summary>
            Gets the number of bones that influence this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.HasBones">
            <summary>
            Gets if this mesh has bones.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.Bones">
            <summary>
            Gets the bones that influence this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.MeshAnimationAttachmentCount">
            <summary>
            Gets the number of mesh animation attachments that influence this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.HasMeshAnimationAttachments">
            <summary>
            Gets if this mesh has mesh animation attachments.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.MeshAnimationAttachments">
            <summary>
            Gets the mesh animation attachments that influence this mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.MaterialName">
            <summary>
            The material name to use for this Mesh.
            This name will work to retrieve the Material from the <see cref="T:PoncheToolkit.Graphics3D.Effects.PTEffect"/> Materials dictionary.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTMesh.InstanceIndex">
            <summary>
            Get or set the instance index for this mesh only if the mesh is set as Instanced. (reuse of vertices).
            If the value is -1 it means the mesh is not instanced and will be tretaed as a single object.
            Default: -1
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.PTMesh.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.PTMesh.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.#ctor(PoncheToolkit.Graphics3D.PTModel)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> class.
            </summary>
            <param name="model">The <see cref="P:PoncheToolkit.Graphics3D.PTMesh.Model"/> to which this mesh belongs.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.#ctor(PoncheToolkit.Graphics3D.PTModel,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> class.
            </summary>
            <param name="model">The <see cref="P:PoncheToolkit.Graphics3D.PTMesh.Model"/> to which this mesh belongs.</param>
            <param name="name">Name of the mesh.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.#ctor(PoncheToolkit.Graphics3D.PTModel,PoncheToolkit.AssimpPrimitiveType)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> class.
            </summary>
            <param name="model">The <see cref="P:PoncheToolkit.Graphics3D.PTMesh.Model"/> to which this mesh belongs.</param>
            <param name="primType">Primitive types contained in the mesh.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.#ctor(PoncheToolkit.Graphics3D.PTModel,System.String,PoncheToolkit.AssimpPrimitiveType)">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> class.
            </summary>
            <param name="model">The <see cref="P:PoncheToolkit.Graphics3D.PTMesh.Model"/> to which this mesh belongs.</param>
            <param name="name">Name of the mesh</param>
            <param name="primType">Primitive types contained in the mesh.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.AddVertex(PoncheToolkit.Graphics3D.VertexMainStruct)">
            <summary>
            Add a new vertex.
            </summary>
            <param name="vertex"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.UpdateMatrices(PoncheToolkit.Graphics3D.Cameras.Camera)">
            <summary>
            Get the properties of the model and create the World Matrix.
            </summary>
            <param name="camera"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.Apply(PoncheToolkit.Graphics3D.Effects.PTEffect,SharpDX.Direct3D11.DeviceContext1)">
            <summary>
            Apply its state to the GPU. Calculate the mesh matrices.
            </summary>
            <param name="effect">The effect used for this material.</param>
            <param name="context">Context to apply the rendering.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.SetMaterial(System.String)">
            <summary>
            Set the material to be used for the model.
            The material is applied to all the meshes of the model.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTMesh.OnFinishLoadContent"/> event.
            </summary>
            <param name="materialName">The name of the material to be applied.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.SetMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Set the material to be used for the model.
            The material is applied to all the meshes of the model.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTMesh.OnFinishLoadContent"/> event.
            </summary>
            <param name="material">The instance of the material to be applied.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.HasVertexColors(System.Int32)">
            <summary>
            Checks if the mesh has vertex colors for the specified channel. This returns false if the list
            is null or empty. The channel, if it exists, should contain the same number of entries as <see cref="F:PoncheToolkit.Graphics3D.PTMesh.Vertices"/>.
            </summary>
            <param name="channelIndex">Channel index</param>
            <returns>True if vertex colors are present in the channel.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.HasTextureCoords(System.Int32)">
            <summary>
            Checks if the mesh has texture coordinates for the specified channel. This returns false if the list
            is null or empty. The channel, if it exists, should contain the same number of entries as <see cref="F:PoncheToolkit.Graphics3D.PTMesh.Vertices"/>.
            </summary>
            <param name="channelIndex">Channel index</param>
            <returns>True if texture coordinates are present in the channel.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.SetIndices(System.Int32[],System.Int32)">
            <summary>
            Convienence method for setting this meshe's face list from an index buffer.
            </summary>
            <param name="indices">Index buffer</param>
            <param name="indicesPerFace">Indices per face</param>
            <returns>True if the operation succeeded, false otherwise (e.g. not enough data)</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.SetIndices(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Convienence method for setting this meshe's face list from an index buffer.
            </summary>
            <param name="indices">Index buffer</param>
            <param name="indicesPerFace">Indices per face</param>
            <returns>True if the operation succeeded, false otherwise (e.g. not enough data)</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.GetIndices">
            <summary>
            Convienence method for accumulating all face indices into a single
            index array.
            </summary>
            <returns>int index array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.GetUnsignedIndices">
            <summary>
            Convienence method for accumulating all face indices into a single index
            array as unsigned integers (the default from Assimp, if you need them).
            </summary>
            <returns>uint index array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.GetShortIndices">
            <summary>
            Convienence method for accumulating all face indices into a single
            index array.
            </summary>
            <returns>short index array</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTMesh.Clone">
            <summary>
            Clone object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.MeshAnimationAttachment">
            <summary>
            A mesh attachment store per-vertex animations for a particular frame. You may
            think of this as a 'patch' for the host mesh, since the mesh attachment replaces only certain
            vertex data streams at a particular time. Each mesh stores 'n' attached meshes. The actual
            relationship between the time line and mesh attachments is established by the mesh animation channel,
            which references singular mesh attachments by their ID and binds them to a time offset.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.VertexCount">
            <summary>
            Gets the number of vertices in this mesh. This is a replacement
            for the host mesh's vertex count. Likewise, a mesh attachment
            cannot add or remove per-vertex attributes, therefore the existance
            of vertex data will match the existance of data in the mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.HasVertices">
            <summary>
            Checks whether the attachment mesh overrides the vertex positions
            of its host mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.Vertices">
            <summary>
            Gets the vertex position list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.HasNormals">
            <summary>
            Checks whether the attachment mesh overrides the vertex normals of
            its host mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.Normals">
            <summary>
            Gets the vertex normal list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.HasTangentBasis">
            <summary>
            Checks whether the attachment mesh overrides the vertex
            tangents and bitangents of its host mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.Tangents">
            <summary>
            Get the vertex tangent list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.BiTangents">
            <summary>
            Gets the vertex bitangent list.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.VertexColorChannelCount">
            <summary>
            Gets the number of valid vertex color channels contained in the
            mesh (list is not empty/not null). This can be a value between zero and the maximum vertex color count. Each individual channel
            should be the size of <see cref="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.VertexCount"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.TextureCoordinateChannelCount">
            <summary>
            Gets the number of valid texture coordinate channels contained
            in the mesh (list is not empty/not null). This can be a value between zero and the maximum texture coordinate count.
            Each individual channel should be the size of <see cref="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.VertexCount"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.VertexColorChannels">
            <summary>
            Gets the array that contains each vertex color channels that override a specific channel in the host mesh, by default all are lists of zero (but can be set to null). 
            Each index in the array corresponds to the texture coordinate channel. The length of the array corresponds to Assimp's maximum vertex color channel limit.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.MeshAnimationAttachment.TextureCoordinateChannels">
            <summary>
            Gets the array that contains each texture coordinate channel that override a specific channel in the host mesh, by default all are lists of zero (but can be set to null).
            Each index in the array corresponds to the texture coordinate channel. The length of the array corresponds to Assimp's maximum UV channel limit.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MeshAnimationAttachment.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:PoncheToolkit.Graphics3D.MeshAnimationAttachment"/> class.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MeshAnimationAttachment.HasVertexColors(System.Int32)">
            <summary>
            Checks if the mesh attachment overrides a particular set of vertex colors on
            the host mesh. This returns false if the list is null or empty. The index is between 
            zero and the maximumb number of vertex color channels.
            </summary>
            <param name="channelIndex">Channel index</param>
            <returns>True if vertex colors are present in the channel.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MeshAnimationAttachment.HasTextureCoords(System.Int32)">
            <summary>
            Checks if the mesh attachment overrides a particular set of texture coordinates on
            the host mesh. This returns false if the list is null or empty. The index is 
            between zero and the maximum number of texture coordinate channels.
            </summary>
            <param name="channelIndex">Channel index</param>
            <returns>True if texture coordinates are present in the channel.</returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.MeshAnimationAttachment.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.VertexWeight">
            <summary>
            Represents a single influence of a bone on a vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexWeight.VertexID">
            <summary>
            Index of the vertex which is influenced by the bone.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexWeight.Weight">
            <summary>
            Strength of the influence in range of (0...1). All influences
            from all bones at one vertex amounts to 1.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexWeight.#ctor(System.Int32,System.Single)">
            <summary>
            Constructs a new VertexWeight.
            </summary>
            <param name="vertID">Index of the vertex.</param>
            <param name="weight">Weight of the influence.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexWeight.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexWeight.op_Implicit(Assimp.VertexWeight)~PoncheToolkit.Graphics3D.VertexWeight">
            <summary>
            Implicitly convert a <see cref="T:Assimp.VertexWeight"/> object to local <see cref="T:PoncheToolkit.Graphics3D.VertexWeight"/>
            </summary>
            <param name="weight"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTRenderTarget2D">
            <summary>
            Simplified Render target to be used to render any scene to a <see cref="T:SharpDX.Direct3D11.Texture2D"/>
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRenderTarget2D.Name">
            <summary>
            Simple name to identif the render target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRenderTarget2D.Bitmap">
            <summary>
            The bitmap reference of the rendered content.
            This can be used to be rendered as 2D using the <see cref="T:PoncheToolkit.Graphics2D.SpriteBatch"/> object.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRenderTarget2D.Texture">
            <summary>
            The <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/> texture to be used as target.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRenderTarget2D.RenderTargetView">
            <summary>
            The <see cref="T:SharpDX.Direct3D11.RenderTargetView"/> where the rendering takes place.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRenderTarget2D.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.PTRenderTarget2D.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRenderTarget2D.#ctor(PoncheToolkit.Core.IGraphicsRenderer,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="renderer">The <see cref="!:GraphicsRenderer"/> renderer used. </param>
            <param name="name">The <see cref="!:GraphicsRenderer"/> Name to identify the render target.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRenderTarget2D.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRenderTarget2D.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRenderTarget2D.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRenderTarget2D.op_Implicit(PoncheToolkit.Graphics3D.PTRenderTarget2D)~SharpDX.Direct2D1.Bitmap1">
            <summary>
            Implicit operator that returns the <see cref="T:SharpDX.Direct2D1.Bitmap1"/> property from the render target.
            </summary>
            <param name="renderTarget"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTTexturePath">
            <summary>
            Class that represent a texture path.
            This path will be managed from the <see cref="T:PoncheToolkit.Core.Game"/> class
            when its UpdateState method is called.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTTexturePath.Path">
            <summary>
            Path of the texture to load.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTTexturePath.GenerateMipMaps">
            <summary>
            If the texture this path represents will generate mip maps.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTTexturePath.Type">
            <summary>
            Type of texture this path represents.
            Default: <see cref="F:PoncheToolkit.Graphics2D.PTTexture2D.TextureType.Render"/>
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTTexturePath.#ctor(System.String,PoncheToolkit.Graphics2D.PTTexture2D.TextureType,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="path">The path of the texture</param>
            <param name="type">The type of texture.</param>
            <param name="generateMipMaps">If the texture this path represents will generate mip maps.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTTexturePath.#ctor(System.String,PoncheToolkit.Graphics2D.PTTexture2D.TextureType)">
            <summary>
            Constructor.
            </summary>
            <param name="path">The path of the texture</param>
            <param name="type">The type of texture.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTTexturePath.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="path">The path of the texture</param>
            <param name="generateMipMaps">If the texture this path represents will generate mip maps.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTTexturePath.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="path">The path of the texture</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTTexturePath.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.VertexMainStruct">
            <summary>
            Structure that holds values for position(Vector3), Color(Vector4) and TexCoord(Vector2).
            Note: Changing the order of how the properties are declared, change the final result.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.Position">
            <summary>
            The Position of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.Color">
            <summary>
            The Color of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.TexCoord">
            <summary>
            The Texture of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.Normal">
            <summary>
            The Normal for the lighting of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.Tangent">
            <summary>
            The Tangent of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexMainStruct.BiNormal">
            <summary>
            The Binormal of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector4,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="color">The color for the vertex.</param>
            <param name="normal">The normal to calculate lighting.</param>
            <param name="tangent">The tangent for the vertex.</param>
            <param name="binormal">The binormal for the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector4,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="color">The color for the vertex.</param>
            <param name="normal">The normal to calculate lighting.</param>
            <param name="tangent">The tangent for the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector4,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="color">The color for the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
            <param name="normal">The normal to calculate lighting.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="normal">The normal to calculate lighting.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="normal">The normal to calculate lighting.</param>
            <param name="tangent">The tangent for the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.#ctor(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex in Vector3 format, the z component is discarded.</param>
            <param name="normal">The normal to calculate lighting.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.op_Implicit(PoncheToolkit.Graphics3D.VertexPositionColorStruct)~PoncheToolkit.Graphics3D.VertexMainStruct">
            <summary>
            Convert a VertexPositionColorStruct to VertexPositionColorTextureStruct with a TexCoord value of zero.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexMainStruct.op_Implicit(PoncheToolkit.Graphics3D.VertexPositionTextureStruct)~PoncheToolkit.Graphics3D.VertexMainStruct">
            <summary>
            Convert a VertexPositionTextureStruct to VertexPositionColorTextureStruct with a Color value of one.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.VertexPositionColorStruct">
            <summary>
            Struct with only a position and color.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexPositionColorStruct.Position">
            <summary>
            The Position of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexPositionColorStruct.Color">
            <summary>
            The Color of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexPositionColorStruct.#ctor(SharpDX.Vector3,SharpDX.Vector4)">
            <summary>
            Constructor.
            </summary>
            <param name="position"></param>
            <param name="color"></param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.VertexPositionTextureStruct">
            <summary>
            Struct that represent a position (Vector3) and a TexCoord (Vector2) that will
            be passed to the shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexPositionTextureStruct.Position">
            <summary>
            The Position of the Vertex.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Graphics3D.VertexPositionTextureStruct.TexCoord">
            <summary>
            The Texture coordinates of the Vertex.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.VertexPositionTextureStruct.#ctor(SharpDX.Vector3,SharpDX.Vector2)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the vertex.</param>
            <param name="texCoord">The texture coordinates of the vertex.</param>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTModel">
            <summary>
            Base Model class that has properties to draw the vertices of an imported model
            or create a model from primitives.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Size">
            <summary>
            The size of the object. Vector3.One is the original size.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Position">
            <summary>
            The Position in 3D space.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Rotation">
            <summary>
            The Rotation in 3D space.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Up">
            <summary>
            The Up Vector.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.HasMeshes">
            <summary>
            Get if the model has any meshes.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.AcceptInput">
            <summary>
            Value to tell if this model react to user input or no.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.HasCalculatedTangentBinormals">
            <summary>
            Value that indicates if the tangent and binormals has been calculated.
            This is set to true when importing a model that was made with a 3D modelling program.
            If the model is a primitive or something else, it is calculated once when the <see cref="M:PoncheToolkit.Graphics3D.PTModel.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)"/>
            method is called.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.ImportedMaterials">
            <summary>
            The materials that comes from assimp when importing a model.
            This materials will be passed to the <see cref="T:SharpDX.Direct3D11.Effect"/>.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Path">
            <summary>
            The path where the model was loaded.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.IndicesPerMesh">
            <summary>
            Dictionary containing the indices per mesh.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.Meshes">
            <summary>
            List with the meshes of the model.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.BoundingBox">
            <summary>
            Get or set the bounding box surrounding this model.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.World">
            <summary>
            Get or set the World matrix.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTModel.UVRepeatFactor">
            <summary>
            Get or set the factor for the texture uv repeat coordinates.
            Default: 1. (The texture is mapped to the 100% of the model).
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.PTModel.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(System.String)">
            <summary>
            Set the material to be used for the model.
            The material is applied to all the meshes of the model.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="materialName">The name of the material to be applied.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial)">
            <summary>
            Set the material to be used for the model.
            The material is applied to all the meshes of the model.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="material">The instance of the material to be applied.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(System.String,PoncheToolkit.Graphics3D.PTMesh)">
            <summary>
            Set the material to be used for the model.
            If a mesh is not sent, the material will be applied to all the meshes.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="materialName">The name of the material to be applied.</param>
            <param name="mesh">The optional mesh to which the material will be set. If this is set to null, the material applies to all the meshes in the model.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(PoncheToolkit.Graphics3D.Effects.PTMaterial,PoncheToolkit.Graphics3D.PTMesh)">
            <summary>
            Set the material to be used for the model.
            If a mesh is not sent, the material will be applied to all the meshes.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="material">The instance of the material to be applied.</param>
            <param name="mesh">The optional mesh to which the material will be set. If this is set to null, the material applies to all the meshes in the model.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(System.String,System.Int32)">
            <summary>
            Set the material to be used for the model.
            If a mesh is not sent, the material will be applied to all the meshes.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="materialName">The name of the material to be applied.</param>
            <param name="meshIndex">The optional index of the mesh to which the material will be set.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetMaterial(Assimp.Material,System.Int32)">
            <summary>
            Set the material to be used for the model.
            If a mesh is not sent, the material will be applied to all the meshes.
            This method must be called when the <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> has already finished loading so it has its meshes assigned.
            This can be typically be called in the <see cref="E:PoncheToolkit.Graphics3D.PTModel.OnFinishLoadContent"/> event.
            </summary>
            <param name="material">The instance of the material to be applied.</param>
            <param name="meshIndex">The optional index of the mesh to which the material will be set.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.SetEffect(PoncheToolkit.Graphics3D.Effects.PTForwardRenderEffect,System.Int32)">
            <summary>
            Set the effect and applies it for any <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> objects.
            </summary>
            <param name="effect"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <summary>
            The Model base LoadContent method load the default basic shaders to draw with color, texture, etc.
            Also creates the Buffers to be sent to the shader.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.CalculateRenderingVectors">
            <summary>
            Calculate the Tangent, Binormal and Normal vectors by triangle (polygon).
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.CalculateTangentBinormal(PoncheToolkit.Graphics3D.VertexMainStruct,PoncheToolkit.Graphics3D.VertexMainStruct,PoncheToolkit.Graphics3D.VertexMainStruct,SharpDX.Vector3@,SharpDX.Vector3@)">
            <summary>
            Calculate the Tangent and Binormal for 3 vertices (triangle).
            </summary>
            <param name="vertex1"></param>
            <param name="vertex2"></param>
            <param name="vertex3"></param>
            <param name="tangent"></param>
            <param name="binormal"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.CalculateNormal(SharpDX.Vector3,SharpDX.Vector3,SharpDX.Vector3@)">
            <summary>
            Calculate the Normal from the Tangent and Binormal.
            </summary>
            <param name="tangent"></param>
            <param name="binormal"></param>
            <param name="normal"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.UnloadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <summary>
            By default updates the Bounding Box with a general calculation algorithm.
            Override the <see cref="M:PoncheToolkit.Graphics3D.PTModel.UpdateBoundingBox"/> method for more specific calculations.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.UpdateBoundingBox">
            <summary>
            Update the model's BoundingBox taken from its position and size.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <summary>
            The base Model Render method by default send the transposed World-View-Projection matrices
            using the <see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> method.
            The matrices multiplication must be made inside the shader.
            <para>It call last the <see cref="M:SharpDX.Direct3D11.DeviceContext.Draw(System.Int32,System.Int32)"/> method.</para>
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.AddMesh(PoncheToolkit.Graphics3D.PTMesh)">
            <summary>
            Add a new <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> to the model.
            </summary>
            <param name="mesh">The mesh to be added.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.GetIndices">
            <summary>
            Get the vertices of all the meshes in the model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.GetAllVertices">
            <summary>
            Get the vertices of all the meshes in the model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.FromAssimpScene(Assimp.Scene@,PoncheToolkit.Graphics3D.PTModel@,System.String)">
            <summary>
            Convert a <see cref="T:Assimp.Scene"/> object to local <see cref="T:PoncheToolkit.Graphics3D.PTModel"/>
            TODO: It supports FOR NOW only one UV texture channel.
            </summary>
            <param name="scene">The object of the assimp scene.</param>
            <param name="model">The <see cref="T:PoncheToolkit.Graphics3D.PTModel"/> object passed as reference.</param>
            <param name="modelPath">The path where the model has been loaded.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTModel.Clone">
            <summary>
            Just return the result of the <see cref="M:System.Object.MemberwiseClone"/> method.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.ModelPiece">
            <summary>
            Represent a part of a model, like a face, a mesh, etc.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.ModelPiece.Model">
            <summary>
            The model to which this piece belongs to.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Primitives.Cube">
            <summary>
            Draw a simple triangle.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Primitives.Cube.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Primitives.Cube.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Cube.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Cube.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Cube.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Cube.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Cube.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Primitives.Primitive">
            <summary>
            Abstract class that represent a generic primitive.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Primitive.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Primitive.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Primitive.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <summary>
            Update the Vertex and Pixel stages.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Primitive.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Primitive.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Primitives.Sphere">
            <summary>
            Create a simple sphere given the initial values of Radius.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Primitives.Sphere.Radius">
            <summary>
            The radius of the sphere.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Primitives.Sphere.HorizontalSlices">
            <summary>
            The horizontal quality.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.Primitives.Sphere.VerticalSlices">
            <summary>
            The vertical quality.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Sphere.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Sphere.#ctor(PoncheToolkit.Core.Game11,System.Single,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="game">The game instance.</param>
            <param name="radius">The radius of the sphere. Default: 0.5</param>
            <param name="horizontalSlices">The number of horizontal slices. Default: 10</param>
            <param name="verticalSlices">The number of vertical slices. Default: 10</param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Sphere.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Sphere.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Primitives.Square">
            <summary>
            Draw a simple triangle.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.UpdateLogic(PoncheToolkit.Core.Services.GameTime)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.UpdateBoundingBox">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Square.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.Primitives.Triangle">
            <summary>
            Draw a simple triangle.
            </summary>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Primitives.Triangle.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Graphics3D.Primitives.Triangle.OnFinishLoadContent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Triangle.#ctor(PoncheToolkit.Core.Game11)">
            <summary>
            Constructor.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Triangle.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Triangle.LoadContent(PoncheToolkit.Core.Management.Content.IContentManager)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Triangle.Render(PoncheToolkit.Graphics2D.SpriteBatch,SharpDX.Direct3D11.DeviceContext)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.Primitives.Triangle.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.PTRasterizer">
            <summary>
            Class that wrap the rasterizing properties.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.IsAntialiasedLineEnabled">
            <summary>
            Default: false
            Only works if <see cref="P:PoncheToolkit.Graphics3D.PTRasterizer.IsMultisampleEnabled"/> is set to false.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.CullMode">
            <summary>
            Default: Back
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.DepthBias">
            <summary>
            Default: 0
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.DepthBiasClamp">
            <summary>
            Default: 0.0
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.IsDepthClipEnabled">
            <summary>
            Default: true
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.FillMode">
            <summary>
            Default: Solid
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.IsFrontCounterClockwise">
            <summary>
            Default: false
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.IsMultisampleEnabled">
            <summary>
            <para>Default: false</para>
            Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm
            on multisample antialiasing (MSAA) render targets. Set to TRUE to use the quadrilateral
            line anti-aliasing algorithm and to SharpDX.Result.False to use the alpha line
            anti-aliasing algorithm. For more info about this member, see Remarks.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.IsScissorEnabled">
            <summary>
            <para>Default: false</para>
            Enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.SlopeScaledDepthBias">
            <summary>
            Default: 0.0
            </summary>
        </member>
        <member name="P:PoncheToolkit.Graphics3D.PTRasterizer.RasterizerState">
            <summary>
            Get the rasterizer state.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRasterizer.#ctor(PoncheToolkit.Graphics3D.GraphicsRenderer11)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRasterizer.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.PTRasterizer.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Graphics3D.RayProjection">
            <summary>
            Class that implements mouse ray picking.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Graphics3D.RayProjection.UpdateState">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Resources.ExceptionTexts">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.AddElement_AddedTwice">
            <summary>
              Looks up a localized string similar to The element has already been added..
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.ComponentAdd_NotInitialized">
            <summary>
              Looks up a localized string similar to The component does not have initialized its properties.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.LoadContent_MeshesEmpty">
            <summary>
              Looks up a localized string similar to This model does not have any meshes to render..
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.LoadContent_VerticesEmpty">
            <summary>
              Looks up a localized string similar to There are no vertices to create the buffer..
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.LoadContent_VerticesForMeshEmpty">
            <summary>
              Looks up a localized string similar to There are meshes but they have no vertices assigned..
            </summary>
        </member>
        <member name="P:PoncheToolkit.Resources.ExceptionTexts.SerializationInformationMessage">
            <summary>
              Looks up a localized string similar to This exception can be avoided if the PTSerializer object is initialized with the silentErrors parameter set to true. Although the property will not be serialized..
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers">
            <summary>
            Util class that contain EventHandlers to set into interfaces.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers.OnInitializedHandler">
            <summary>
            Handler to create custom Initialized event.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers.OnLoadContentHandler">
            <summary>
            Handler to create custom Initialized event.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers.OnNewEffectAddedHandler">
            <summary>
            Handler to create custom OnNewEffectAdded event.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers.OnFinishLoadContentHandler">
            <summary>
            Event raised when finished loading content.
            It is recommended to add any other functionality for loading content using this event,
            to ensure that the any previous loading has completed.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.EventHandlers.OnFinishLoadRenderableComponentsHandler">
            <summary>
            Event that must be raised last when implementing the <see cref="M:PoncheToolkit.Core.Management.Screen.GameScreen.AddRenderableComponentWithEffect``2(``0@,``1,System.String)"/>
            method.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.ComponentNotInitializedException">
            <summary>
            Exception thrown when a device failed to initialize.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ComponentNotInitializedException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ComponentNotInitializedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.CustomSerializationException">
            <summary>
            Exception thrown when a specific content coult not be loaded into memory.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.CustomSerializationException.#ctor(System.String,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="formatValues"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.CustomSerializationException.#ctor(System.String,System.Exception,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="formatValues"></param>
        </member>
        <member name="P:PoncheToolkit.Util.Exceptions.CustomSerializationException.Message">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.RenderingException">
            <summary>
            Exception thrown when a device failed to initialize.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.RenderingException.#ctor(System.String,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="formatValues"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.RenderingException.#ctor(System.String,System.Exception,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="formatValues"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.PoncheException">
            <summary>
            The base custom exception.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.PoncheException.#ctor(System.String,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="formatValues"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.PoncheException.#ctor(System.String,System.Exception,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="formatValues"></param>
        </member>
        <member name="P:PoncheToolkit.Util.Exceptions.PoncheException.Log">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.LoadContentException">
            <summary>
            Exception thrown when a specific content coult not be loaded into memory.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.LoadContentException.#ctor(System.String,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="formatValues"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.LoadContentException.#ctor(System.String,System.Exception,System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="formatValues"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException">
            <summary>
            Exception thrown when a resource as failed to compile.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException.#ctor(System.String)">
            <summary>
            Constuctor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ResourceNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.ResourceCompilationException">
            <summary>
            Exception thrown when a resource as failed to compile.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ResourceCompilationException.#ctor(System.String)">
            <summary>
            Constuctor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.ResourceCompilationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.DeviceCreationException">
            <summary>
            Exception thrown when a device failed to initialize.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DeviceCreationException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DeviceCreationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.DuplicateComponentException">
            <summary>
            Exception thrown when a name component that already exists is added.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DuplicateComponentException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DuplicateComponentException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Exceptions.DuplicateServiceException">
            <summary>
            Exception thrown when a service of a type that already exists is added.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DuplicateServiceException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Exceptions.DuplicateServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Extensions">
            <summary>
             Class that contain all the extensions for the project.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.Vector3D)">
            <summary>
            Convert an <see cref="T:Assimp.Vector3D"/> object to <see cref="T:SharpDX.Vector3"/>.
            </summary>
            <param name="vec">The vector.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.Vector3D})">
            <summary>
            Convert a list of <see cref="T:Assimp.Vector3D"/> objects to <see cref="T:SharpDX.Vector3"/>.
            </summary>
            <param name="vectors">The list of vectors.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.Matrix4x4)">
            <summary>
            Convert an <see cref="T:Assimp.Matrix4x4"/> object to <see cref="T:SharpDX.Matrix"/>.
            </summary>
            <param name="matrix">The vector to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.Matrix4x4})">
            <summary>
            Convert a list of <see cref="T:Assimp.Matrix4x4"/> objects to <see cref="T:SharpDX.Matrix"/>.
            </summary>
            <param name="matrices">The list of <see cref="T:Assimp.Matrix4x4"/> matrices.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocalColor(Assimp.Color4D)">
            <summary>
            Convert an <see cref="T:Assimp.Vector3D"/> object to <see cref="T:SharpDX.Color"/>.
            </summary>
            <param name="color">The Color to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocalColor(System.Collections.Generic.List{Assimp.Color4D})">
            <summary>
            Convert an <see cref="T:Assimp.Vector3D"/> object to <see cref="T:SharpDX.Color"/>.
            </summary>
            <param name="colors">The Color to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocalVector(Assimp.Color4D)">
            <summary>
            Convert an <see cref="T:Assimp.Vector3D"/> object to <see cref="T:SharpDX.Color"/>.
            </summary>
            <param name="color">The Color to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocalVector(System.Collections.Generic.List{Assimp.Color4D})">
            <summary>
            Convert a list of <see cref="T:Assimp.Color4D"/> objects to <see cref="T:SharpDX.Color"/>.
            </summary>
            <param name="colors">The list of vectors.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.Bone)">
            <summary>
            Convert an <see cref="T:Assimp.Bone"/> object to <see cref="T:PoncheToolkit.Graphics3D.PTBone"/>.
            </summary>
            <param name="bone">The bone.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.Bone})">
            <summary>
            Convert a list of <see cref="T:Assimp.Bone"/> objects to <see cref="T:PoncheToolkit.Graphics3D.PTBone"/>.
            </summary>
            <param name="bones">The list of bones.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ReadMesh(Assimp.Mesh,PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert an <see cref="T:Assimp.Mesh"/> object to <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/>.
            </summary>
            <param name="assimpMesh">The MeshAnimationAttachment.</param>
            <param name="model">The model to which the mesh is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ReadMeshes(System.Collections.Generic.List{Assimp.Mesh},PoncheToolkit.Graphics3D.PTModel@,Assimp.Scene@)">
            <summary>
            Convert a list of <see cref="T:Assimp.Mesh"/> objects to <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/>.
            It adds all the read <see cref="T:PoncheToolkit.Graphics3D.PTMesh"/> meshes to the <see cref="P:PoncheToolkit.Graphics3D.PTModel.Meshes"/> List.
            </summary>
            <param name="assimpMeshes">The list of meshAnimations.</param>
            <param name="model">The model to which the meshes are part of.</param>
            <param name="scene">The assimp scene.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.Face,PoncheToolkit.Graphics3D.PTMesh@)">
            <summary>
            Convert an <see cref="T:Assimp.Face"/> object to <see cref="T:PoncheToolkit.Graphics3D.PTFace"/>.
            </summary>
            <param name="face">The face.</param>
            /// <param name="mesh">The mesh that this face is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.Face},PoncheToolkit.Graphics3D.PTMesh@)">
            <summary>
            Convert a list of <see cref="T:Assimp.Vector3D"/> objects to <see cref="T:PoncheToolkit.Graphics3D.PTFace"/>.
            </summary>
            <param name="faces">The list of faces.</param>
            <param name="mesh">The mesh that this face is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.TextureSlot,PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert an <see cref="T:Assimp.TextureSlot"/> object to <see cref="T:PoncheToolkit.Graphics3D.MaterialTexture"/>.
            </summary>
            <param name="textureSlot">The textureSlot.</param>
            /// <param name="model">The model that this face is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.TextureSlot},PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert a list of <see cref="T:Assimp.TextureSlot"/> objects to <see cref="T:PoncheToolkit.Graphics3D.MaterialTexture"/>.
            </summary>
            <param name="textureSlots">The list of textureSlots.</param>
            <param name="model">The model that this textureSlot is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.Material,PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert an <see cref="T:Assimp.Material"/> object to <see cref="T:PoncheToolkit.Graphics3D.AssimpMaterial"/>.
            </summary>
            <param name="material">The face.</param>
            <param name="model">The model that this Material is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ReadMaterials(System.Collections.Generic.List{Assimp.Material},PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert a list of <see cref="T:Assimp.Material"/> objects to <see cref="T:PoncheToolkit.Graphics3D.AssimpMaterial"/>.
            Add the textures paths as dirty properties from the model loaded, so the engine later update its status.
            </summary>
            <param name="materials">The list of faces.</param>
            <param name="mesh">The mesh containing this material.</param>
            <param name="model">The model that this Material is part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.EmbeddedTexture)">
            <summary>
            Convert an <see cref="T:Assimp.EmbeddedTexture"/> object to <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/>.
            </summary>
            <param name="texture">The Texture to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.EmbeddedTexture},PoncheToolkit.Graphics3D.PTModel@)">
            <summary>
            Convert a list of <see cref="T:Assimp.EmbeddedTexture"/> objects to <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/>.
            </summary>
            <param name="textures">The list of textures.</param>
            <param name="model">The model that the textures are part of.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.MeshAnimationAttachment)">
            <summary>
            Convert an <see cref="T:Assimp.MeshAnimationAttachment"/> object to <see cref="T:PoncheToolkit.Graphics3D.MeshAnimationAttachment"/>.
            </summary>
            <param name="mesh">The MeshAnimationAttachment.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.MeshAnimationAttachment})">
            <summary>
            Convert a list of <see cref="T:Assimp.MeshAnimationAttachment"/> objects to <see cref="T:PoncheToolkit.Graphics3D.MeshAnimationAttachment"/>.
            </summary>
            <param name="meshAnimations">The list of meshAnimations.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(Assimp.VertexWeight)">
            <summary>
            Convert an <see cref="T:Assimp.VertexWeight"/> object to <see cref="T:PoncheToolkit.Graphics3D.VertexWeight"/>.
            </summary>
            <param name="weight">The <see cref="T:Assimp.VertexWeight"/> to convert.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Extensions.ConvertToLocal(System.Collections.Generic.List{Assimp.VertexWeight})">
            <summary>
            Convert a list of <see cref="T:Assimp.VertexWeight"/> objects to <see cref="T:PoncheToolkit.Graphics3D.VertexWeight"/>.
            </summary>
            <param name="weights">The list of <see cref="T:Assimp.VertexWeight"/> weights.</param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Util.ILoggable">
            <summary>
            Interface that contains an instance of the Logger.
            It can be instantiated at any point.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.ILoggable.Log">
            <summary>
            The custom logger.
            Get the configuration from the NLog.config file.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.Logger">
            <summary>
            Log the events taking configuration from NLog.config file
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Logger.IsInitialized">
            <summary>
            Get or set if the object has been initialized.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="currentClass"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Debug(System.String)">
            <summary>
            Log any text only if the compiler is set to Debug.
            </summary>
            <param name="text">Text to be logged.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Debug(System.String,System.Object[])">
            <summary>
            Log any text with the given values to replace the format strings only if the compiler is set to Debug.
            </summary>
            <param name="text">Text to be logged.</param>
            <param name="values">Values to be set in runtime for string.format text.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Info(System.String)">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Info.
            </summary>
            <param name="text">Text to be logged.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Info(System.String,System.Object[])">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Info.
            </summary>
            <param name="text">Text to be logged.</param>
            <param name="values">Values to be set in runtime for string.format text.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Warning(System.String)">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Warning.
            </summary>
            <param name="text">Text to be logged.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Warning(System.String,System.Object[])">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Warning.
            </summary>
            <param name="text">Text to be logged.</param>
            <param name="values">Values to be set in runtime for string.format text.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Warning(System.String,System.Exception)">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Warning.
            </summary>
            <param name="text">Text to be logged.</param>
            <param name="ex"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Error(System.String)">
            <summary>
            Log any text with the error tag.
            </summary>
            <param name="text">Text to be logged.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Error(System.String,System.Object[])">
            <summary>
            Log any text with the error tag.
            </summary>
            <param name="text">Text to be logged.</param>
            <param name="values"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Error(System.String,System.Exception)">
            <summary>
            Log any text with the given values to replace the format strings only if the logger level is Warning.
            </summary>
            <param name="text"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PoncheToolkit.Util.Logger.Error(System.String,System.Exception,System.Object[])">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="ex"></param>
            <param name="values"></param>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute">
            <summary>
            Main attribute to enable custom serialization.
            Just the parent class must be decorated with this attribute.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute.CurrentType">
            <summary>
            The type of the object to create the instance when deserializing.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute.Log">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute.SerializationKind">
            <summary>
            The current kind of serialization, if all the properties will be serialized or none, so they are individually marked with the <see cref="T:PoncheToolkit.Util.Reflection.PTSerializablePropertyAttribute"/>.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute.ConstructorParamPropertiesNames">
            <summary>
            The names of the properties that will be used as constrctor parameters.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute.#ctor(System.Type,PoncheToolkit.Util.Reflection.SerializationKind,System.String[])">
            <summary>
            Constructor. Needs the type of the class to serialize.
            Check if the type given has a parameterless constructor or a constructor with one <see cref="T:PoncheToolkit.Core.Game11"/> or <see cref="T:PoncheToolkit.Core.Game12"/> paramater.
            </summary>
            <param name="currentType">The current type to be serialized.</param>
            <param name="serializationKind">The current kind of serialization, if all the properties will be serialized or none, so they are individually marked with the <see cref="T:PoncheToolkit.Util.Reflection.PTSerializablePropertyAttribute"/>.</param>
            /// <param name="constructorParamPropertiesNames">The names of the properties that will be used as constrctor parameters.</param>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializableSurrogate">
            <summary>
            Serializable surrogate that implements the serialization and deserialization.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.Log">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Automatically called when serializing.
            </summary>
            <param name="obj">The object to be serialized.</param>
            <param name="info">The Serialization Info.</param>
            <param name="context">The Streaming context.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
            <summary>
            Automatically called when deserializing.
            </summary>
            <param name="obj">The object to be serialized.</param>
            <param name="info">The Serialization Info.</param>
            <param name="context">The Streaming context.</param>
            <param name="selector">The surrogate selector used.</param>
            <returns>The object deserialized.</returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.isFieldValue(System.Runtime.Serialization.SerializationEntry)">
            <summary>
            Method to check if the current entry value is a field
            </summary>
            <param name="currentEntry"></param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializableSurrogateSelector">
            <summary>
            Returns PTSerializableSurrogate for all types marked PTSerializableAttribute
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogateSelector.GetNextSelector">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
            <inheritdoc/>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializablePropertyAttribute">
            <summary>
            Main attribute to tell the engine that the public property or field will be enabled for serialization.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializablePropertyAttribute.#ctor">
            <summary>
            Constrctor.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializationElement">
            <summary>
            Class that represent a single element to be serialized.
            The <see cref="F:PoncheToolkit.Util.Reflection.PTSerializationElement.serializationTree"/> dictionary contain, as the key, the name of the property
            and as the value the value of that property.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.BaseName">
            <summary>
            The name formatted to get the properties to which this element belongs.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.Guid">
            <summary>
            The guid used to identify this element.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.CurrentLevel">
            <summary>
            The current level in the hierarchy tree to obtain its value.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.PropertyInstance">
            <summary>
            The main object from where all the properties are being retrieved.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.Parent">
            <summary>
            The parent of this object. Only if it is not the top element.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.Children">
            <summary>
            The children of this element, this will be filled if the element is a IEnumerable.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializationElement.SerializationTree">
            <summary>
            The values that will be serialized.
            Contain as the key the name of the property
            and as the value the value of that property.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializationElement.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.Reflection.PTSerializer">
            <summary>
            Class that manage the serialization and deserialization of objects.
            The properties or fields that can be serialized must have the attribute <see cref="T:PoncheToolkit.Util.Reflection.PTSerializablePropertyAttribute"/>,
            only these properties will be serialized.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_COMPLEX_TYPE">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_NEW_INSTANCE_LIST">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_LIST_END">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_CONSTRUCTOR_VALUE">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_INSTANCE_PROPERTY_NAME">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_FIELD_VALUE">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            This symbol represents a public field inside a struct or a class.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_OUTER_VALUE">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_LIST_INDEX">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.SYMBOL_PARENT_GUID">
            <summary>
            The custom separator to distinguish between types when serializing and deserializing.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.Reflection.PTSerializer.BEGIN_GUID">
            <summary>
            The default value for the first guid.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.Reflection.PTSerializer.Log">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.#ctor">
            <summary>
            Constructor.
            Silent errors false.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="silentErrors">If the errors like when a class is not marked as serialized are thrown or not.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.Serialize(System.Object)">
            <summary>
            Serialize the given object using the custom serialization.
            Set the file into the output path.
            </summary>
            <param name="instance">The object to be serialized.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.Serialize(System.Object,System.Boolean,System.String)">
            <summary>
            Serialize the given object.
            Set the file into the output path.
            </summary>
            <param name="instance">The object to be serialized.</param>
            <param name="outputPath">The relative output path with file name.</param>
            <param name="saveFile">Value to indicate if the serialized file should be saved in a physical path.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.Deserialize``1(System.String)">
            <summary>
            Deserialize the file from the path given.
            </summary>
            <param name="file">The relative path to the file.</param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">Throws File not found.</exception>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.CreateSerializationTree(System.Object,System.Runtime.Serialization.SerializationInfo@)">
            <summary>
            Create a recursive list with the name of the fields and the values to be serialized and fill the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object.
            This method is automatically called inside the <see cref="M:PoncheToolkit.Util.Reflection.PTSerializableSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/> method,
            that is called when the <see cref="M:PoncheToolkit.Util.Reflection.PTSerializer.Serialize(System.Object)"/> method is invoked.
            </summary>
            <param name="instance">The instance of the object to be serialized.</param>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object to store the values to be serialized.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.assignPropertyTreeRecursive(System.Object,System.Reflection.PropertyInfo,PoncheToolkit.Util.Reflection.PTSerializationElement,System.Runtime.Serialization.SerializationInfo@)">
            <summary>
            Method that add all the values from its properties to the current <see cref="T:PoncheToolkit.Util.Reflection.PTSerializationElement"/> object.
            </summary>
            <param name="instance">The current instance of the object from where the values will be retrieved recuresively.</param>
            <param name="currentProperty">The <see cref="T:System.Reflection.PropertyInfo"/> object of the current property evaluated. Null for the root element.</param>
            <param name="parent">The parent of the current processed element. Null for the root element.</param>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object to store the values to be serialized.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.createPropertiesTree(System.Object,System.Collections.Generic.List{System.Reflection.PropertyInfo},PoncheToolkit.Util.Reflection.PTSerializationElement@,System.String,System.Runtime.Serialization.SerializationInfo@)">
            <summary>
            Method that add all the values from its properties to the current <see cref="T:PoncheToolkit.Util.Reflection.PTSerializationElement"/> object.
            </summary>
            <param name="instance">The current instance of the object where the values will be retrieved.</param>
            <param name="properties">The <see cref="T:System.Reflection.PropertyInfo"/> list that contain the information from all the properties to be evaluated.</param>
            <param name="current">The current instance of the serialization element to store the retrieved information.</param>
            <param name="parentGuid">The guid of the current parent.</param>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object to store the values to be serialized.</param>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.nextGuid">
            <summary>
            Get the guid for the next key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.IsSimpleType(System.Type)">
            <summary>
            Get if the type provided is simple type.
            This is if the type is primitive, enum, string or decimal.
            </summary>
            <param name="type">The type to evaluate.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.IsStruct(System.Type)">
            <summary>
            Check if the given type is a value type. This is a struct.
            </summary>
            <param name="type">The type to evaluate.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.IsList(System.Type)">
            <summary>
            Check if the given type is a generic <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <param name="type">The type to evaluate.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.getSerializableProperties(System.Type)">
            <summary>
            Get the properties that has the PTSerializableAttribute attribute for a given type.
            </summary>
            <param name="type">The type to get the properties from.</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.Reflection.PTSerializer.isSerializableClass(PoncheToolkit.Util.Reflection.PTSerializationElement,System.Reflection.PropertyInfo,System.Object,System.Runtime.Serialization.SerializationInfo@)">
            <summary>
            Get if the type given is decorated with the <see cref="T:PoncheToolkit.Util.Reflection.PTSerializableClassAttribute"/> attribute.
            </summary>
            <param name="current">The current <see cref="T:PoncheToolkit.Util.Reflection.PTSerializationElement"/> object.</param>
            <param name="currentProp">The current property processed.</param>
            <param name="currentInstance">The current instance to process.</param>
            <param name="info">The Serialization info.</param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.Util.UpdatableStateObject">
            <summary>
            Class that represent an object that can have properties that will be notified upon any change.
            The new properties are added to the <see cref="P:PoncheToolkit.Util.UpdatableStateObject.DirtyProperties"/> list so they can be updated when the <see cref="M:PoncheToolkit.Util.UpdatableStateObject.UpdateState"/> method is called.
            When inheriting from this class, all the properties set with the <see cref="M:PoncheToolkit.Util.UpdatableStateObject.SetPropertyAsDirty``1(``0@,``0,System.String,System.Boolean)"/> will be automatically
            set as changed, so the <see cref="T:PoncheToolkit.Core.Game11"/> class will update its status as soon as possible.
            If a manual check need to be made for a determined property, it must be made using the <see cref="P:PoncheToolkit.Util.UpdatableStateObject.DirtyProperties"/> dictionary, 
            and the key to search can be made using the C# 6 'nameof(Property)' expression.
            </summary>
        </member>
        <member name="P:PoncheToolkit.Util.UpdatableStateObject.DirtyProperties">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Util.UpdatableStateObject.IsStateUpdated">
            <inheritdoc/>
        </member>
        <member name="P:PoncheToolkit.Util.UpdatableStateObject.Log">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Util.UpdatableStateObject.OnPropertyChangedEvent">
            <inheritdoc/>
        </member>
        <member name="E:PoncheToolkit.Util.UpdatableStateObject.OnStateUpdatedEvent">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.UpdateState">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.ToDispose``1(``0)">
            <summary>
            Add an element to the list of objects that will be destroyed when the Dispose method is called.
            </summary>
            <param name="disposable"></param>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.SetPropertyAsDirty``1(``0@,``0,System.String,System.Boolean)">
            <summary>
            Checks if a property already matches a desired value.  Sets the property and
            notifies listeners only when necessary.
            If the property is new, it will be set as dirty, and added using the <see cref="M:PoncheToolkit.Core.Game11.AddDirtyObject(PoncheToolkit.Core.IUpdatableState)"/> method.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="field">Reference to a property with both getter and setter.</param>
            <param name="value">Desired value for the property.</param>
            <param name="propertyName">
                Name of the property used to notify listeners.  This
                value is optional and can be provided automatically when invoked from compilers that
                support CallerMemberName.
            </param>
            <param name="addDirtyObject">Set if when changing a property, it adds this UpdatableObject to the list of DirtyObjects
            from the <see cref="T:PoncheToolkit.Core.Game11"/> instance. There the dirty objects will automatically update their dirty properties.
            This can be set to false when changing properties in the <see cref="T:PoncheToolkit.Core.Game11"/> class, so it is not looped inside the UpdateState method.</param>
            <returns>
                True if the value was changed, false if the existing value matched the
                desired value.
            </returns>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Just set the property without any other validation or notification.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="field">Reference to a property with both getter and setter.</param>
            <param name="value">Desired value for the property.</param>
            <param name="propertyName">
                Name of the property used to notify listeners.  This
                value is optional and can be provided automatically when invoked from compilers that
                support CallerMemberName.
            </param>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.OnPropertyChanged(System.Object,System.String)">
            <summary>
            Method to call the property changed event.
            </summary>
            <param name="sender"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.OnStateUpdated(System.EventArgs)">
            <summary>
            Method to call the State Updated event.
            This event add the object to the DirtyObjects of the <see cref="T:PoncheToolkit.Core.Game"/> class.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.Clone``1">
            <summary>
            Clone the object calling the native <see cref="M:System.Object.MemberwiseClone"/> method.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.UpdatableStateObject.addDirtyProperty``1(System.String,``0@,System.Boolean)">
            <summary>
            Add a new dirty property to the properties that will be updated the next time the UpdateState is called.
            </summary>
            <param name="propertyName"></param>
            <param name="addDirtyObject">See the description from the <see cref="M:PoncheToolkit.Util.UpdatableStateObject.SetPropertyAsDirty``1(``0@,``0,System.String,System.Boolean)"/> </param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="T:PoncheToolkit.Util.WICHelper">
            <summary>
            Class that contain methods to load textures into memory.
            </summary>
        </member>
        <member name="T:PoncheToolkit.Util.WICHelper.SupportedImageTypes">
            <summary>
            Enumeration with the supported image types to decode or encode.
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Jpeg">
            <summary>
            Jpg
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Bmp">
            <summary>
            Bmp
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Png">
            <summary>
            Png
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Dds">
            <summary>
            Dds
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Tiff">
            <summary>
            Tiff
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Ico">
            <summary>
            Ico
            </summary>
        </member>
        <member name="F:PoncheToolkit.Util.WICHelper.SupportedImageTypes.Gif">
            <summary>
            Gif
            </summary>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadBitmapSource(System.String)">
            <summary>
            Loads a bitmap using WIC.
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadBitmapSource(SharpDX.WIC.BitmapDecoder,SharpDX.Direct2D1.DeviceContext,SharpDX.Direct2D1.Bitmap@)">
            <summary>
            Loads a bitmap source using WIC.
            Creates a <see cref="T:SharpDX.Direct2D1.Bitmap1"/>.
            </summary>
            <param name="bitmapDecoder"></param>
            <param name="context">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> used to create the bitmap.</param>
            <param name="bitmap">The out bitmap created from the BitmapSource</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadBitmapSource(SharpDX.WIC.BitmapDecoder,SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap@)">
            <summary>
            Loads a bitmap source using WIC.
            Creates a <see cref="T:SharpDX.Direct2D1.Bitmap1"/>.
            </summary>
            <param name="bitmapDecoder"></param>
            <param name="renderTarget">The <see cref="T:SharpDX.Direct2D1.RenderTarget"/> used to create the bitmap.</param>
            <param name="bitmap">The out bitmap created from the BitmapSource</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadBitmapSource(PoncheToolkit.Util.WICHelper.SupportedImageTypes,SharpDX.IO.NativeFileStream)">
            <summary>
            Loads a bitmap using WIC.
            </summary>
            <param name="type"></param>
            <param name="filestream"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.CreateBitmap(SharpDX.Direct2D1.DeviceContext,System.String)">
            <summary>
            Loads a bitmap for the specified <see cref="T:SharpDX.Direct2D1.DeviceContext"/> using WIC.
            </summary>
            <param name="context">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> context to be used when rendering this bitmap.</param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.CreateTexture2DFromBitmap(SharpDX.Direct3D11.Device,SharpDX.WIC.BitmapSource,System.Boolean)">
            <summary>
            Creates a <see cref="T:SharpDX.Direct3D11.Texture2D"/> from a WIC <see cref="T:SharpDX.WIC.BitmapSource"/>
            </summary>
            <param name="device">The Direct3D11 device</param>
            <param name="bitmapSource">The WIC bitmap source</param>
            <param name="generateMipMaps">Set to true if mip maps will be created for this texture.</param>
            <returns>A Texture2D</returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.CreateTexture2DFromBitmap(SharpDX.Direct3D11.Device,System.Collections.Generic.List{SharpDX.WIC.BitmapSource},System.Boolean)">
            <summary>
            Creates a <see cref="T:SharpDX.Direct3D11.Texture2D"/> from a WIC <see cref="T:SharpDX.WIC.BitmapSource"/>
            </summary>
            <param name="device">The Direct3D11 device</param>
            <param name="bitmapSources">The WIC bitmap sources</param>
            <returns>A Texture2D</returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadTextureFromFile(SharpDX.Direct3D11.Device,System.String,System.Boolean)">
            <summary>
            Load a Texture from file name.
            </summary>
            <param name="device"></param>
            <param name="fileName">The path and name of the file.</param>
            <param name="generateMipMaps">If the texture will generate mip maps.</param>
            <returns>Return a custom Texture2D PoncheToolkit object with the texture inside.</returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadTextureFromFile(SharpDX.Direct3D11.Device,SharpDX.Direct2D1.DeviceContext,System.Boolean,System.String[])">
            <summary>
            Load a Texture from file name.
            </summary>
            <param name="device"></param>
            <param name="context">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> to be used to load the Bitmap.</param>
            <param name="texturePaths">The array with the file names to create as a Texture2D array.</param>
            <param name="generateMipMaps">If the texture will generate mip maps.</param>
            <returns>Return a custom Texture2D PoncheToolkit object with the texture inside.</returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.LoadTextureFromFile(SharpDX.Direct3D11.Device,SharpDX.Direct2D1.DeviceContext,System.String,System.Boolean)">
            <summary>
            Load a Texture from file name.
            Create the Bitmap for the <see cref="T:PoncheToolkit.Graphics2D.PTTexture2D"/>.
            </summary>
            <param name="device"></param>
            <param name="context2D">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> to be used to load the Bitmap.</param>
            <param name="fileName">File name of the texture to be loaded.</param>
            <param name="generateMipMaps">If the texture will generate mip maps.</param>
            <returns>Return a custom Texture2D PoncheToolkit object with the texture inside.</returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.SaveTexture(SharpDX.Direct2D1.Device,SharpDX.Direct2D1.Image,System.String,SharpDX.Rectangle)">
            <summary>
            Save a texture to the given output path.
            </summary>
            <param name="device">The <see cref="T:SharpDX.Direct2D1.DeviceContext"/> where the image will be saved.</param>
            <param name="target">The rendered image to save.</param>
            <param name="outputPath">The physical path where the image will be saved.</param>
            <param name="boundaries">The size of the output image.</param>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.GetDecoder(System.String)">
            <summary>
            Get the correct BitmapEncoder by its guid.
            Get <see cref="T:PoncheToolkit.Util.WICHelper.SupportedImageTypes"/> by its extension.
            </summary>
            <param name="type"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.GetDecoder(PoncheToolkit.Util.WICHelper.SupportedImageTypes,SharpDX.IO.NativeFileStream)">
            <summary>
            Get the correct BitmapEncoder by its guid.
            </summary>
            <param name="type"></param>
            <param name="fileStream">The filestream of the file</param>
            <returns></returns>
        </member>
        <member name="M:PoncheToolkit.Util.WICHelper.GetDecoder(PoncheToolkit.Util.WICHelper.SupportedImageTypes,System.String)">
            <summary>
            Get the correct BitmapEncoder by its guid.
            </summary>
            <param name="type"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="T:PoncheToolkit.ShaderType">
            <summary>
            Type of shaders supported.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShaderType.Pixel">
            <summary>
            Pixel shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShaderType.Vertex">
            <summary>
            Vertex shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShaderType.Tessel">
            <summary>
            Tesselation shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShaderType.Hull">
            <summary>
            Hull shader.
            </summary>
        </member>
        <member name="T:PoncheToolkit.BlendingState">
            <summary>
            The blending type used by the <see cref="T:PoncheToolkit.Core.Game11"/>.
            Change it by calling <see cref="M:PoncheToolkit.Core.Game.ToggleBlending(PoncheToolkit.BlendingState)"/> 
            </summary>
        </member>
        <member name="F:PoncheToolkit.BlendingState.Disabled">
            <summary>
            No Blending used.
            </summary>
        </member>
        <member name="F:PoncheToolkit.BlendingState.AlphaBlending">
            <summary>
            Alpha blending will be used.
            </summary>
        </member>
        <member name="F:PoncheToolkit.BlendingState.AdditiveBlending">
            <summary>
            Mainly used when using multipasses.
            </summary>
        </member>
        <member name="T:PoncheToolkit.ContentType">
            <summary>
            The type of content accepted by the engine.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ContentType.Effect">
            <summary>
            Represent a .fx effect file.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ContentType.Texture2D">
            <summary>
            A Texture.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ContentType.Model3D">
            <summary>
            A 3D Model.
            </summary>
        </member>
        <member name="T:PoncheToolkit.CameraType">
            <summary>
            The types of existing cameras.
            </summary>
        </member>
        <member name="F:PoncheToolkit.CameraType.Main">
            <summary>
            The main camera used.
            </summary>
        </member>
        <member name="F:PoncheToolkit.CameraType.Reflective">
            <summary>
            Type of camera used for rendering the scene for a reflective material over a specific model.
            </summary>
        </member>
        <member name="T:PoncheToolkit.ProcessRenderingMode">
            <summary>
            Set the type of rendering used.
            By default the <see cref="F:PoncheToolkit.ProcessRenderingMode.Immediate"/> rendering will be used.
            The <see cref="F:PoncheToolkit.ProcessRenderingMode.MultiThread"/> rendering can be used - if the gpu driver supports it - so
            the Engine group the meshes to be rendered and use different threads and 
            <see cref="T:SharpDX.Direct3D11.CommandList"/> or <see cref="T:SharpDX.Direct3D12.CommandList"/> to send info to the gpu.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ProcessRenderingMode.Immediate">
            <summary>
            Use only one thread and one context for rendering.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ProcessRenderingMode.MultiThread">
            <summary>
            Use multiple threads and multiple contexts for rendering.
            </summary>
        </member>
        <member name="T:PoncheToolkit.ShadingRenderingMode">
            <summary>
            The rendering technique for the entire Engine.
            Define the algorithm used to render dynamic lights, shadowing, etc.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShadingRenderingMode.ForwardShading">
            <summary>
            Basic implementation for rendering dynamic lights.
            It just loop through all the lights to be applied to all materials.
            <para>
            This is the slowest method. In modern hardware, more less 15 dynamic lights can be rendered at the same time.
            15 Lights is the MAX settings for this type of rendering.
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShadingRenderingMode.ClusteredForwardShading">
            <summary>
            This method is an evolution of the TiledShading, so this converts the tiles (2D) to clusters (3D) so the depth is
            inherently incorporated and the depth discontinuities are solved in a better way. Also when using many lights (thousands)
            it performs better.
            <para>
            The only con it has, is the creation of the clusters, but even this calculation is faster that the "Z-prepass" needed for tiledShading.
            It supports like 1024 dynamic lights and it can be optimized more in the future.
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShadingRenderingMode.Custom1">
            <summary>
            This will be used if a custom propietary algorithm wants to be used.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShadingRenderingMode.Custom2">
            <summary>
            This will be used if a custom propietary algorithm wants to be used.
            </summary>
        </member>
        <member name="F:PoncheToolkit.ShadingRenderingMode.Custom3">
            <summary>
            This will be used if a custom propietary algorithm wants to be used.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpPrimitiveType">
            <summary>
            Enumerates geometric primitive types.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPrimitiveType.Point">
            <summary>
            Point primitive. This is just a single vertex
            in the virtual world. A face has one index for such a primitive.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPrimitiveType.Line">
            <summary>
            Line primitive. This is  a line defined through a start and an
            end position. A face contains exactly two indices for such a primitive.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPrimitiveType.Triangle">
            <summary>
            Triangle primitive, consisting of three indices.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPrimitiveType.Polygon">
            <summary>
            A n-Gon that has more than three edges (thus is not a triangle).
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpUVTransformFlags">
            <summary>
            Defines how UV coordinates should be transformed.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpUVTransformFlags.Scaling">
            <summary>
            Scaling is evaluated.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpUVTransformFlags.Rotation">
            <summary>
            Rotation is evaluated.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpUVTransformFlags.Translation">
            <summary>
            Translation is evaluated.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpTextureFlags">
            <summary>
            Defines some mixed flags for a particular texture. This corresponds
            to the AI_MAT_KEY_TEXFLAGS property.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureFlags.Invert">
            <summary>
            The texture's color values have to be inverted (componentwise 1-n).
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureFlags.UseAlpha">
            <summary>
            Explicit request to the application to process the alpha channel of the texture. This is mutually
            exclusive with <see cref="F:PoncheToolkit.AssimpTextureFlags.IgnoreAlpha"/>. These flags are
            set if the library can say for sure that the alpha channel is used/is not used.
            If the model format does not define this, iti s left to the application to decide
            whether the texture alpha channel - if any - is evaluated or not.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureFlags.IgnoreAlpha">
            <summary>
            Explicit request to the application to ignore the alpha channel of the texture. This is mutually
            exclusive with <see cref="F:PoncheToolkit.AssimpTextureFlags.UseAlpha"/>.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpTextureWrapMode">
            <summary>
            Defines how UV coordinates outside the [0..1] range are handled. Commonly
            referred to as the 'wrapping mode'
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureWrapMode.Wrap">
            <summary>
            A texture coordinate u|v is translated to u % 1| v % 1.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureWrapMode.Clamp">
            <summary>
            Texture coordinates outside [0...1] are clamped to the nearest valid value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureWrapMode.Mirror">
            <summary>
            A texture coordinate u|v becomes u1|v1 if (u - (u % 1)) % 2 is zero
            and 1 - (u % 1) | 1 - (v % 1) otherwise.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureWrapMode.Decal">
            <summary>
            If the texture coordinates for a pixel are outside [0...1] the texture is not
            applied to that pixel.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpTextureMapping">
            <summary>
            Defines how texture coordinates are generated
            <para>
            Real-time applications typically require full UV coordinates. So the use
            of <see cref="F:Assimp.PostProcessSteps.GenerateUVCoords"/> step is highly recommended.
            It generates proper UV channels for non-UV mapped objects, as long as an accurate
            description of how the mapping should look like is given.
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.FromUV">
            <summary>
            Coordinates are taken from the an existing UV channel.
            <para>
            The AI_MATKEY_UVWSRC key specifies from the UV channel the texture coordinates
            are to be taken from since meshes can have more than one UV channel.
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.Sphere">
            <summary>
            Spherical mapping
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.Cylinder">
            <summary>
            Cylinder mapping
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.Box">
            <summary>
            Cubic mapping
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.Plane">
            <summary>
            Planar mapping
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureMapping.Unknown">
            <summary>
            Unknown mapping that is not recognied.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpTextureType">
            <summary>
            Defines the purpose of a texture.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.None">
            <summary>
            No texture, but the value can be used as a 'texture semantic'.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Diffuse">
            <summary>
            A diffuse texture that is combined with the result of the diffuse lighting equation.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Specular">
            <summary>
            A specular texture that is combined with the result of the specular lighting equation.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Ambient">
            <summary>
            An ambient texture that is combined with the ambient lighting equation.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Emissive">
            <summary>
            An emissive texture that is added to the result of the lighting calculation. It is not influenced
            by incoming light, instead it represents the light that the object is naturally emitting.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Height">
            <summary>
            A height map texture. by convention, higher gray-scale values stand for
            higher elevations from some base height.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Normals">
            <summary>
            A tangent-space normal map. There are several conventions for normal maps
            and Assimp does (intentionally) not distinguish here.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Shininess">
            <summary>
            A texture that defines the glossiness of the material. This is the exponent of the specular (phong)
            lighting equation. Usually there is a conversion function defined to map the linear color values
            in the texture to a suitable exponent.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Opacity">
            <summary>
            The texture defines per-pixel opacity. usually 'white' means opaque and 'black' means 'transparency. Or quite
            the opposite.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Displacement">
            <summary>
            A displacement texture. The exact purpose and format is application-dependent. Higher color values stand for higher vertex displacements.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Lightmap">
            <summary>
            A lightmap texture (aka Ambient occlusion). Both 'lightmaps' and dedicated 'ambient occlusion maps' are covered by this material property. The
            texture contains a scaling value for the final color value of a pixel. Its intensity is not affected by incoming light.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Reflection">
            <summary>
            A reflection texture. Contains the color of a perfect mirror reflection. This is rarely used, almost never for real-time applications.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpTextureType.Unknown">
            <summary>
            An unknown texture that does not mention any of the defined texture type definitions. It is still imported, but is excluded from any
            further postprocessing.
            </summary>
        </member>
        <member name="T:PoncheToolkit.assimpTextureOperation">
            <summary>
            Defines how the Nth texture of a specific type is combined
            with the result of all previous layers.
            <para>
            Example (left: key, right: value):
            <code>
            DiffColor0     - gray
            DiffTextureOp0 - TextureOperation.Multiply
            DiffTexture0   - tex1.png
            DiffTextureOp0 - TextureOperation.Add
            DiffTexture1   - tex2.png
            </code>
            <para>
            Written as an equation, the final diffuse term for a specific
            pixel would be:
            </para>
            <code>
            diffFinal = DiffColor0 * sampleTex(DiffTexture0, UV0) + sampleTex(DiffTexture1, UV0) * diffContrib;
            </code>
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.Multiply">
            <summary>
            T = T1 * T2
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.Add">
            <summary>
            T = T1 + T2
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.Subtract">
            <summary>
            T = T1 - T2
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.Divide">
            <summary>
            T = T1 / T2
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.SmoothAdd">
            <summary>
            T = (T1 + T2) - (T1 * T2)
            </summary>
        </member>
        <member name="F:PoncheToolkit.assimpTextureOperation.SignedAdd">
            <summary>
            T = T1 + (T2 - 0.5)
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpPropertyType">
            <summary>
            Defines material property types.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPropertyType.Float">
            <summary>
            Array of single-precision (32 bit) floats.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPropertyType.String">
            <summary>
            Property is a string.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPropertyType.Integer">
            <summary>
            Array of 32 bit integers.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpPropertyType.Buffer">
            <summary>
            Byte buffer where the content is undefined.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpShadingMode">
            <summary>
            Defines all shading models supported by the library.
            <para>
            The list of shading modes has been taken from Blender. See Blender
            documentation for more information.
            </para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.None">
            <summary>
            No shading mode defined.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Flat">
            <summary>
            Flat shading. Shading is done on a per-face basis and is diffuse only. Also known
            as 'faceted shading'.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Gouraud">
            <summary>
            Simple Gouraud shading.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Phong">
            <summary>
            Phong Shading.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Blinn">
            <summary>
            Phong-Blinn Shading.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Toon">
            <summary>
            Toon-shading, also known as a 'comic' shader.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.OrenNayar">
            <summary>
            OrenNayer shading model. Extension to standard Lambertian shading, taking the roughness
            of the material into account.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Minnaert">
            <summary>
            Minnaert shading model. Extension to standard Lambertian shading, taking the "darkness" of
            the material into account.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.CookTorrance">
            <summary>
            CookTorrance shading model. Special shader for metallic surfaces.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.NoShading">
            <summary>
            No shading at all. Constant light influence of 1.0.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpShadingMode.Fresnel">
            <summary>
            Fresnel shading.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpBlendMode">
            <summary>
            Defines alpha blending flags, how the final
            color value of a pixel is computed, based on the following equation:
            <para>
            sourceColor * sourceBlend + destColor * destBlend
            </para>
            <para>
            Where the destColor is the previous color in the frame buffer
            and sourceColor is the material color before the
            transparency calculation. This corresponds to the AI_MATKEY_BLEND_FUNC property.</para>
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpBlendMode.Default">
            <summary>
            Default blending: sourceColor * sourceAlpha + destColor * (1 - sourceAlpha)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpBlendMode.Additive">
            <summary>
            Additive blending: sourcecolor * 1 + destColor * 1.
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpConstants">
            <summary>
            Constant values.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_SLM_DEFAULT_MAX_TRIANGLES">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_SLM_DEFAULT_MAX_VERTICES">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_LBW_MAX_WEIGHTS">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.PP_ICL_PTCACHE_SIZE">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_UVTRAFO_ALL">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_FACE_INDICES">
            <summary>
            Defines the maximum number of indices per face (polygon).
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_BONE_WEIGHTS">
            <summary>
            Defines the maximum number of bone weights.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_VERTICES">
            <summary>
            Defines the maximum number of vertices per mesh.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_FACES">
            <summary>
            Defines the maximum number of faces per mesh.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_NUMBER_OF_COLOR_SETS">
            <summary>
            Defines the maximum number of vertex color sets per mesh.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_MAX_NUMBER_OF_TEXTURECOORDS">
            <summary>
            Defines the maximum number of texture coordinate sets (UV(W) channels) per mesh.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_SBBC_DEFAULT_MAX_BONES">
            <summary>
            Defines the default bone count limit.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_DEBONE_THRESHOLD">
            <summary>
            Defines the deboning threshold.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.MAX_LENGTH">
            <summary>
            Defines the maximum length of a string used in AiString.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_DEFAULT_MATERIAL_NAME">
            <summary>
            Defines the default color material.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpConstants.AI_DEFAULT_TEXTURED_MATERIAL_NAME">
            <summary>
            Defines the default textured material (if the meshes have UV coords).
            </summary>
        </member>
        <member name="T:PoncheToolkit.AssimpMaterialKeys">
            <summary>
            Static class containing material key constants. A fully qualified mat key
            name here means that it's a string that combines the mat key (base) name, its
            texture type semantic, and its texture index into a single string delimited by
            commas. For non-texture material properties, the texture type semantic and texture
            index are always zero.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.NAME_BASE">
            <summary>
            Material name (string)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.NAME">
            <summary>
            Material name (string)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TWOSIDED_BASE">
            <summary>
            Two sided property (boolean)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TWOSIDED">
            <summary>
            Two sided property (boolean)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHADING_MODEL_BASE">
            <summary>
            Shading mode property (ShadingMode)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHADING_MODEL">
            <summary>
            Shading mode property (ShadingMode)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.ENABLE_WIREFRAME_BASE">
            <summary>
            Enable wireframe property (boolean)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.ENABLE_WIREFRAME">
            <summary>
            Enable wireframe property (boolean)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.BLEND_FUNC_BASE">
            <summary>
            Blending function (BlendMode)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.BLEND_FUNC">
            <summary>
            Blending function (BlendMode)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.OPACITY_BASE">
            <summary>
            Opacity (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.OPACITY">
            <summary>
            Opacity (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.BUMPSCALING_BASE">
            <summary>
            Bumpscaling (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.BUMPSCALING">
            <summary>
            Bumpscaling (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHININESS_BASE">
            <summary>
            Shininess (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHININESS">
            <summary>
            Shininess (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.REFLECTIVITY_BASE">
            <summary>
            Reflectivity (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.REFLECTIVITY">
            <summary>
            Reflectivity (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHININESS_STRENGTH_BASE">
            <summary>
            Shininess strength (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.SHININESS_STRENGTH">
            <summary>
            Shininess strength (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.REFRACTI_BASE">
            <summary>
            Refracti (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.REFRACTI">
            <summary>
            Refracti (float)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_DIFFUSE_BASE">
            <summary>
            Diffuse color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_DIFFUSE">
            <summary>
            Diffuse color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_AMBIENT_BASE">
            <summary>
            Ambient color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_AMBIENT">
            <summary>
            Ambient color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_SPECULAR_BASE">
            <summary>
            Specular color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_SPECULAR">
            <summary>
            Specular color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_EMISSIVE_BASE">
            <summary>
            Emissive color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_EMISSIVE">
            <summary>
            Emissive color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_TRANSPARENT_BASE">
            <summary>
            Transparent color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_TRANSPARENT">
            <summary>
            Transparent color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_REFLECTIVE_BASE">
            <summary>
            Reflective color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.COLOR_REFLECTIVE">
            <summary>
            Reflective color (Color4D)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.GLOBAL_BACKGROUND_IMAGE_BASE">
            <summary>
            Background image (string)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.GLOBAL_BACKGROUND_IMAGE">
            <summary>
            Background image (string)
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TEXTURE_BASE">
            <summary>
            Texture base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.UVWSRC_BASE">
            <summary>
            UVWSRC base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TEXOP_BASE">
            <summary>
            Texture op base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.MAPPING_BASE">
            <summary>
            Mapping base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TEXBLEND_BASE">
            <summary>
            Texture blend base name.
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.MAPPINGMODE_U_BASE">
            <summary>
            Mapping mode U base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.MAPPINGMODE_V_BASE">
            <summary>
            Mapping mode V base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TEXMAP_AXIS_BASE">
            <summary>
            Texture map axis base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.UVTRANSFORM_BASE">
            <summary>
            UV transform base name
            </summary>
        </member>
        <member name="F:PoncheToolkit.AssimpMaterialKeys.TEXFLAGS_BASE">
            <summary>
            Texture flags base name
            </summary>
        </member>
        <member name="M:PoncheToolkit.AssimpMaterialKeys.GetFullTextureName(System.String,PoncheToolkit.AssimpTextureType,System.Int32)">
            <summary>
            Helper function to get the fully qualified name of a texture property type name. Takes
            in a base name constant, a texture type, and a texture index and outputs the name in the format:
            <para>"baseName,TextureType,texIndex"</para>
            </summary>
            <param name="baseName">Base name</param>
            <param name="texType">Texture type</param>
            <param name="texIndex">Texture index</param>
            <returns>Fully qualified texture name</returns>
        </member>
        <member name="M:PoncheToolkit.AssimpMaterialKeys.GetBaseName(System.String)">
            <summary>
            Helper function to get the base name from a fully qualified name of a material property type name. The format
            of such a string is:
            <para>"baseName,TextureType,texIndex"</para>
            </summary>
            <param name="fullyQualifiedName">Fully qualified material property name.</param>
            <returns>Base name of the property type.</returns>
        </member>
        <member name="T:Core.Management.Text.CustomFontFileEnumerator">
            <summary>
            Resource FontFileEnumerator.
            </summary>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileEnumerator.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.FontFileLoader,SharpDX.DataPointer)">
            <summary>
            Initializes a new instance of the <see cref="T:Core.Management.Text.CustomFontFileEnumerator"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="loader">The loader.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileEnumerator.SharpDX#DirectWrite#FontFileEnumerator#MoveNext">
            <summary>
            Advances to the next font file in the collection. When it is first created, the enumerator is positioned before the first element of the collection and the first call to MoveNext advances to the first file.
            </summary>
            <returns>
            the value TRUE if the enumerator advances to a file; otherwise, FALSE if the enumerator advances past the last file in the collection.
            </returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::MoveNext([Out] BOOL* hasCurrentFile)</unmanaged>
        </member>
        <member name="P:Core.Management.Text.CustomFontFileEnumerator.SharpDX#DirectWrite#FontFileEnumerator#CurrentFontFile">
            <summary>
            Gets a reference to the current font file.
            </summary>
            <value></value>
            <returns>a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFile"/> object.</returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::GetCurrentFontFile([Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="T:Core.Management.Text.CustomFontFileStream">
            <summary>
            This FontFileStream implem is reading data from a <see cref="T:SharpDX.DataStream"/>.
            </summary>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileStream.#ctor(SharpDX.DataStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Core.Management.Text.CustomFontFileStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileStream.SharpDX#DirectWrite#FontFileStream#ReadFileFragment(System.IntPtr@,System.Int64,System.Int64,System.IntPtr@)">
            <summary>
            Reads a fragment from a font file.
            </summary>
            <param name="fragmentStart">When this method returns, contains an address of a  reference to the start of the font file fragment.  This parameter is passed uninitialized.</param>
            <param name="fileOffset">The offset of the fragment, in bytes, from the beginning of the font file.</param>
            <param name="fragmentSize">The size of the file fragment, in bytes.</param>
            <param name="fragmentContext">When this method returns, contains the address of</param>
            <remarks>
            Note that ReadFileFragment implementations must check whether the requested font file fragment is within the file bounds. Otherwise, an error should be returned from ReadFileFragment.   {{DirectWrite}} may invoke <see cref="T:SharpDX.DirectWrite.FontFileStream"/> methods on the same object from multiple threads simultaneously. Therefore, ReadFileFragment implementations that rely on internal mutable state must serialize access to such state across multiple threads. For example, an implementation that uses separate Seek and Read operations to read a file fragment must place the code block containing Seek and Read calls under a lock or a critical section.
            </remarks>
            <unmanaged>HRESULT IDWriteFontFileStream::ReadFileFragment([Out, Buffer] const void** fragmentStart,[None] __int64 fileOffset,[None] __int64 fragmentSize,[Out] void** fragmentContext)</unmanaged>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileStream.SharpDX#DirectWrite#FontFileStream#ReleaseFileFragment(System.IntPtr)">
            <summary>
            Releases a fragment from a file.
            </summary>
            <param name="fragmentContext">A reference to the client-defined context of a font fragment returned from {{ReadFileFragment}}.</param>
            <unmanaged>void IDWriteFontFileStream::ReleaseFileFragment([None] void* fragmentContext)</unmanaged>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileStream.SharpDX#DirectWrite#FontFileStream#GetFileSize">
            <summary>
            Obtains the total size of a file.
            </summary>
            <returns>the total size of the file.</returns>
            <remarks>
            Implementing GetFileSize() for asynchronously loaded font files may require downloading the complete file contents. Therefore, this method should be used only for operations that either require a complete font file to be loaded (for example, copying a font file) or that need to make decisions based on the value of the file size (for example, validation against a persisted file size).
            </remarks>
            <unmanaged>HRESULT IDWriteFontFileStream::GetFileSize([Out] __int64* fileSize)</unmanaged>
        </member>
        <member name="M:Core.Management.Text.CustomFontFileStream.SharpDX#DirectWrite#FontFileStream#GetLastWriteTime">
            <summary>
            Obtains the last modified time of the file.
            </summary>
            <returns>
            the last modified time of the file in the format that represents the number of 100-nanosecond intervals since January 1, 1601 (UTC).
            </returns>
            <remarks>
            The "last modified time" is used by DirectWrite font selection algorithms to determine whether one font resource is more up to date than another one.
            </remarks>
            <unmanaged>HRESULT IDWriteFontFileStream::GetLastWriteTime([Out] __int64* lastWriteTime)</unmanaged>
        </member>
        <member name="T:Core.Management.Text.CustomFontLoader">
            <summary>
            ResourceFont main loader. This classes implements FontCollectionLoader and FontFileLoader.
            It reads all fonts embedded as resource in the current assembly and expose them.
            </summary>
        </member>
        <member name="E:Core.Management.Text.CustomFontLoader.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Core.Management.Text.CustomFontLoader.#ctor(PoncheToolkit.Core.Game,SharpDX.DirectWrite.Factory,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Core.Management.Text.CustomFontLoader"/> class.
            </summary>
            <param name="game">The game instance.</param>
            <param name="factory">The factory.</param>
            <param name="fontsPath">The path to load the True Type (.ttf) fonts from. By default it looks in the "fonts" folder.</param>
        </member>
        <member name="P:Core.Management.Text.CustomFontLoader.Key">
            <summary>
            Gets the key used to identify the FontCollection as well as storing index for fonts.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Core.Management.Text.CustomFontLoader.IsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Core.Management.Text.CustomFontLoader.Log">
            <inheritdoc/>
        </member>
        <member name="M:Core.Management.Text.CustomFontLoader.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Core.Management.Text.CustomFontLoader.SharpDX#DirectWrite#FontCollectionLoader#CreateEnumeratorFromKey(SharpDX.DirectWrite.Factory,SharpDX.DataPointer)">
            <summary>
            Creates a font file enumerator object that encapsulates a collection of font files. The font system calls back to this interface to create a font collection.
            </summary>
            <param name="factory">Pointer to the <see cref="T:SharpDX.DirectWrite.Factory"/> object that was used to create the current font collection.</param>
            <param name="collectionKey">A font collection key that uniquely identifies the collection of font files within the scope of the font collection loader being used. The buffer allocated for this key must be at least  the size, in bytes, specified by collectionKeySize.</param>
            <returns>
            a reference to the newly created font file enumerator.
            </returns>
            <unmanaged>HRESULT IDWriteFontCollectionLoader::CreateEnumeratorFromKey([None] IDWriteFactory* factory,[In, Buffer] const void* collectionKey,[None] int collectionKeySize,[Out] IDWriteFontFileEnumerator** fontFileEnumerator)</unmanaged>
        </member>
        <member name="M:Core.Management.Text.CustomFontLoader.SharpDX#DirectWrite#FontFileLoader#CreateStreamFromKey(SharpDX.DataPointer)">
            <summary>
            Creates a font file stream object that encapsulates an open file resource.
            </summary>
            <param name="fontFileReferenceKey">A reference to a font file reference key that uniquely identifies the font file resource within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by  fontFileReferenceKeySize.</param>
            <returns>
            a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFileStream"/> object.
            </returns>
            <remarks>
            The resource is closed when the last reference to fontFileStream is released.
            </remarks>
            <unmanaged>HRESULT IDWriteFontFileLoader::CreateStreamFromKey([In, Buffer] const void* fontFileReferenceKey,[None] int fontFileReferenceKeySize,[Out] IDWriteFontFileStream** fontFileStream)</unmanaged>
        </member>
    </members>
</doc>
